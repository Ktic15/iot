[
    {
        "id": "e3e9f299573743ff",
        "type": "tab",
        "label": "W2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95dc624a00aec369",
        "type": "tab",
        "label": "W10",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9fdeb7814f35d935",
        "type": "tab",
        "label": "W29",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6e6223198d98fd21",
        "type": "tab",
        "label": "W30",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "520c4063e05692dd",
        "type": "tab",
        "label": "W34",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "696cd0cc28347921",
        "type": "tab",
        "label": "W13",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f42c845b876af71",
        "type": "tab",
        "label": "W14",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0fa34f030b02f7a",
        "type": "tab",
        "label": "W26",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "0b7d0a8e9b80adfb",
        "type": "tab",
        "label": "W8",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8eb827552b6c5944",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "715d6bc3e5230871",
        "type": "tab",
        "label": "W4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "948382ebdb78ab03",
        "type": "tab",
        "label": "W5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c1424d3bdc57c01c",
        "type": "tab",
        "label": "W15",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e56d2349d41599d9",
        "type": "tab",
        "label": "W17",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "42defa72a5588e63",
        "type": "tab",
        "label": "W32",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "be902db97934f5f9",
        "type": "tab",
        "label": "W19",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e7400a1aef6eeb97",
        "type": "tab",
        "label": "W28",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d57d1b8f5cea3e2",
        "type": "tab",
        "label": "W16",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b89d3508a6c98cc",
        "type": "tab",
        "label": "W12",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "229aa3c142c47a94",
        "type": "tab",
        "label": "W38",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c24da0a76715089f",
        "type": "tab",
        "label": "W31",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f974ef47d19745f8",
        "type": "tab",
        "label": "hourly report",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58a50fa656eaee7f",
        "type": "tab",
        "label": "W22",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9d71bbc66a9f079",
        "type": "tab",
        "label": "W27",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a3e57d984ff8d19b",
        "type": "tab",
        "label": "W3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9139773cfc6432c4",
        "type": "tab",
        "label": "W6",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e57a8f5f6ddceb92",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "10e78a89.5b4fd5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "32c7cbdad91c7ac9",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#343a40",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "ntt",
                "default": "#4B7930",
                "baseColor": "#ffffff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#ffffff",
                    "value": "#ffffff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Graph",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "576ae76f9052f852",
        "type": "postgreSQLConfig",
        "name": "iot",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "iot-project",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "espmqtt",
        "passwordFieldType": "str"
    },
    {
        "id": "a4ea91068db455b2",
        "type": "ui_group",
        "name": "W2",
        "tab": "72c6ac4ae2b88d8d",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f1cccf013cffdcd",
        "type": "ui_tab",
        "name": "W10",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "356c52fa46770ea1",
        "type": "ui_group",
        "name": "W10",
        "tab": "4f1cccf013cffdcd",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "72c6ac4ae2b88d8d",
        "type": "ui_tab",
        "name": "W2",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9b440b04646a8175",
        "type": "ui_tab",
        "name": "W29",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3c90599923c38dcd",
        "type": "ui_group",
        "name": "W29",
        "tab": "9b440b04646a8175",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "97d736db7bd74748",
        "type": "ui_tab",
        "name": "W30",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "77f076411fc8f4b0",
        "type": "ui_group",
        "name": "W30",
        "tab": "97d736db7bd74748",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "995332135d0bd855",
        "type": "ui_tab",
        "name": "W34",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9a569d006e746b26",
        "type": "ui_group",
        "name": "W34",
        "tab": "995332135d0bd855",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a67ba202eb830077",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "8ad599a471deb90d",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "e376b93d68872bcf",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "be3dcce626219cbc",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "09400f2aed687cfb",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b1eb2bbb5bdc42f",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "c7d7ef13b9e07978",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "849032c19ed27b1d",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "079c0d78fb58fa36",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "72a6af91b054344b",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "5255b9c5dd2604ae",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 16,
        "width": 25,
        "height": 1
    },
    {
        "id": "50d9fac19a0f3dbb",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "70cae790eca207ec",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "716f4fe96f356f23",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "a345301af018476e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "75c735f2024719a7",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb34a55a2e79b477",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "6ac6523064a5df4b",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "47624dee871b0750",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "adaebfbdb4578758",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "1e9a94f2c307a4e4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "0b5afa422e2feeb0",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "6cdf49cbc17cd4cf",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "3c90599923c38dcd",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "1278f91930f8a428",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "2a982988ad9ce606",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "5e44891897d2b925",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "98cc8c923383bf7e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "4532bbf01d2a2a90",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "07449e5e1eae89d9",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "ece891d1b01b709e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "bbca9d2ff8d7f464",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "c1b9c11c8cb4c8ef",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "427b66136623eb0e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "7c7424b383e74b02",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 16,
        "width": 25,
        "height": 1
    },
    {
        "id": "f52183bfc1d0db31",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f18d2032032f78e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "c572829f4e551e65",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "daba197be33b075b",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "d33c3d1cd7468334",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "e11f8947bc40f294",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e6ca4e57a40174c",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "c4370631f3c41996",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "33226f3f2a4adce4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "fee3883887be1493",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "44f008093c70fa45",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "77f076411fc8f4b0",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "9fcf0eb33cbf1823",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "57fbfa046c0276ca",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "87b21e616e3508bb",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d0940df48d0d527",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "8c40fb22cd04985e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "91e071ecee93a0f4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "8fb58b5568f6afa4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "7070ac3ff1237cc4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "659e1153502f85c2",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "bc10bd4e20eddccc",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "eb1a79eebb8da427",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 16,
        "width": 25,
        "height": 1
    },
    {
        "id": "483381a85c3da64b",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "274cf67a6aad7d93",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac457b082995a674",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "cd006925f57863d2",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "0291035bb76a9853",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7afdb70f593e6c7",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "444c689dd73e036e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "371ee652b30f09b7",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "18a46d18f032cc24",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "e255579b60855e7a",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "abed7b3803e175be",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "9a569d006e746b26",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "3e3327b898419ea3",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f1530e143cf75402",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "198701ebbcfa61c1",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "1dab2d1741b9ed48",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "7065e8ead111e07c",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "df6b061741f390a8",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "ce2ae769a8f308ec",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "468a927ce7ef3b19",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "193218cff9c8d512",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "a353da879e8e0c8c",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "7f94b9173beb84cf",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 16,
        "width": 25,
        "height": 1
    },
    {
        "id": "7411df386ab0de8c",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5a378936ea97f7d",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "b6e89c960313faf5",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e204935d5a08443",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "a172742c2ec8f118",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "f2e2aaabe582b4e7",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "77cb352be2344272",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "e2f8935847309754",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "0673e8ba92fc1baa",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "e8a6e78d1f41351d",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "a4ea91068db455b2",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e8ff7100fdf37d0",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca9e17753621ba61",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "1c80c1aad370345a",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae26e2d01f2feaf2",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "af1ff684c156d545",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "07759a9d221b86f0",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "d9d247a4d2568bb4",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "ab36cd13639d0277",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb88a4866efe92d1",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "dfc12ab2db5a6afb",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "78bf37db93c46fdc",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 16,
        "width": 25,
        "height": 1
    },
    {
        "id": "eeee803cafc1bd8d",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "f88e49002a2536ea",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "98be243f0727c51e",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "572fc52d7b7286cd",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0b7d259fb5c6540",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "72a694c38d5e738b",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "13a4b325edc60e47",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f3d62088c7bdbc8",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "3fa36f833e54f6ac",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "8aa7e3c762b8300c",
        "type": "ui_spacer",
        "z": "e3e9f299573743ff",
        "name": "spacer",
        "group": "356c52fa46770ea1",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "ee71f6a984835466",
        "type": "ui_tab",
        "name": "W13",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "14a8757bef6e4e95",
        "type": "ui_group",
        "name": "W13",
        "tab": "ee71f6a984835466",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "feb93e5fe33033d4",
        "type": "ui_tab",
        "name": "W14",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "041063842a8e9050",
        "type": "ui_group",
        "name": "W14",
        "tab": "feb93e5fe33033d4",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "712e25a5076240f8",
        "type": "ui_tab",
        "name": "W31",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ef13138879730507",
        "type": "ui_group",
        "name": "W31",
        "tab": "712e25a5076240f8",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d2b9263f388eeef9",
        "type": "ui_tab",
        "name": "W8",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7bda16e46bf2bf6",
        "type": "ui_group",
        "name": "W8",
        "tab": "d2b9263f388eeef9",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0bb156c4eb834904",
        "type": "ui_tab",
        "name": "W4",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2f9c1b549c33166e",
        "type": "ui_group",
        "name": "W4",
        "tab": "0bb156c4eb834904",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dbd73ade6e2e0243",
        "type": "ui_tab",
        "name": "W5",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1c937069dfad9f8f",
        "type": "ui_group",
        "name": "W5",
        "tab": "dbd73ade6e2e0243",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fbb9e088ede56917",
        "type": "ui_tab",
        "name": "W15",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7892582b69cb831e",
        "type": "ui_group",
        "name": "W15",
        "tab": "fbb9e088ede56917",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb4c9a2eccea8595",
        "type": "ui_tab",
        "name": "W17",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9abfbc18c8215dba",
        "type": "ui_group",
        "name": "W17",
        "tab": "fb4c9a2eccea8595",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b370276c0cd0dcc",
        "type": "ui_group",
        "name": "W32",
        "tab": "5e2828183ec4a0b3",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e2828183ec4a0b3",
        "type": "ui_tab",
        "name": "W32",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "09091dca32236a37",
        "type": "ui_tab",
        "name": "W19",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a42f279e1b57ba8f",
        "type": "ui_group",
        "name": "W19",
        "tab": "09091dca32236a37",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "abc583187a8dae3e",
        "type": "ui_tab",
        "name": "W28",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "35174f50eef1c2b3",
        "type": "ui_group",
        "name": "W28",
        "tab": "abc583187a8dae3e",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a435e011b8e431c",
        "type": "ui_tab",
        "name": "W16",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0f300590201e6c0d",
        "type": "ui_group",
        "name": "W16",
        "tab": "3a435e011b8e431c",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "58c7735c8d7e8aa4",
        "type": "ui_tab",
        "name": "W12",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "13928d208e6d8fb5",
        "type": "ui_group",
        "name": "W12",
        "tab": "58c7735c8d7e8aa4",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5974f23aadc08431",
        "type": "ui_group",
        "name": "W38",
        "tab": "13d0e84c47bda647",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "13d0e84c47bda647",
        "type": "ui_tab",
        "name": "W38",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2abb16cee9381095",
        "type": "ui_tab",
        "name": "W22",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0955bd53daa08def",
        "type": "ui_group",
        "name": "W22",
        "tab": "2abb16cee9381095",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e693404c3e6944cc",
        "type": "ui_tab",
        "name": "W27",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab8145926718add8",
        "type": "ui_group",
        "name": "W27",
        "tab": "e693404c3e6944cc",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dbdb5f2baafafb1f",
        "type": "ui_tab",
        "name": "W3",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a81c2c5f1faf946d",
        "type": "ui_group",
        "name": "W3",
        "tab": "dbdb5f2baafafb1f",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "efb0e5a52a486fca",
        "type": "ui_tab",
        "name": "W6",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d2ce95de570c2aca",
        "type": "ui_group",
        "name": "W6",
        "tab": "efb0e5a52a486fca",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d75fd8274553da3c",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Manual updating of W2 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "71fe5d10022b2925",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "Process W2 Information",
        "func": "var Mcount = parseInt(global.get(\"W2\")) - parseInt(global.get(\"W2_\"));\nvar npc = (global.get(\"W2_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW2\"));\nvar c_count = parseInt(global.get(\"c_W2\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW2\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W2\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "defa0a22558601ab"
            ]
        ]
    },
    {
        "id": "128f139752f27f2b",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "c1962bdb0dc89771"
            ]
        ]
    },
    {
        "id": "4563c98c069ba052",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Get Part No for W2",
        "query": "SELECT part_no FROM machine_operator where machine_no='W2' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "98d155972e44a81e"
            ]
        ]
    },
    {
        "id": "d706fbe03f7345b6",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "manual Inject without reseting W2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "4563c98c069ba052"
            ]
        ]
    },
    {
        "id": "98d155972e44a81e",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "W2 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "6f7c81960832a403"
            ]
        ]
    },
    {
        "id": "6f7c81960832a403",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Get W2 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "6266125bfa126a4e"
            ]
        ]
    },
    {
        "id": "6266125bfa126a4e",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "Set W2 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W2_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4f05541254955949",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Post W2 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W2'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1050,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "fed67f912226f3f7",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W2','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "57d828f5291b2808",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "inject 20 count to W2",
        "func": "var count =parseInt(global.get(\"W2\"));\nglobal.set(\"W2\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "e2f981f26efebac6"
            ]
        ]
    },
    {
        "id": "e2f981f26efebac6",
        "type": "mqtt out",
        "z": "e3e9f299573743ff",
        "name": "",
        "topic": "W2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "71ecdc0083673c3b",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "manual count testing 1 for W2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "57d828f5291b2808"
            ]
        ]
    },
    {
        "id": "3d5584a25a72ed76",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "inject 1 count to W2",
        "func": "var count =global.get(\"W2\");\nglobal.set(\"W2\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 880,
        "wires": [
            [
                "e2f981f26efebac6"
            ]
        ]
    },
    {
        "id": "80f4e4d5109d6958",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "manual count testing 2 for W2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 880,
        "wires": [
            [
                "3d5584a25a72ed76"
            ]
        ]
    },
    {
        "id": "1c16a7b57752f03b",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "3b695b02c62f5d43",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "193fa173d02780b0",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "2bc67bf2f5af8e70",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "644c6c3878816983",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "c1962bdb0dc89771"
            ]
        ]
    },
    {
        "id": "63d70314c61dc7a1",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "c1962bdb0dc89771"
            ]
        ]
    },
    {
        "id": "e3d0d46362201bd6",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Manual inject/reset W2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "c1962bdb0dc89771"
            ]
        ]
    },
    {
        "id": "20fc737d0308e66e",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Create entry for W2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "fed67f912226f3f7"
            ]
        ]
    },
    {
        "id": "c1962bdb0dc89771",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "Initialize W2 counting",
        "func": "global.set(\"lW2\",0);\nglobal.set(\"c_W2\", 0);\nglobal.set(\"W2_\", global.get(\"W2\"));\nglobal.set(\"W2_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "4563c98c069ba052"
            ]
        ]
    },
    {
        "id": "9893879bc68bf17c",
        "type": "mqtt in",
        "z": "e3e9f299573743ff",
        "name": "",
        "topic": "W2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "cd4d0ffa9b68f6b2",
                "c7e8eacd7cbfd79b",
                "bdca4e417d70e3f4",
                "332b4fe271631ef5",
                "e8d0c9a30a762130"
            ]
        ]
    },
    {
        "id": "cd4d0ffa9b68f6b2",
        "type": "ui_chart",
        "z": "e3e9f299573743ff",
        "name": "",
        "group": "a4ea91068db455b2",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W2 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 320,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c7e8eacd7cbfd79b",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "SET count for W2",
        "func": "global.set(\"W2\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bdca4e417d70e3f4",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W2' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "023364715c5eb325",
                "e5ac700e1959959f"
            ]
        ]
    },
    {
        "id": "023364715c5eb325",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "GET count for W2",
        "func": "msg.payload=global.get(\"W2\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "5547d8ca27a02dc4"
            ]
        ]
    },
    {
        "id": "469cb047938e37de",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "b2e9f05b66c517c8"
            ]
        ]
    },
    {
        "id": "5547d8ca27a02dc4",
        "type": "ui_text",
        "z": "e3e9f299573743ff",
        "group": "a4ea91068db455b2",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W2 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "b2e9f05b66c517c8",
        "type": "ui_text",
        "z": "e3e9f299573743ff",
        "group": "a4ea91068db455b2",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W2-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "e0ce82e49fe4b61a",
        "type": "mqtt out",
        "z": "e3e9f299573743ff",
        "name": "",
        "topic": "W2/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "e20ffb6cb47f672c",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "reset W2",
        "func": "global.set(\"W2\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "27c1112e6f0949e7"
            ]
        ]
    },
    {
        "id": "27c1112e6f0949e7",
        "type": "mqtt out",
        "z": "e3e9f299573743ff",
        "name": "",
        "topic": "W2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1afd5389704711b1",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w2 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "5e50a9df53f3a30a",
                "d7fc69bdeb2028e6",
                "56f2c024015d42ec"
            ]
        ]
    },
    {
        "id": "6b8309241d0c1ad1",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "W2 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "1afd5389704711b1"
            ]
        ]
    },
    {
        "id": "5e50a9df53f3a30a",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "W2 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\": [msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "528cb09ff7b3b7a8"
            ]
        ]
    },
    {
        "id": "d7fc69bdeb2028e6",
        "type": "ui_table",
        "z": "e3e9f299573743ff",
        "group": "a4ea91068db455b2",
        "name": "W2 history",
        "order": 18,
        "width": 8,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "528cb09ff7b3b7a8",
        "type": "ui_chart",
        "z": "e3e9f299573743ff",
        "name": "",
        "group": "a4ea91068db455b2",
        "order": 17,
        "width": 16,
        "height": 10,
        "label": "W2 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "500",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "fa6fb922c06ecca7",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Data Schedule 2 For W2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "f6613193a149f0b9"
            ]
        ]
    },
    {
        "id": "42a4a71c926c65ab",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Data Schedule 1 For W2 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "f6613193a149f0b9"
            ]
        ]
    },
    {
        "id": "f6613193a149f0b9",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "W2 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W2\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "a299013f59b2b96f"
            ]
        ]
    },
    {
        "id": "b6d7c8daee8fe148",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Data Schedule 4 For W2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "f6613193a149f0b9"
            ]
        ]
    },
    {
        "id": "2eedfa3d3e07f797",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Data Schedule 3 For W2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "f6613193a149f0b9"
            ]
        ]
    },
    {
        "id": "a299013f59b2b96f",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 store data",
        "query": "INSERT INTO w2(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "fa0c8d753af795c4",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Create W2 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "e918a04d860ddf10"
            ]
        ]
    },
    {
        "id": "e918a04d860ddf10",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 Table",
        "query": "CREATE TABLE W2 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e5ac700e1959959f",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "W2 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "469cb047938e37de"
            ]
        ]
    },
    {
        "id": "07f11c26edd245b2",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "delete W2 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "ccdcbb92943999a5"
            ]
        ]
    },
    {
        "id": "ccdcbb92943999a5",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 Table delete",
        "query": "drop TABLE W2 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "332b4fe271631ef5",
        "type": "trigger",
        "z": "e3e9f299573743ff",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "267f8537333a549c"
            ],
            [
                "2c84172f942de8bc"
            ]
        ]
    },
    {
        "id": "7177462fb60bb676",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "e20ffb6cb47f672c"
            ]
        ]
    },
    {
        "id": "267f8537333a549c",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Post W2 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W2'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 710,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2c84172f942de8bc",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Post W2 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W2'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 710,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1deda019fa321278",
        "type": "ui_text",
        "z": "e3e9f299573743ff",
        "group": "a4ea91068db455b2",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W2 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 340,
        "wires": []
    },
    {
        "id": "7f2269818670de28",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "W2 status check",
        "query": "SELECT status FROM machine_data where machine_no='W2';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 340,
        "wires": [
            [
                "1deda019fa321278"
            ]
        ]
    },
    {
        "id": "92731286c4fc3ef0",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7f2269818670de28"
            ]
        ]
    },
    {
        "id": "56f2c024015d42ec",
        "type": "debug",
        "z": "e3e9f299573743ff",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1340,
        "wires": []
    },
    {
        "id": "573719782dbbbb83",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "4563c98c069ba052"
            ]
        ]
    },
    {
        "id": "0ca7073cb82033e7",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 900,
        "y": 220,
        "wires": [
            [
                "f5f1325026655394"
            ]
        ]
    },
    {
        "id": "e3b7989a7f376322",
        "type": "debug",
        "z": "e3e9f299573743ff",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 80,
        "wires": []
    },
    {
        "id": "e8d0c9a30a762130",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "comes on for first time",
        "func": "if(global.get(\"W2_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W2_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 300,
        "wires": [
            [
                "46d9563cce206fef"
            ]
        ]
    },
    {
        "id": "46d9563cce206fef",
        "type": "switch",
        "z": "e3e9f299573743ff",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "af0628587b7c1aa8"
            ]
        ]
    },
    {
        "id": "af0628587b7c1aa8",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Post W2 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W2'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 300,
        "wires": [
            [
                "662df3c9e5af0d0e"
            ]
        ]
    },
    {
        "id": "09077afc177b71ef",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Post current as previous in W2 ",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W2'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d54f73a0e9423421",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w2 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1010,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b234f2d983dbdfc1",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 770,
        "y": 40,
        "wires": [
            [
                "d54f73a0e9423421"
            ]
        ]
    },
    {
        "id": "f5f1325026655394",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "Initialize W2 counting",
        "func": "\nglobal.set(\"W2_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "197b1fbbbf599ccb",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 600,
        "wires": [
            [
                "9d686e17e3d35c44"
            ]
        ]
    },
    {
        "id": "662df3c9e5af0d0e",
        "type": "debug",
        "z": "e3e9f299573743ff",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 320,
        "wires": []
    },
    {
        "id": "469533d8406d216b",
        "type": "debug",
        "z": "e3e9f299573743ff",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload2",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 580,
        "wires": []
    },
    {
        "id": "9d686e17e3d35c44",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Get current for W2",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W2' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 540,
        "wires": [
            [
                "8e1452a801dc1ca0"
            ]
        ]
    },
    {
        "id": "8e1452a801dc1ca0",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "W2 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nif (t == '')\n{ msg.payload1 = null; }\nelse \n{ msg.payload1 = t; }\nmsg.payload2=count;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            [
                "09077afc177b71ef",
                "469533d8406d216b"
            ]
        ]
    },
    {
        "id": "defa0a22558601ab",
        "type": "delay",
        "z": "e3e9f299573743ff",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "4f05541254955949"
            ]
        ]
    },
    {
        "id": "8721b2e1cd0bb4b6",
        "type": "inject",
        "z": "e3e9f299573743ff",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "3a786f30662807e9"
            ]
        ]
    },
    {
        "id": "3a786f30662807e9",
        "type": "postgresql",
        "z": "e3e9f299573743ff",
        "name": "Get last for W2",
        "query": "SELECT * FROM W2\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 300,
        "y": 920,
        "wires": [
            [
                "cd2b1dae6cb9ab34"
            ]
        ]
    },
    {
        "id": "cd2b1dae6cb9ab34",
        "type": "function",
        "z": "e3e9f299573743ff",
        "name": "inject last count to W2",
        "func": "\nglobal.set(\"W2\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 920,
        "wires": [
            [
                "e2f981f26efebac6"
            ]
        ]
    },
    {
        "id": "886d0a7f1502f84c",
        "type": "link in",
        "z": "e3e9f299573743ff",
        "name": "link in 1",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "c1962bdb0dc89771"
            ]
        ]
    },
    {
        "id": "ef80dceb8bac88d5",
        "type": "link in",
        "z": "e3e9f299573743ff",
        "name": "link in 24",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 435,
        "y": 640,
        "wires": [
            [
                "71fe5d10022b2925"
            ]
        ]
    },
    {
        "id": "e0819a3ed877b52a",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Manual updating of W10 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "965506404e112bad",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "Process W10 Information",
        "func": "var Mcount = parseInt(global.get(\"W10\")) - parseInt(global.get(\"W10_\"));\nvar npc = (global.get(\"W10_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW10\"));\nvar c_count = parseInt(global.get(\"c_W10\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW10\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W10\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "813e15bc0a908bbc"
            ]
        ]
    },
    {
        "id": "7428d77aa0534086",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "f8310f0b91ba050e"
            ]
        ]
    },
    {
        "id": "e50d78b5f1663828",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Get Part No for W10",
        "query": "SELECT part_no FROM machine_operator where machine_no='W10' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "cce97ccc62168c6e"
            ]
        ]
    },
    {
        "id": "da6c0e957efe0287",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "manual Inject without reseting W10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "e50d78b5f1663828"
            ]
        ]
    },
    {
        "id": "cce97ccc62168c6e",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "W10 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "ed3d7b21334632ac"
            ]
        ]
    },
    {
        "id": "ed3d7b21334632ac",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Get W10 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "20c3a52f9471e9ea"
            ]
        ]
    },
    {
        "id": "20c3a52f9471e9ea",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "Set W10 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W10_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc39456dacc948a4",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Post W10 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W10'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5414c5a1d0ba53f5",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W10','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3c756ca76ff3b264",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "inject 20 count to W10",
        "func": "var count =parseInt(global.get(\"W10\"));\nglobal.set(\"W10\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "3f971390dc3e80f9"
            ]
        ]
    },
    {
        "id": "3f971390dc3e80f9",
        "type": "mqtt out",
        "z": "95dc624a00aec369",
        "name": "",
        "topic": "W10",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "d533b9612a59c46f",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "manual count testing 1 for W10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "3c756ca76ff3b264"
            ]
        ]
    },
    {
        "id": "a5ce45516f674223",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "inject 1 count to W10",
        "func": "var count =global.get(\"W10\");\nglobal.set(\"W10\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 880,
        "wires": [
            [
                "3f971390dc3e80f9"
            ]
        ]
    },
    {
        "id": "3c2e602dea322f6e",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "manual count testing 2 for W10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "a5ce45516f674223"
            ]
        ]
    },
    {
        "id": "75711ddc68d88672",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "508421fc020cda05",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "37da8ce49deffaaf",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "ea33b680d6a3a643",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "ee03869bd4c5cc98",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "f8310f0b91ba050e"
            ]
        ]
    },
    {
        "id": "46474193c3c8bc8e",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "f8310f0b91ba050e"
            ]
        ]
    },
    {
        "id": "187399fc529ea503",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Manual inject/reset W10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "f8310f0b91ba050e"
            ]
        ]
    },
    {
        "id": "89a0fa0dec80b658",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Create entry for W10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "5414c5a1d0ba53f5"
            ]
        ]
    },
    {
        "id": "f8310f0b91ba050e",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "Initialize W10 counting",
        "func": "global.set(\"lW10\",0);\nglobal.set(\"c_W10\", 0);\nglobal.set(\"W10_\", global.get(\"W10\"));\nglobal.set(\"W10_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "e50d78b5f1663828"
            ]
        ]
    },
    {
        "id": "7eb4f2d4337c487f",
        "type": "mqtt in",
        "z": "95dc624a00aec369",
        "name": "",
        "topic": "W10",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b2b97a3ae1407f42",
                "eb4e7c2ba44fd77b",
                "33ce56922e5add7a",
                "8a49a3e1e215f17c",
                "7b70bee9322fa8e7"
            ]
        ]
    },
    {
        "id": "b2b97a3ae1407f42",
        "type": "ui_chart",
        "z": "95dc624a00aec369",
        "name": "",
        "group": "356c52fa46770ea1",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W10 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "eb4e7c2ba44fd77b",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "SET count for W10",
        "func": "global.set(\"W10\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "33ce56922e5add7a",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W10' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "4ceebfe8f3ac5890",
                "4e474b55e7ef4355"
            ]
        ]
    },
    {
        "id": "4ceebfe8f3ac5890",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "GET count for W10",
        "func": "msg.payload=global.get(\"W10\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "4f4ad6b3ef642139"
            ]
        ]
    },
    {
        "id": "3e3843efab69e0a8",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "46daf80186285df6"
            ]
        ]
    },
    {
        "id": "4f4ad6b3ef642139",
        "type": "ui_text",
        "z": "95dc624a00aec369",
        "group": "356c52fa46770ea1",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W10 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "46daf80186285df6",
        "type": "ui_text",
        "z": "95dc624a00aec369",
        "group": "356c52fa46770ea1",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W10-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "1b5cce1b612301b6",
        "type": "mqtt out",
        "z": "95dc624a00aec369",
        "name": "",
        "topic": "W10/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "09b51f50f6e10561",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "reset W10",
        "func": "global.set(\"W10\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "6a0679b05c36535d"
            ]
        ]
    },
    {
        "id": "6a0679b05c36535d",
        "type": "mqtt out",
        "z": "95dc624a00aec369",
        "name": "",
        "topic": "W10",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "92b56c11543c5e0e",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 data for chart",
        "query": "Select \"count\" AS y, \"dateandtime\" as x from W10 order by x desc limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "8e41570bc64b63f8",
                "5dc437827b8bc65f"
            ]
        ]
    },
    {
        "id": "6d1e85b48f95807e",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "W10 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "92b56c11543c5e0e"
            ]
        ]
    },
    {
        "id": "8e41570bc64b63f8",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "W10 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "34e81c324324e902"
            ]
        ]
    },
    {
        "id": "5dc437827b8bc65f",
        "type": "ui_table",
        "z": "95dc624a00aec369",
        "group": "356c52fa46770ea1",
        "name": "W10 history",
        "order": 18,
        "width": 9,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "34e81c324324e902",
        "type": "ui_chart",
        "z": "95dc624a00aec369",
        "name": "",
        "group": "356c52fa46770ea1",
        "order": 17,
        "width": 15,
        "height": 10,
        "label": "W10 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "64cb0769a59d7fa0",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Data Schedule 2 For W10",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "8da059720aaeb214"
            ]
        ]
    },
    {
        "id": "7d36ebb7c5dfafd0",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Data Schedule 1 For W10 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "8da059720aaeb214"
            ]
        ]
    },
    {
        "id": "8da059720aaeb214",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "W10 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W10\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "db83185bf2ba8942"
            ]
        ]
    },
    {
        "id": "443ca69b959646de",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Data Schedule 4 For W10",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "8da059720aaeb214"
            ]
        ]
    },
    {
        "id": "063388a7ba9b5494",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Data Schedule 3 For W10",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "8da059720aaeb214"
            ]
        ]
    },
    {
        "id": "db83185bf2ba8942",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 store data",
        "query": "INSERT INTO W10(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9bf56a5312de4be8",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Create W10 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "9a682c3ebd32e928"
            ]
        ]
    },
    {
        "id": "9a682c3ebd32e928",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 Table",
        "query": "CREATE TABLE W10 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4e474b55e7ef4355",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "W10 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "3e3843efab69e0a8"
            ]
        ]
    },
    {
        "id": "664123fb0b0016c8",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "delete W10 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "e46d78fc780b81e7"
            ]
        ]
    },
    {
        "id": "e46d78fc780b81e7",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 Table delete",
        "query": "drop TABLE W10 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "8a49a3e1e215f17c",
        "type": "trigger",
        "z": "95dc624a00aec369",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "8ea160baaa5aba57"
            ],
            [
                "a983d9d906237094"
            ]
        ]
    },
    {
        "id": "790d8417b9eef7dc",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "09b51f50f6e10561"
            ]
        ]
    },
    {
        "id": "8ea160baaa5aba57",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Post W10 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W10'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 710,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a983d9d906237094",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Post W10 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W10'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "024878f161b3ea00",
        "type": "ui_text",
        "z": "95dc624a00aec369",
        "group": "356c52fa46770ea1",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W10 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "44cfe681a45f29b4",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "W10 status check",
        "query": "SELECT status FROM machine_data where machine_no='W10';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "024878f161b3ea00"
            ]
        ]
    },
    {
        "id": "5ba44d45c148afa2",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "44cfe681a45f29b4"
            ]
        ]
    },
    {
        "id": "4817bcd78fee2c37",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "reset W10",
        "func": "global.set(\"W10\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "abb01e94ad6facc3"
            ]
        ]
    },
    {
        "id": "abb01e94ad6facc3",
        "type": "mqtt out",
        "z": "95dc624a00aec369",
        "name": "",
        "topic": "W10",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 1260,
        "y": 20,
        "wires": []
    },
    {
        "id": "399db069984e232c",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "e50d78b5f1663828"
            ]
        ]
    },
    {
        "id": "7b70bee9322fa8e7",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "comes on for first time",
        "func": "if(global.get(\"W10_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W10_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "1d9a9f06f5d83d24"
            ]
        ]
    },
    {
        "id": "1d9a9f06f5d83d24",
        "type": "switch",
        "z": "95dc624a00aec369",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "f7fa0c1e227c086f"
            ]
        ]
    },
    {
        "id": "f7fa0c1e227c086f",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Post W10 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W10'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "44fab2c8d15c3f0a",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Get current for W10",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W10' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "83b13902fa496c5e"
            ]
        ]
    },
    {
        "id": "6b0b198a73bdf07f",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "44fab2c8d15c3f0a"
            ]
        ]
    },
    {
        "id": "83b13902fa496c5e",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "W10 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "0ac6d06719a5ca93"
            ]
        ]
    },
    {
        "id": "0ac6d06719a5ca93",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Post current as previous in W10",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W10'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 930,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ced598c39047936e",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "4fdf5a73908265cb"
            ]
        ]
    },
    {
        "id": "4fdf5a73908265cb",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "Initialize W2 counting",
        "func": "\nglobal.set(\"W10_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7ae596529741843a",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w10 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "aba4724c2a7945fc",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "7ae596529741843a"
            ]
        ]
    },
    {
        "id": "813e15bc0a908bbc",
        "type": "delay",
        "z": "95dc624a00aec369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 700,
        "wires": [
            [
                "bc39456dacc948a4"
            ]
        ]
    },
    {
        "id": "8dc8462400a00d7f",
        "type": "inject",
        "z": "95dc624a00aec369",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "5b33c03b6e575c5a"
            ]
        ]
    },
    {
        "id": "5b33c03b6e575c5a",
        "type": "postgresql",
        "z": "95dc624a00aec369",
        "name": "Get last for W10",
        "query": "SELECT * FROM W10\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "4fcf52fa543c2df3"
            ]
        ]
    },
    {
        "id": "4fcf52fa543c2df3",
        "type": "function",
        "z": "95dc624a00aec369",
        "name": "inject last count to W10",
        "func": "\nglobal.set(\"W10\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "3f971390dc3e80f9"
            ]
        ]
    },
    {
        "id": "b828d4ab60b9ed2f",
        "type": "link in",
        "z": "95dc624a00aec369",
        "name": "link in 2",
        "links": [
            "e63285d065adb307"
        ],
        "x": 45,
        "y": 540,
        "wires": [
            [
                "f8310f0b91ba050e"
            ]
        ]
    },
    {
        "id": "4f0c4dcd4f18dcc5",
        "type": "link in",
        "z": "95dc624a00aec369",
        "name": "link in 25",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 445,
        "y": 660,
        "wires": [
            [
                "965506404e112bad"
            ]
        ]
    },
    {
        "id": "9b41fb5f8cb45132",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Manual updating of W29 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "9159faac075fd563",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "Process W29 Information",
        "func": "var Mcount = parseInt(global.get(\"W29\")) - parseInt(global.get(\"W29_\"));\nvar npc = (global.get(\"W29_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW29\"));\nvar c_count = parseInt(global.get(\"c_W29\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW29\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W29\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "f7411c10969fb005"
            ]
        ]
    },
    {
        "id": "b45ec6432c87041c",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "1210c61c6577c9e1"
            ]
        ]
    },
    {
        "id": "90aca51be63c177c",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Get Part No for W29",
        "query": "SELECT part_no FROM machine_operator where machine_no='W29' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "becfc4cee37bbe86"
            ]
        ]
    },
    {
        "id": "a1a4a74d6b83d750",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "manual Inject without reseting W29",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "90aca51be63c177c"
            ]
        ]
    },
    {
        "id": "becfc4cee37bbe86",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "W29 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "b3a35e93c66bc722"
            ]
        ]
    },
    {
        "id": "b3a35e93c66bc722",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Get W29 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "9d24ebb44e459fe8"
            ]
        ]
    },
    {
        "id": "9d24ebb44e459fe8",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "Set W29 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W29_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8c8ac515867625e2",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Post W29 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W29'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "25858df0f1c42762",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W29','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6dd8faa8ce278320",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "inject 20 count to W29",
        "func": "var count =parseInt(global.get(\"W29\"));\nglobal.set(\"W29\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "4d3692be7d8634d2"
            ]
        ]
    },
    {
        "id": "4d3692be7d8634d2",
        "type": "mqtt out",
        "z": "9fdeb7814f35d935",
        "name": "",
        "topic": "W29",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "c62f0352b8b94a41",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "manual count testing 1 for W29",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "6dd8faa8ce278320"
            ]
        ]
    },
    {
        "id": "b56f35f95cbfeb20",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "inject 1 count to W29",
        "func": "var count =global.get(\"W29\");\nglobal.set(\"W29\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 880,
        "wires": [
            [
                "4d3692be7d8634d2"
            ]
        ]
    },
    {
        "id": "929f49c2910f2792",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "manual count testing 2 for W29",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "b56f35f95cbfeb20"
            ]
        ]
    },
    {
        "id": "379b1e6c8373f010",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "b663389c2093a638",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "34b8d474765cfacc",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "98b19641460cbeef",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "e6849f92fa768088",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "1210c61c6577c9e1"
            ]
        ]
    },
    {
        "id": "b13f2b557e11ab2d",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "1210c61c6577c9e1"
            ]
        ]
    },
    {
        "id": "1721a6d8d9959755",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Manual inject/reset W29",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "1210c61c6577c9e1"
            ]
        ]
    },
    {
        "id": "02c97af483febe98",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Create entry for W29",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "25858df0f1c42762"
            ]
        ]
    },
    {
        "id": "1210c61c6577c9e1",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "Initialize W29 counting",
        "func": "global.set(\"lW29\",0);\nglobal.set(\"c_W29\", 0);\nglobal.set(\"W29_\", global.get(\"W29\"));\nglobal.set(\"W29_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "90aca51be63c177c"
            ]
        ]
    },
    {
        "id": "15cea5ef88f69cdc",
        "type": "mqtt in",
        "z": "9fdeb7814f35d935",
        "name": "",
        "topic": "W29",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "9aa823fad3b1e2cd",
                "b5196d32d81af3cb",
                "aa074bc24d3ec23d",
                "3d55c2c138e3805a",
                "5fb606dbaea15ea6"
            ]
        ]
    },
    {
        "id": "9aa823fad3b1e2cd",
        "type": "ui_chart",
        "z": "9fdeb7814f35d935",
        "name": "",
        "group": "3c90599923c38dcd",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W29 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b5196d32d81af3cb",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "SET count for W29",
        "func": "global.set(\"W29\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "aa074bc24d3ec23d",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W29' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "a3bbdda9f227f647",
                "80e84b18caf20023"
            ]
        ]
    },
    {
        "id": "a3bbdda9f227f647",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "GET count for W29",
        "func": "msg.payload=global.get(\"W29\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "f3343461b3e6bf4d"
            ]
        ]
    },
    {
        "id": "e447e528f6772d1b",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "79a97a1f4825b84e"
            ]
        ]
    },
    {
        "id": "f3343461b3e6bf4d",
        "type": "ui_text",
        "z": "9fdeb7814f35d935",
        "group": "3c90599923c38dcd",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W29 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "79a97a1f4825b84e",
        "type": "ui_text",
        "z": "9fdeb7814f35d935",
        "group": "3c90599923c38dcd",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W29-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c2d0c77f2158ff0",
        "type": "mqtt out",
        "z": "9fdeb7814f35d935",
        "name": "",
        "topic": "W29/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "0f48c2a84ebd22f9",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "reset W29",
        "func": "global.set(\"W29\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "f522f0ce3ca50376"
            ]
        ]
    },
    {
        "id": "f522f0ce3ca50376",
        "type": "mqtt out",
        "z": "9fdeb7814f35d935",
        "name": "",
        "topic": "W29",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6df1a4b230bedc3e",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w29 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "db58b67712bd8447",
                "2097de9eb652f1ca"
            ]
        ]
    },
    {
        "id": "509e2f38317a6e67",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "W29 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "6df1a4b230bedc3e"
            ]
        ]
    },
    {
        "id": "db58b67712bd8447",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "W29 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "a473c4f2d08496e9"
            ]
        ]
    },
    {
        "id": "2097de9eb652f1ca",
        "type": "ui_table",
        "z": "9fdeb7814f35d935",
        "group": "3c90599923c38dcd",
        "name": "W29 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a473c4f2d08496e9",
        "type": "ui_chart",
        "z": "9fdeb7814f35d935",
        "name": "",
        "group": "3c90599923c38dcd",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W29 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f4b0a68662cd8281",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Data Schedule 2 For W29",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "35f5d8ca359be46d"
            ]
        ]
    },
    {
        "id": "b05808895031db6f",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Data Schedule 1 For W29 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "35f5d8ca359be46d"
            ]
        ]
    },
    {
        "id": "35f5d8ca359be46d",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "W29 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W29\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "79186ffab3733fc6"
            ]
        ]
    },
    {
        "id": "2f1d56a12d4bab64",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Data Schedule 4 For W29",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "35f5d8ca359be46d"
            ]
        ]
    },
    {
        "id": "559ffcaa8949c5a6",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Data Schedule 3 For W29",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "35f5d8ca359be46d"
            ]
        ]
    },
    {
        "id": "79186ffab3733fc6",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 store data",
        "query": "INSERT INTO W29(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "c61f60ee5ef9c218",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Create W29 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "871c43fc4e49afd5"
            ]
        ]
    },
    {
        "id": "871c43fc4e49afd5",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 Table",
        "query": "CREATE TABLE W29 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "80e84b18caf20023",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "W29 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "e447e528f6772d1b"
            ]
        ]
    },
    {
        "id": "c12658d3131a06db",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "delete W29 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "01cc0fc540c8b550"
            ]
        ]
    },
    {
        "id": "01cc0fc540c8b550",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 Table delete",
        "query": "drop TABLE W29 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3d55c2c138e3805a",
        "type": "trigger",
        "z": "9fdeb7814f35d935",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "1c7956b260655a94"
            ],
            [
                "e2ff4b3d07de91e6"
            ]
        ]
    },
    {
        "id": "dba1f438678d0520",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "0f48c2a84ebd22f9"
            ]
        ]
    },
    {
        "id": "1c7956b260655a94",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Post W29 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W29'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e2ff4b3d07de91e6",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Post W29 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W29'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "112d2f460cd256c0",
        "type": "ui_text",
        "z": "9fdeb7814f35d935",
        "group": "3c90599923c38dcd",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W29 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "e6f40bb406edb50d",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "W29 status check",
        "query": "SELECT status FROM machine_data where machine_no='W29';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "112d2f460cd256c0"
            ]
        ]
    },
    {
        "id": "54cb9b04afc1f525",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "e6f40bb406edb50d"
            ]
        ]
    },
    {
        "id": "0b06b6b2de71ba46",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "90aca51be63c177c"
            ]
        ]
    },
    {
        "id": "1ec2b66a3519b18d",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "a1fc01eb64785564"
            ]
        ]
    },
    {
        "id": "a1fc01eb64785564",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "Initialize W29 counting",
        "func": "\nglobal.set(\"W29_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb606dbaea15ea6",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "comes on for first time",
        "func": "if(global.get(\"W29_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W29_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "a05d6526ee5f9b13"
            ]
        ]
    },
    {
        "id": "a05d6526ee5f9b13",
        "type": "switch",
        "z": "9fdeb7814f35d935",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "1860a7032c3c2f9d"
            ]
        ]
    },
    {
        "id": "1860a7032c3c2f9d",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Post W29 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W29'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "804d960904191f4c",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "2d6e70d652442298"
            ]
        ]
    },
    {
        "id": "2d6e70d652442298",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Get current for W29",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W29' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "8434ee8a0c0d13e3"
            ]
        ]
    },
    {
        "id": "8434ee8a0c0d13e3",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "W29 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "9a0494b0a3cd5d5d"
            ]
        ]
    },
    {
        "id": "9a0494b0a3cd5d5d",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Post current as previous in W29",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W29'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "39dee6058db755e4",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w29 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "50883f5f6d6455d7",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "39dee6058db755e4"
            ]
        ]
    },
    {
        "id": "f7411c10969fb005",
        "type": "delay",
        "z": "9fdeb7814f35d935",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 700,
        "wires": [
            [
                "8c8ac515867625e2"
            ]
        ]
    },
    {
        "id": "377b2458cf23d9e5",
        "type": "inject",
        "z": "9fdeb7814f35d935",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 940,
        "wires": [
            [
                "3f172247491664df"
            ]
        ]
    },
    {
        "id": "3f172247491664df",
        "type": "postgresql",
        "z": "9fdeb7814f35d935",
        "name": "Get last for W29",
        "query": "SELECT * FROM W29\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 940,
        "wires": [
            [
                "5a0b15938fec5843"
            ]
        ]
    },
    {
        "id": "5a0b15938fec5843",
        "type": "function",
        "z": "9fdeb7814f35d935",
        "name": "inject last count to W29",
        "func": "\nglobal.set(\"W29\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 940,
        "wires": [
            [
                "4d3692be7d8634d2"
            ]
        ]
    },
    {
        "id": "44e5c1be2159dd1f",
        "type": "link in",
        "z": "9fdeb7814f35d935",
        "name": "link in 3",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "1210c61c6577c9e1"
            ]
        ]
    },
    {
        "id": "409981821f9191c3",
        "type": "link in",
        "z": "9fdeb7814f35d935",
        "name": "link in 26",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 435,
        "y": 660,
        "wires": [
            [
                "9159faac075fd563"
            ]
        ]
    },
    {
        "id": "af11851f30a32e8f",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Manual updating of W30 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "044c561a97375e8f",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "Process W30 Information",
        "func": "var Mcount = parseInt(global.get(\"W30\")) - parseInt(global.get(\"W30_\"));\nvar npc = (global.get(\"W30_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW30\"));\nvar c_count = parseInt(global.get(\"c_W30\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW30\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nmsg.payload5= lcount;\nglobal.set(\"c_W30\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "5a39b6c00403cbd3",
                "135f927ed12b9916",
                "95b647af4a0f9805"
            ]
        ]
    },
    {
        "id": "c6b58a3d0e7ce062",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "5ed9219176a10b44"
            ]
        ]
    },
    {
        "id": "138d51961a27a852",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Get Part No for W30",
        "query": "SELECT part_no FROM machine_operator where machine_no='W30' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "926235eb56ec13f7"
            ]
        ]
    },
    {
        "id": "a475f4e7a0f4f7c1",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "manual Inject without reseting W30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "138d51961a27a852"
            ]
        ]
    },
    {
        "id": "926235eb56ec13f7",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "W30 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "4ae6382d184cc1e4"
            ]
        ]
    },
    {
        "id": "4ae6382d184cc1e4",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Get W30 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "6e649e8381286475"
            ]
        ]
    },
    {
        "id": "6e649e8381286475",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "Set W30 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W30_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "be21c060136c844a",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Post W30 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W30'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "59d6e27da425c961",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W30','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "da893d73c7bfd9ac",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "inject 20 count to W30",
        "func": "var count =parseInt(global.get(\"W30\"));\nglobal.set(\"W30\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 820,
        "wires": [
            [
                "d729ac2f0aeccd93"
            ]
        ]
    },
    {
        "id": "d729ac2f0aeccd93",
        "type": "mqtt out",
        "z": "6e6223198d98fd21",
        "name": "",
        "topic": "W30",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "a5428ed68dc53572",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "manual count testing 1 for W30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "da893d73c7bfd9ac"
            ]
        ]
    },
    {
        "id": "37cb7ca624d77ebf",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "inject 1 count to W30",
        "func": "var count =global.get(\"W30\");\nglobal.set(\"W30\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "d729ac2f0aeccd93"
            ]
        ]
    },
    {
        "id": "a681346a8d56c765",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "manual count testing 2 for W30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "37cb7ca624d77ebf"
            ]
        ]
    },
    {
        "id": "239d7cd8e10a0989",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "73b6f06ffc9a5f29",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "840a7dc2b262c70d",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "98a633c8edaa6a41",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "56401641fe26983b",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "5ed9219176a10b44"
            ]
        ]
    },
    {
        "id": "8766687b77dde466",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "5ed9219176a10b44"
            ]
        ]
    },
    {
        "id": "f107be15871332ae",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Manual inject/reset W30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "5ed9219176a10b44"
            ]
        ]
    },
    {
        "id": "f1306fe81a2970de",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Create entry for W30",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "59d6e27da425c961"
            ]
        ]
    },
    {
        "id": "5ed9219176a10b44",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "Initialize W30 counting",
        "func": "global.set(\"lW30\",0);\nglobal.set(\"c_W30\", 0);\nglobal.set(\"W30_\", global.get(\"W30\"));\nglobal.set(\"W30_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "138d51961a27a852"
            ]
        ]
    },
    {
        "id": "b749f8f609c6784e",
        "type": "mqtt in",
        "z": "6e6223198d98fd21",
        "name": "",
        "topic": "W30",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "ed929feda9c1bff7",
                "621a90f7a133c223",
                "c749e902b31958cd",
                "09435a33e81429dc",
                "16e1274311b5eed5"
            ]
        ]
    },
    {
        "id": "ed929feda9c1bff7",
        "type": "ui_chart",
        "z": "6e6223198d98fd21",
        "name": "",
        "group": "77f076411fc8f4b0",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W30 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "621a90f7a133c223",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "SET count for W30",
        "func": "global.set(\"W30\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c749e902b31958cd",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W30' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "23c5fd74cba75649",
                "a568724111f5b965"
            ]
        ]
    },
    {
        "id": "23c5fd74cba75649",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "GET count for W30",
        "func": "msg.payload=global.get(\"W30\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "f6739e32c84170c4"
            ]
        ]
    },
    {
        "id": "f1888324e050051e",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "110c62f7c2e56a80"
            ]
        ]
    },
    {
        "id": "f6739e32c84170c4",
        "type": "ui_text",
        "z": "6e6223198d98fd21",
        "group": "77f076411fc8f4b0",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W30 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "110c62f7c2e56a80",
        "type": "ui_text",
        "z": "6e6223198d98fd21",
        "group": "77f076411fc8f4b0",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W30-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "9febfecd088bceb7",
        "type": "mqtt out",
        "z": "6e6223198d98fd21",
        "name": "",
        "topic": "W30/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "67c1f06dda323831",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "reset W30",
        "func": "global.set(\"W30\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "9f125e60a9b873fc"
            ]
        ]
    },
    {
        "id": "9f125e60a9b873fc",
        "type": "mqtt out",
        "z": "6e6223198d98fd21",
        "name": "",
        "topic": "W30",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4d80bc5beb57052d",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w30 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "85ba8851ee9587f4",
                "88260ddb87da6ce0"
            ]
        ]
    },
    {
        "id": "9dea0ff6d553afb7",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "W30 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "4d80bc5beb57052d"
            ]
        ]
    },
    {
        "id": "85ba8851ee9587f4",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "W30 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "8c1ec0bd80aa242f"
            ]
        ]
    },
    {
        "id": "88260ddb87da6ce0",
        "type": "ui_table",
        "z": "6e6223198d98fd21",
        "group": "77f076411fc8f4b0",
        "name": "W30 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8c1ec0bd80aa242f",
        "type": "ui_chart",
        "z": "6e6223198d98fd21",
        "name": "",
        "group": "77f076411fc8f4b0",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W30 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "d32299279d4d7a9e",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Data Schedule 2 For W30",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "5f8d40df16e3a513"
            ]
        ]
    },
    {
        "id": "ea0de0627cb99a15",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Data Schedule 1 For W30 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "5f8d40df16e3a513"
            ]
        ]
    },
    {
        "id": "5f8d40df16e3a513",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "W30 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W30\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "9d380c61c9bbf1c0"
            ]
        ]
    },
    {
        "id": "c56a13efe52e72ad",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Data Schedule 4 For W30",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "5f8d40df16e3a513"
            ]
        ]
    },
    {
        "id": "47c39829bb5d7e72",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Data Schedule 3 For W30",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "5f8d40df16e3a513"
            ]
        ]
    },
    {
        "id": "9d380c61c9bbf1c0",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 store data",
        "query": "INSERT INTO W30(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "42ccf9e9255145e4",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Create W30 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "1502d9a8bb534548"
            ]
        ]
    },
    {
        "id": "1502d9a8bb534548",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 Table",
        "query": "CREATE TABLE W30 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "a568724111f5b965",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "W30 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "f1888324e050051e"
            ]
        ]
    },
    {
        "id": "d73170e0e58fe410",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "delete W30 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "779d35a4eab17278"
            ]
        ]
    },
    {
        "id": "779d35a4eab17278",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 Table delete",
        "query": "drop TABLE W30 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "09435a33e81429dc",
        "type": "trigger",
        "z": "6e6223198d98fd21",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 530,
        "y": 200,
        "wires": [
            [
                "ef29e3512f4f12c8"
            ],
            [
                "51924cc96869b8d6"
            ]
        ]
    },
    {
        "id": "07ef0e626c7348d7",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "67c1f06dda323831"
            ]
        ]
    },
    {
        "id": "ef29e3512f4f12c8",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Post W30 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W30'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "51924cc96869b8d6",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Post W30 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W30'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "aef466e467636e1e",
        "type": "ui_text",
        "z": "6e6223198d98fd21",
        "group": "77f076411fc8f4b0",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W30 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "cb8126bd1386d561",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "W30 status check",
        "query": "SELECT status FROM machine_data where machine_no='W30';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "aef466e467636e1e"
            ]
        ]
    },
    {
        "id": "6b3aa4aec746166f",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "cb8126bd1386d561"
            ]
        ]
    },
    {
        "id": "40df1b3a6b7aedc3",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "138d51961a27a852"
            ]
        ]
    },
    {
        "id": "5a39b6c00403cbd3",
        "type": "debug",
        "z": "6e6223198d98fd21",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 740,
        "wires": []
    },
    {
        "id": "135f927ed12b9916",
        "type": "debug",
        "z": "6e6223198d98fd21",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload4",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 800,
        "wires": []
    },
    {
        "id": "60e7572c8c702fce",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "Initialize W30 counting",
        "func": "\nglobal.set(\"W30_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5cb563590b789fbf",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "60e7572c8c702fce"
            ]
        ]
    },
    {
        "id": "16e1274311b5eed5",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "comes on for first time",
        "func": "if(global.get(\"W30_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W30_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "ba3926b59d774757"
            ]
        ]
    },
    {
        "id": "ba3926b59d774757",
        "type": "switch",
        "z": "6e6223198d98fd21",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "c01d1ba94b3b2056"
            ]
        ]
    },
    {
        "id": "c01d1ba94b3b2056",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Post W30 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W30'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "06afb78a62806af9",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Get current for W30",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W30' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "538ecad26cc2d82d"
            ]
        ]
    },
    {
        "id": "41f9ce3625a37796",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "06afb78a62806af9"
            ]
        ]
    },
    {
        "id": "538ecad26cc2d82d",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "W30 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "e7ab2655a7c42384"
            ]
        ]
    },
    {
        "id": "e7ab2655a7c42384",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Post current as previous in W30",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W30'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 930,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "86af1b939930d53b",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w30 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "0fba9e9607eb77b7",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "86af1b939930d53b"
            ]
        ]
    },
    {
        "id": "95b647af4a0f9805",
        "type": "delay",
        "z": "6e6223198d98fd21",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "be21c060136c844a"
            ]
        ]
    },
    {
        "id": "e6090514c356b566",
        "type": "inject",
        "z": "6e6223198d98fd21",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "b6ec046092143a4a"
            ]
        ]
    },
    {
        "id": "b6ec046092143a4a",
        "type": "postgresql",
        "z": "6e6223198d98fd21",
        "name": "Get last for W30",
        "query": "SELECT * FROM W30\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 300,
        "y": 920,
        "wires": [
            [
                "8f0f41d58187ed2c"
            ]
        ]
    },
    {
        "id": "8f0f41d58187ed2c",
        "type": "function",
        "z": "6e6223198d98fd21",
        "name": "inject last count to W30",
        "func": "\nglobal.set(\"W30\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "d729ac2f0aeccd93"
            ]
        ]
    },
    {
        "id": "725655c311cffcbc",
        "type": "link in",
        "z": "6e6223198d98fd21",
        "name": "link in 4",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "5ed9219176a10b44"
            ]
        ]
    },
    {
        "id": "5393d02224c6d50e",
        "type": "link in",
        "z": "6e6223198d98fd21",
        "name": "link in 27",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 425,
        "y": 640,
        "wires": [
            [
                "044c561a97375e8f"
            ]
        ]
    },
    {
        "id": "6998fffa37c0c39b",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Manual updating of W34 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "cd152d2e38368002",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "Process W34 Information",
        "func": "var Mcount = parseInt(global.get(\"W34\")) - parseInt(global.get(\"W34_\"));\nvar npc = (global.get(\"W34_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW34\"));\nvar c_count = parseInt(global.get(\"c_W34\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW34\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W34\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "ca62647561476d82",
                "58e434d0b7820443"
            ]
        ]
    },
    {
        "id": "5c8f0554e211d35c",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "41479de980a77a5a"
            ]
        ]
    },
    {
        "id": "af2f0e3ebe50d0b3",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Get Part No for W34",
        "query": "SELECT part_no FROM machine_operator where machine_no='W34' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "4c8e724821f7e14e"
            ]
        ]
    },
    {
        "id": "6fec84dcf498ba90",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "manual Inject without reseting W34",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "af2f0e3ebe50d0b3"
            ]
        ]
    },
    {
        "id": "4c8e724821f7e14e",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "W34 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "23c8bf92c6c481d8"
            ]
        ]
    },
    {
        "id": "23c8bf92c6c481d8",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Get W34 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "17720f0befd453f0"
            ]
        ]
    },
    {
        "id": "17720f0befd453f0",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "Set W34 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W34_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "9bbdfea16dbc4bb5",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Post W34 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W34'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "00df984f495d912a",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W34','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8857e5bb431ecccd",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "inject 20 count to W34",
        "func": "var count =parseInt(global.get(\"W34\"));\nglobal.set(\"W34\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "4b4f332753d59c36"
            ]
        ]
    },
    {
        "id": "4b4f332753d59c36",
        "type": "mqtt out",
        "z": "520c4063e05692dd",
        "name": "",
        "topic": "W34",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "f474b542f9e7b0f2",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "manual count testing 1 for W34",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "8857e5bb431ecccd"
            ]
        ]
    },
    {
        "id": "27a05c1d1a831219",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "inject 1 count to W34",
        "func": "var count =global.get(\"W34\");\nglobal.set(\"W34\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 880,
        "wires": [
            [
                "4b4f332753d59c36"
            ]
        ]
    },
    {
        "id": "a66236aab101f3ef",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "manual count testing 2 for W34",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "27a05c1d1a831219"
            ]
        ]
    },
    {
        "id": "5bf0d3608237fc4f",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "6a0923c1aa10d7ba",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "ff4c2356170cce4e",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "824fbfde22140e93",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "798c81b594515b6e",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "41479de980a77a5a"
            ]
        ]
    },
    {
        "id": "39cfdc31b883f9af",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "41479de980a77a5a"
            ]
        ]
    },
    {
        "id": "371acbe061c96ec3",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Manual inject/reset W34",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "41479de980a77a5a"
            ]
        ]
    },
    {
        "id": "949945567ed8e83b",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Create entry for W34",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "00df984f495d912a"
            ]
        ]
    },
    {
        "id": "41479de980a77a5a",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "Initialize W34 counting",
        "func": "global.set(\"lW34\",0);\nglobal.set(\"c_W34\", 0);\nglobal.set(\"W34_\", global.get(\"W34\"));\n\nglobal.set(\"W34_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "af2f0e3ebe50d0b3"
            ]
        ]
    },
    {
        "id": "3d52ad5a424f9b7c",
        "type": "mqtt in",
        "z": "520c4063e05692dd",
        "name": "",
        "topic": "W34",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "fd1badb2fbf382e0",
                "9244b814b8de057e",
                "7c0870cbfcb3508a",
                "156d16d9101294b9",
                "3e7ca37720c30708"
            ]
        ]
    },
    {
        "id": "fd1badb2fbf382e0",
        "type": "ui_chart",
        "z": "520c4063e05692dd",
        "name": "",
        "group": "9a569d006e746b26",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W34 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9244b814b8de057e",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "SET count for W34",
        "func": "global.set(\"W34\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7c0870cbfcb3508a",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W34' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "da6b5bb0fdf60bdd",
                "279130484ea8d719"
            ]
        ]
    },
    {
        "id": "da6b5bb0fdf60bdd",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "GET count for W34",
        "func": "msg.payload=global.get(\"W34\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "1aa28b0418176183"
            ]
        ]
    },
    {
        "id": "78ae5359b2e63e31",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "49362a68a4371baf"
            ]
        ]
    },
    {
        "id": "1aa28b0418176183",
        "type": "ui_text",
        "z": "520c4063e05692dd",
        "group": "9a569d006e746b26",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W34 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "49362a68a4371baf",
        "type": "ui_text",
        "z": "520c4063e05692dd",
        "group": "9a569d006e746b26",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W34-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "96a8a477c4360288",
        "type": "mqtt out",
        "z": "520c4063e05692dd",
        "name": "",
        "topic": "W34/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "94ea34633386ff6a",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "reset W34",
        "func": "global.set(\"W34\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "248d0823f6d286cc"
            ]
        ]
    },
    {
        "id": "248d0823f6d286cc",
        "type": "mqtt out",
        "z": "520c4063e05692dd",
        "name": "",
        "topic": "W34",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1cb312bc42ccb5aa",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w34 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "4f1ce61547a298da",
                "dbf86d37688d9ffb"
            ]
        ]
    },
    {
        "id": "a919b7abe3f9ba9f",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "W34 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "1cb312bc42ccb5aa"
            ]
        ]
    },
    {
        "id": "4f1ce61547a298da",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "W34 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "b3a2cb66a1831f8b"
            ]
        ]
    },
    {
        "id": "dbf86d37688d9ffb",
        "type": "ui_table",
        "z": "520c4063e05692dd",
        "group": "9a569d006e746b26",
        "name": "W34 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b3a2cb66a1831f8b",
        "type": "ui_chart",
        "z": "520c4063e05692dd",
        "name": "",
        "group": "9a569d006e746b26",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W34 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f72cac2c5e9b43ef",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Data Schedule 2 For W34",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "edbd0d539c6303ea"
            ]
        ]
    },
    {
        "id": "ec3612fdb244765c",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Data Schedule 1 For W34 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "edbd0d539c6303ea"
            ]
        ]
    },
    {
        "id": "edbd0d539c6303ea",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "W34 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W34\");\nglobal.set(\"W34\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "74636c2485c902c5"
            ]
        ]
    },
    {
        "id": "31a6bd2fe00fd99f",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Data Schedule 4 For W34",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "edbd0d539c6303ea"
            ]
        ]
    },
    {
        "id": "ec1b5e49a49e419f",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Data Schedule 3 For W34",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "edbd0d539c6303ea"
            ]
        ]
    },
    {
        "id": "74636c2485c902c5",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 store data",
        "query": "INSERT INTO W34(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d58b134370f8a8c8",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Create W34 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "b0dca3b22713201f"
            ]
        ]
    },
    {
        "id": "b0dca3b22713201f",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 Table",
        "query": "CREATE TABLE W34 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "279130484ea8d719",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "W34 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "78ae5359b2e63e31"
            ]
        ]
    },
    {
        "id": "c76facbfa77b07e0",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "delete W34 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "57418e5fd60269fb"
            ]
        ]
    },
    {
        "id": "57418e5fd60269fb",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 Table delete",
        "query": "drop TABLE W34 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "156d16d9101294b9",
        "type": "trigger",
        "z": "520c4063e05692dd",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "dfd99aaddffe762d"
            ],
            [
                "3b4dda7242775add"
            ]
        ]
    },
    {
        "id": "a33128f6fdbaa17f",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "94ea34633386ff6a"
            ]
        ]
    },
    {
        "id": "dfd99aaddffe762d",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Post W34 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W34'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3b4dda7242775add",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Post W34 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W34'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e6cc1e8c183f4b52",
        "type": "ui_text",
        "z": "520c4063e05692dd",
        "group": "9a569d006e746b26",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W34 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "f46b1b7525a28552",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "W34 status check",
        "query": "SELECT status FROM machine_data where machine_no='W34';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "e6cc1e8c183f4b52"
            ]
        ]
    },
    {
        "id": "4076ad657d976c26",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "f46b1b7525a28552"
            ]
        ]
    },
    {
        "id": "3990ed0c0622f715",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "af2f0e3ebe50d0b3"
            ]
        ]
    },
    {
        "id": "ca62647561476d82",
        "type": "debug",
        "z": "520c4063e05692dd",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "3d5c0f754aa5b9bd",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "Initialize W34 counting",
        "func": "\nglobal.set(\"W34_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "476192a5f050c793",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "3d5c0f754aa5b9bd"
            ]
        ]
    },
    {
        "id": "3e7ca37720c30708",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "comes on for first time",
        "func": "if(global.get(\"W34_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W34_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "6a708f4cfa080f34"
            ]
        ]
    },
    {
        "id": "6a708f4cfa080f34",
        "type": "switch",
        "z": "520c4063e05692dd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "a059a379d21949a0"
            ]
        ]
    },
    {
        "id": "a059a379d21949a0",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Post W34 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W34'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f90ea945281be03d",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Get current for W34",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W34' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "e0d39ab510fabe6a"
            ]
        ]
    },
    {
        "id": "cb45579027f1775c",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "f90ea945281be03d"
            ]
        ]
    },
    {
        "id": "e0d39ab510fabe6a",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "W34 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "5860a1d34c3e1850"
            ]
        ]
    },
    {
        "id": "5860a1d34c3e1850",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Post current as previous in W34",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W34'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c5424d685bd113de",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w34 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a57cf1de4a450f18",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "c5424d685bd113de"
            ]
        ]
    },
    {
        "id": "58e434d0b7820443",
        "type": "delay",
        "z": "520c4063e05692dd",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "9bbdfea16dbc4bb5"
            ]
        ]
    },
    {
        "id": "bfc6a6ef0ecb15fb",
        "type": "inject",
        "z": "520c4063e05692dd",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "60846803aeb37602"
            ]
        ]
    },
    {
        "id": "60846803aeb37602",
        "type": "postgresql",
        "z": "520c4063e05692dd",
        "name": "Get last for W34",
        "query": "SELECT * FROM W34\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "48bc4b336684f52a"
            ]
        ]
    },
    {
        "id": "48bc4b336684f52a",
        "type": "function",
        "z": "520c4063e05692dd",
        "name": "inject last count to W34",
        "func": "\nglobal.set(\"W34\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "4b4f332753d59c36"
            ]
        ]
    },
    {
        "id": "55f780de7de2665f",
        "type": "link in",
        "z": "520c4063e05692dd",
        "name": "link in 5",
        "links": [
            "e63285d065adb307"
        ],
        "x": 45,
        "y": 540,
        "wires": [
            [
                "41479de980a77a5a"
            ]
        ]
    },
    {
        "id": "fd5d866d4e9e1e93",
        "type": "link in",
        "z": "520c4063e05692dd",
        "name": "link in 28",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 415,
        "y": 660,
        "wires": [
            [
                "cd152d2e38368002"
            ]
        ]
    },
    {
        "id": "3036747e6924f6e2",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Manual updating of W13 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "c4a13cc3bde36063",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "Process W13 Information",
        "func": "var Mcount = parseInt(global.get(\"W13\")) - parseInt(global.get(\"W13_\"));\nvar npc = (global.get(\"W13_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW13\"));\nvar c_count = parseInt(global.get(\"c_W13\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW13\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W13\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "55a4164458813491",
                "c5da13b191c66883"
            ]
        ]
    },
    {
        "id": "9c75da5f24c2af5c",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "4fd8f50c1a67f248"
            ]
        ]
    },
    {
        "id": "f775e1e24917c5c8",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Get Part No for W13",
        "query": "SELECT part_no FROM machine_operator where machine_no='W13' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "38370fa8a02e1e52"
            ]
        ]
    },
    {
        "id": "38ed920b6e9313ad",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "manual Inject without reseting W13",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "f775e1e24917c5c8"
            ]
        ]
    },
    {
        "id": "38370fa8a02e1e52",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "W13 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "393aef2c83cde8c8"
            ]
        ]
    },
    {
        "id": "393aef2c83cde8c8",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Get W13 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "0d278138b92320d9"
            ]
        ]
    },
    {
        "id": "0d278138b92320d9",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "Set W13 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W13_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e40f29f0b27f21ae",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Post W13 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W13'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1060,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "425920cd60e64d71",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W13','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ef92d6854c814fb1",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "inject 20 count to W13",
        "func": "var count =parseInt(global.get(\"W13\"));\nglobal.set(\"W13\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "747386b891076d1e"
            ]
        ]
    },
    {
        "id": "747386b891076d1e",
        "type": "mqtt out",
        "z": "696cd0cc28347921",
        "name": "",
        "topic": "W13",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "a2a741a14986c0f4",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "manual count testing 1 for W13",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "ef92d6854c814fb1"
            ]
        ]
    },
    {
        "id": "45eb67141320f860",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "inject 1 count to W13",
        "func": "var count =global.get(\"W13\");\nglobal.set(\"W13\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "747386b891076d1e"
            ]
        ]
    },
    {
        "id": "0f425c5fbe3c8363",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "manual count testing 2 for W13",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "45eb67141320f860"
            ]
        ]
    },
    {
        "id": "34d9a2296aa7f8c5",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "ed8841d9a9739200",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "1e4de5d411440dd3",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "f3571c26dec6fc70",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "aa5b77cabee5d2cf",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "4fd8f50c1a67f248"
            ]
        ]
    },
    {
        "id": "ec4f717bf5f04c72",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "4fd8f50c1a67f248"
            ]
        ]
    },
    {
        "id": "83e7486ec5c040aa",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Manual inject/reset W13",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "4fd8f50c1a67f248"
            ]
        ]
    },
    {
        "id": "5756edd57c5ea09a",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Create entry for W13",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "425920cd60e64d71"
            ]
        ]
    },
    {
        "id": "4fd8f50c1a67f248",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "Initialize W13 counting",
        "func": "global.set(\"lW13\",0);\nglobal.set(\"c_W13\", 0);\nglobal.set(\"W13_\", global.get(\"W13\"));\nglobal.set(\"W13_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "f775e1e24917c5c8"
            ]
        ]
    },
    {
        "id": "2a363622ba785ff7",
        "type": "mqtt in",
        "z": "696cd0cc28347921",
        "name": "",
        "topic": "W13",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "ec0ceab6390b6b84",
                "980b5cb14630a59b",
                "63c41f8155fa948e",
                "680730ef24247d2f",
                "f04852cd8cf4e87f"
            ]
        ]
    },
    {
        "id": "ec0ceab6390b6b84",
        "type": "ui_chart",
        "z": "696cd0cc28347921",
        "name": "",
        "group": "14a8757bef6e4e95",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W13 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "980b5cb14630a59b",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "SET count for W13",
        "func": "global.set(\"W13\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "63c41f8155fa948e",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W13' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "afd8d32d6b868234",
                "f367b4a5cc210d9d"
            ]
        ]
    },
    {
        "id": "afd8d32d6b868234",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "GET count for W13",
        "func": "msg.payload=global.get(\"W13\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "c00d8b51a9ec2b4f"
            ]
        ]
    },
    {
        "id": "a787514f60e442c8",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "7cd250ea7996027b"
            ]
        ]
    },
    {
        "id": "c00d8b51a9ec2b4f",
        "type": "ui_text",
        "z": "696cd0cc28347921",
        "group": "14a8757bef6e4e95",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W13 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "7cd250ea7996027b",
        "type": "ui_text",
        "z": "696cd0cc28347921",
        "group": "14a8757bef6e4e95",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W13-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "a1fbed41766738bc",
        "type": "mqtt out",
        "z": "696cd0cc28347921",
        "name": "",
        "topic": "W13/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "26cc42a49a191363",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "reset W13",
        "func": "global.set(\"W13\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "5428593c08440b04"
            ]
        ]
    },
    {
        "id": "5428593c08440b04",
        "type": "mqtt out",
        "z": "696cd0cc28347921",
        "name": "",
        "topic": "W13",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d5458f339ad1f3fb",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w13 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "d94361439dcd2975",
                "54f73df5d41bf601"
            ]
        ]
    },
    {
        "id": "be4662927b30ed67",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "W13 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "d5458f339ad1f3fb"
            ]
        ]
    },
    {
        "id": "d94361439dcd2975",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "W13 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "f87a611abbdd24ae"
            ]
        ]
    },
    {
        "id": "54f73df5d41bf601",
        "type": "ui_table",
        "z": "696cd0cc28347921",
        "group": "14a8757bef6e4e95",
        "name": "W13 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "f87a611abbdd24ae",
        "type": "ui_chart",
        "z": "696cd0cc28347921",
        "name": "",
        "group": "14a8757bef6e4e95",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W13 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "8a38d586567f7c43",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Data Schedule 2 For W13",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "c337bc0918e37050"
            ]
        ]
    },
    {
        "id": "1b1fe112c6ba680e",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Data Schedule 1 For W13 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "c337bc0918e37050"
            ]
        ]
    },
    {
        "id": "c337bc0918e37050",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "W13 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W13\");\nglobal.set(\"W13\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "3bd5e18afc4ac665"
            ]
        ]
    },
    {
        "id": "3c58d10d635092b0",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Data Schedule 4 For W13",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "c337bc0918e37050"
            ]
        ]
    },
    {
        "id": "234af9eedf1e77f3",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Data Schedule 3 For W13",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "c337bc0918e37050"
            ]
        ]
    },
    {
        "id": "3bd5e18afc4ac665",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 store data",
        "query": "INSERT INTO W13(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "2679efb2edea5ac0",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Create W13 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "1a9a593d9f5911ed"
            ]
        ]
    },
    {
        "id": "1a9a593d9f5911ed",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 Table",
        "query": "CREATE TABLE W13 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f367b4a5cc210d9d",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "W13 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "a787514f60e442c8"
            ]
        ]
    },
    {
        "id": "6da1cd74c13b83c3",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "delete W13 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "3d49af7808a82bdb"
            ]
        ]
    },
    {
        "id": "3d49af7808a82bdb",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 Table delete",
        "query": "drop TABLE W13 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "680730ef24247d2f",
        "type": "trigger",
        "z": "696cd0cc28347921",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "c612d07d7cb3f652"
            ],
            [
                "54b9d29164fd89c1"
            ]
        ]
    },
    {
        "id": "1a8ee9edddd2e656",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "26cc42a49a191363"
            ]
        ]
    },
    {
        "id": "c612d07d7cb3f652",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Post W13 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W13'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "54b9d29164fd89c1",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Post W13 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W13'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9937b5a07018f463",
        "type": "ui_text",
        "z": "696cd0cc28347921",
        "group": "14a8757bef6e4e95",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W13 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "9954a0cec66cb190",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "W13 status check",
        "query": "SELECT status FROM machine_data where machine_no='W13';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "9937b5a07018f463"
            ]
        ]
    },
    {
        "id": "a1bd66a32694f175",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "9954a0cec66cb190"
            ]
        ]
    },
    {
        "id": "576c9861351222b9",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "f775e1e24917c5c8"
            ]
        ]
    },
    {
        "id": "55a4164458813491",
        "type": "debug",
        "z": "696cd0cc28347921",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "d4898e554276e273",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "Initialize W13 counting",
        "func": "\nglobal.set(\"W13_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "142b007d519e77f2",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "d4898e554276e273"
            ]
        ]
    },
    {
        "id": "f04852cd8cf4e87f",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "comes on for first time",
        "func": "if(global.get(\"W34_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W34_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "baacddbca0554311"
            ]
        ]
    },
    {
        "id": "baacddbca0554311",
        "type": "switch",
        "z": "696cd0cc28347921",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "fdeb9bc4d81cb458"
            ]
        ]
    },
    {
        "id": "fdeb9bc4d81cb458",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Post W13 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W13'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "42c589c4c5d7bb59",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Get current for W13",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W13' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "068a0bd37faf4cb6"
            ]
        ]
    },
    {
        "id": "6c5af85650dc18b1",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "42c589c4c5d7bb59"
            ]
        ]
    },
    {
        "id": "068a0bd37faf4cb6",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "W13 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "da041b88db1f2ed6"
            ]
        ]
    },
    {
        "id": "da041b88db1f2ed6",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Post current as previous in W13",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W13'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "447988c116de0bf8",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w13 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ff391170981351dc",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "447988c116de0bf8"
            ]
        ]
    },
    {
        "id": "c5da13b191c66883",
        "type": "delay",
        "z": "696cd0cc28347921",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 700,
        "wires": [
            [
                "e40f29f0b27f21ae"
            ]
        ]
    },
    {
        "id": "1dc97d43dfefab55",
        "type": "inject",
        "z": "696cd0cc28347921",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "6de281e061d03070"
            ]
        ]
    },
    {
        "id": "6de281e061d03070",
        "type": "postgresql",
        "z": "696cd0cc28347921",
        "name": "Get last for W13",
        "query": "SELECT * FROM W13\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "fe5db078008cd4a0"
            ]
        ]
    },
    {
        "id": "fe5db078008cd4a0",
        "type": "function",
        "z": "696cd0cc28347921",
        "name": "inject last count to W13",
        "func": "\nglobal.set(\"W13\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "747386b891076d1e"
            ]
        ]
    },
    {
        "id": "0e5dcf9a18517534",
        "type": "link in",
        "z": "696cd0cc28347921",
        "name": "link in 6",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "4fd8f50c1a67f248"
            ]
        ]
    },
    {
        "id": "e3e84a8449c60463",
        "type": "link in",
        "z": "696cd0cc28347921",
        "name": "link in 29",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 425,
        "y": 660,
        "wires": [
            [
                "c4a13cc3bde36063"
            ]
        ]
    },
    {
        "id": "527c4ab0fa182436",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Manual updating of W14 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "ca0a211d25b94514",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "Process W14 Information",
        "func": "var Mcount = parseInt(global.get(\"W14\")) - parseInt(global.get(\"W14_\"));\nvar npc = (global.get(\"W14_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW14\"));\nvar c_count = parseInt(global.get(\"c_W14\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW14\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W14\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "d145e73c879d3e0f",
                "0e55e1e522e41d46"
            ]
        ]
    },
    {
        "id": "b63ed9f357d0290a",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "eb7f0850ede170e3"
            ]
        ]
    },
    {
        "id": "2ffdbd3bf14f4397",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Get Part No for W14",
        "query": "SELECT part_no FROM machine_operator where machine_no='W14' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "3f1718dbb5f16f7e"
            ]
        ]
    },
    {
        "id": "6893d7d617c4defd",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "manual Inject without reseting W14",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "2ffdbd3bf14f4397"
            ]
        ]
    },
    {
        "id": "3f1718dbb5f16f7e",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "W14 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "7735e513580c09ca"
            ]
        ]
    },
    {
        "id": "7735e513580c09ca",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Get W14 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "b6b1b22a18e777a7"
            ]
        ]
    },
    {
        "id": "b6b1b22a18e777a7",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "Set W14 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W14_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "44e1584b98ce6b6e",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Post W14 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W14'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6bbd57c9d3cc4401",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W14','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "372920c16b6752de",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "inject 20 count to W14",
        "func": "var count =parseInt(global.get(\"W14\"));\nglobal.set(\"W14\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "8c1e6d16d4b87d69"
            ]
        ]
    },
    {
        "id": "8c1e6d16d4b87d69",
        "type": "mqtt out",
        "z": "1f42c845b876af71",
        "name": "",
        "topic": "W14",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "41bf6b7c528d2e0d",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "manual count testing 1 for W14",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "372920c16b6752de"
            ]
        ]
    },
    {
        "id": "840661f86c4f3b29",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "inject 1 count to W14",
        "func": "var count =global.get(\"W14\");\nglobal.set(\"W14\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 880,
        "wires": [
            [
                "8c1e6d16d4b87d69"
            ]
        ]
    },
    {
        "id": "f94467e39ab4893e",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "manual count testing 2 for W14",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "840661f86c4f3b29"
            ]
        ]
    },
    {
        "id": "c81c5b7904226d4b",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "56acfadb63f7a5b5",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "f5827cedb1496fc8",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "e0e1adb362f99649",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "f466f65bd3faa84d",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "eb7f0850ede170e3"
            ]
        ]
    },
    {
        "id": "dcbca43f96dd0ac8",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "eb7f0850ede170e3"
            ]
        ]
    },
    {
        "id": "bf1043f9a4cb93b9",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Manual inject/reset W14",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "eb7f0850ede170e3"
            ]
        ]
    },
    {
        "id": "69adcedc16d9f0ae",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Create entry for W14",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "6bbd57c9d3cc4401"
            ]
        ]
    },
    {
        "id": "eb7f0850ede170e3",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "Initialize W14 counting",
        "func": "global.set(\"lW14\",0);\nglobal.set(\"c_W14\", 0);\nglobal.set(\"W14_\", global.get(\"W14\"));\nglobal.set(\"W14_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "2ffdbd3bf14f4397"
            ]
        ]
    },
    {
        "id": "bbe90780041527e7",
        "type": "mqtt in",
        "z": "1f42c845b876af71",
        "name": "",
        "topic": "W14",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b8a32ad5db8cf632",
                "420c2f9287a6392e",
                "66ba35db08263a80",
                "e2bebe7309bfc868",
                "666ee0a06adc497c"
            ]
        ]
    },
    {
        "id": "b8a32ad5db8cf632",
        "type": "ui_chart",
        "z": "1f42c845b876af71",
        "name": "",
        "group": "041063842a8e9050",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W14 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "420c2f9287a6392e",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "SET count for W14",
        "func": "global.set(\"W14\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "66ba35db08263a80",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W14' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "3aa9d59838bed81c",
                "c5364397915fde09"
            ]
        ]
    },
    {
        "id": "3aa9d59838bed81c",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "GET count for W14",
        "func": "msg.payload=global.get(\"W14\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "ec3d0c49e29c30e4"
            ]
        ]
    },
    {
        "id": "fcebcbdaa717f5c1",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "15d868316220619e"
            ]
        ]
    },
    {
        "id": "ec3d0c49e29c30e4",
        "type": "ui_text",
        "z": "1f42c845b876af71",
        "group": "041063842a8e9050",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W14 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "15d868316220619e",
        "type": "ui_text",
        "z": "1f42c845b876af71",
        "group": "041063842a8e9050",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W14-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "541bcda20be655c6",
        "type": "mqtt out",
        "z": "1f42c845b876af71",
        "name": "",
        "topic": "W14/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "86798c0ae37c8275",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "reset W14",
        "func": "global.set(\"W14\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "c25fe1a1cce7eb59"
            ]
        ]
    },
    {
        "id": "c25fe1a1cce7eb59",
        "type": "mqtt out",
        "z": "1f42c845b876af71",
        "name": "",
        "topic": "W14",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "04d75211e04c553b",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w14 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "c3586dc21e4f1d31",
                "c2abd02a82c08aef"
            ]
        ]
    },
    {
        "id": "25201bf4969fe2f4",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "W14 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "04d75211e04c553b"
            ]
        ]
    },
    {
        "id": "c3586dc21e4f1d31",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "W14 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "1f7e8df3ce0ce21d"
            ]
        ]
    },
    {
        "id": "c2abd02a82c08aef",
        "type": "ui_table",
        "z": "1f42c845b876af71",
        "group": "041063842a8e9050",
        "name": "W14 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1f7e8df3ce0ce21d",
        "type": "ui_chart",
        "z": "1f42c845b876af71",
        "name": "",
        "group": "041063842a8e9050",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W14 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "dfc0f5b37277a6b8",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Data Schedule 2 For W14",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "6b12d97d02ea2558"
            ]
        ]
    },
    {
        "id": "a4e416913fac554b",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Data Schedule 1 For W14 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "6b12d97d02ea2558"
            ]
        ]
    },
    {
        "id": "6b12d97d02ea2558",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "W14 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W14\");\nglobal.set(\"W14\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "18cabebedc894e5e"
            ]
        ]
    },
    {
        "id": "18709ddb19a5e6a7",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Data Schedule 4 For W14",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "6b12d97d02ea2558"
            ]
        ]
    },
    {
        "id": "73f8fe034cecf733",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Data Schedule 3 For W14",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "6b12d97d02ea2558"
            ]
        ]
    },
    {
        "id": "18cabebedc894e5e",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 store data",
        "query": "INSERT INTO W14(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "c74b25fb014cc6e7",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Create W14 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "d3aeca7ffbc88731"
            ]
        ]
    },
    {
        "id": "d3aeca7ffbc88731",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 Table",
        "query": "CREATE TABLE W14 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c5364397915fde09",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "W14 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "fcebcbdaa717f5c1"
            ]
        ]
    },
    {
        "id": "92916f66c91d6e07",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "delete W14 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "27156e53c1297207"
            ]
        ]
    },
    {
        "id": "27156e53c1297207",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 Table delete",
        "query": "drop TABLE W14 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "e2bebe7309bfc868",
        "type": "trigger",
        "z": "1f42c845b876af71",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "11466d3d41d6cef5"
            ],
            [
                "ab571d3510c1d437"
            ]
        ]
    },
    {
        "id": "4d0791c11f5e592e",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "86798c0ae37c8275"
            ]
        ]
    },
    {
        "id": "11466d3d41d6cef5",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Post W14 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W14'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ab571d3510c1d437",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Post W14 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W14'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e3451dedf470a3cb",
        "type": "ui_text",
        "z": "1f42c845b876af71",
        "group": "041063842a8e9050",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W14 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "e825f01a204737c6",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "W14 status check",
        "query": "SELECT status FROM machine_data where machine_no='W14';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "e3451dedf470a3cb"
            ]
        ]
    },
    {
        "id": "8a19811d742358c9",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "e825f01a204737c6"
            ]
        ]
    },
    {
        "id": "6ed32e5ecdc13eb0",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "2ffdbd3bf14f4397"
            ]
        ]
    },
    {
        "id": "d145e73c879d3e0f",
        "type": "debug",
        "z": "1f42c845b876af71",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "6a507c72da820e06",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "Initialize W14 counting",
        "func": "\nglobal.set(\"W14_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e15a7e92caaebfe2",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "6a507c72da820e06"
            ]
        ]
    },
    {
        "id": "666ee0a06adc497c",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "comes on for first time",
        "func": "if(global.get(\"W14_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W14_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "308a912045a42c95"
            ]
        ]
    },
    {
        "id": "308a912045a42c95",
        "type": "switch",
        "z": "1f42c845b876af71",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "79f8d2696f72108d"
            ]
        ]
    },
    {
        "id": "79f8d2696f72108d",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Post W14 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W14'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6b607fc03c1a6e07",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Get current for W14",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W14' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "fd95c4c2f8a215f3"
            ]
        ]
    },
    {
        "id": "16f056631a416b8b",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "6b607fc03c1a6e07"
            ]
        ]
    },
    {
        "id": "fd95c4c2f8a215f3",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "W14 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "c01fe42476ea8e48"
            ]
        ]
    },
    {
        "id": "c01fe42476ea8e48",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Post current as previous in W14",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W14'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 930,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e6131eabf379cf07",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w14 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d8e1cb4d5b8dda4e",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "e6131eabf379cf07"
            ]
        ]
    },
    {
        "id": "0e55e1e522e41d46",
        "type": "delay",
        "z": "1f42c845b876af71",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 700,
        "wires": [
            [
                "44e1584b98ce6b6e"
            ]
        ]
    },
    {
        "id": "171e6976d28aed87",
        "type": "inject",
        "z": "1f42c845b876af71",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "5a469c7f33bcc31f"
            ]
        ]
    },
    {
        "id": "5a469c7f33bcc31f",
        "type": "postgresql",
        "z": "1f42c845b876af71",
        "name": "Get last for W14",
        "query": "SELECT * FROM W14\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 300,
        "y": 940,
        "wires": [
            [
                "179c3a2d2daf3c56"
            ]
        ]
    },
    {
        "id": "179c3a2d2daf3c56",
        "type": "function",
        "z": "1f42c845b876af71",
        "name": "inject last count to W14",
        "func": "\nglobal.set(\"W14\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            [
                "8c1e6d16d4b87d69"
            ]
        ]
    },
    {
        "id": "9e1883dee7b4e693",
        "type": "link in",
        "z": "1f42c845b876af71",
        "name": "link in 7",
        "links": [
            "e63285d065adb307"
        ],
        "x": 45,
        "y": 540,
        "wires": [
            [
                "eb7f0850ede170e3"
            ]
        ]
    },
    {
        "id": "913e67bef20e0113",
        "type": "link in",
        "z": "1f42c845b876af71",
        "name": "link in 30",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 435,
        "y": 660,
        "wires": [
            [
                "ca0a211d25b94514"
            ]
        ]
    },
    {
        "id": "8c9b10b046bf4c20",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Manual updating of W26 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "5d1d40381646099b"
            ]
        ]
    },
    {
        "id": "5d1d40381646099b",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "Process W26 Information",
        "func": "var Mcount = parseInt(global.get(\"W26\")) - parseInt(global.get(\"W26_\"));\nvar npc = (global.get(\"W26_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW26\"));\nvar c_count = parseInt(global.get(\"c_W26\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW26\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W26\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "8ef4f84c81d2c23e",
                "e6c180d53c2ce2f3"
            ]
        ]
    },
    {
        "id": "120eb4f03f3dbc61",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "de23e2e03009d10b"
            ]
        ]
    },
    {
        "id": "6f82170ebd3976bc",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "Get Part No for W26",
        "query": "SELECT part_no FROM machine_operator where machine_no='W26' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "6938a4f63256d7f4"
            ]
        ]
    },
    {
        "id": "6ae9b1ede4d6e79e",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "manual Inject without reseting W26",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "6f82170ebd3976bc"
            ]
        ]
    },
    {
        "id": "6938a4f63256d7f4",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "W26 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "13b6604d2f471876"
            ]
        ]
    },
    {
        "id": "13b6604d2f471876",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "Get W26 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "8d72449f04e462e0"
            ]
        ]
    },
    {
        "id": "8d72449f04e462e0",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "Set W26 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W26_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8ef4f84c81d2c23e",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "Post W26 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W26'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "39d5f617e5fa9d5a",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W26','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1da9295385d4827f",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "inject 20 count to W26",
        "func": "var count =parseInt(global.get(\"W26\"));\nglobal.set(\"W26\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 860,
        "wires": [
            [
                "86d7450ab4ab9da1"
            ]
        ]
    },
    {
        "id": "86d7450ab4ab9da1",
        "type": "mqtt out",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "topic": "W26",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "4b89a11e39181125",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "manual count testing 1 for W26",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 860,
        "wires": [
            [
                "1da9295385d4827f"
            ]
        ]
    },
    {
        "id": "ad672cfc89c0f9cd",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "inject 1 count to W26",
        "func": "var count =global.get(\"W26\");\nglobal.set(\"W26\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 920,
        "wires": [
            [
                "86d7450ab4ab9da1"
            ]
        ]
    },
    {
        "id": "9d78997e2191cf3e",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "manual count testing 2 for W26",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 920,
        "wires": [
            [
                "ad672cfc89c0f9cd"
            ]
        ]
    },
    {
        "id": "5ff52720814eacae",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "5d1d40381646099b"
            ]
        ]
    },
    {
        "id": "2931372b2042b7e3",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "5d1d40381646099b"
            ]
        ]
    },
    {
        "id": "4acf0f33dc33322f",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "5d1d40381646099b"
            ]
        ]
    },
    {
        "id": "dfc65215b8c16365",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "5d1d40381646099b"
            ]
        ]
    },
    {
        "id": "458493516a9d74d8",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "de23e2e03009d10b"
            ]
        ]
    },
    {
        "id": "3b5d05ae7b2063a9",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "de23e2e03009d10b"
            ]
        ]
    },
    {
        "id": "48982bc8e659ec6f",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Manual inject/reset W26",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "de23e2e03009d10b"
            ]
        ]
    },
    {
        "id": "1a581941004adf02",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Create entry for W26",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "39d5f617e5fa9d5a"
            ]
        ]
    },
    {
        "id": "de23e2e03009d10b",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "Initialize W26 counting",
        "func": "global.set(\"lW26\",0);\nglobal.set(\"c_W26\", 0);\nglobal.set(\"W26_\", global.get(\"W26\"));\nglobal.set(\"machine_no\",'W26')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "6f82170ebd3976bc"
            ]
        ]
    },
    {
        "id": "7cf561169f6f5089",
        "type": "mqtt in",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "topic": "W26",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "215b7d44172629a2",
                "3adef299cf00ce2b",
                "b40a0ed51aba5e32",
                "267ea03d367520f9"
            ]
        ]
    },
    {
        "id": "215b7d44172629a2",
        "type": "ui_chart",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "group": "ef13138879730507",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W26 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3adef299cf00ce2b",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "SET count for W26",
        "func": "global.set(\"W26\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b40a0ed51aba5e32",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W26' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "ceacf69e08f5c468",
                "08e58f9d15a767ac"
            ]
        ]
    },
    {
        "id": "ceacf69e08f5c468",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "GET count for W26",
        "func": "msg.payload=global.get(\"W26\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "fb6945f34e8faf46"
            ]
        ]
    },
    {
        "id": "59ce6c9323188479",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "e3f9de7321a9e234"
            ]
        ]
    },
    {
        "id": "fb6945f34e8faf46",
        "type": "ui_text",
        "z": "f0fa34f030b02f7a",
        "group": "ef13138879730507",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W26 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "e3f9de7321a9e234",
        "type": "ui_text",
        "z": "f0fa34f030b02f7a",
        "group": "ef13138879730507",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W26-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "7e973f824e666def",
        "type": "mqtt out",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "topic": "W26/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "aa0e0e5a9d016e8b",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "reset W26",
        "func": "global.set(\"W26\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "dee86c5ed33bce1a"
            ]
        ]
    },
    {
        "id": "dee86c5ed33bce1a",
        "type": "mqtt out",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "topic": "W26",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1f8404ce3d59857f",
        "type": "ui_button",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "group": "ef13138879730507",
        "order": 12,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Reset W26 count",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset count",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "7e973f824e666def",
                "aa0e0e5a9d016e8b"
            ]
        ]
    },
    {
        "id": "507432cff3ce3fc0",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w26 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "4326a1047f967515",
                "eea6f2f8e14996f3"
            ]
        ]
    },
    {
        "id": "2d4554405043cc3e",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "507432cff3ce3fc0"
            ]
        ]
    },
    {
        "id": "4326a1047f967515",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "5e43b55fb1e041b4"
            ]
        ]
    },
    {
        "id": "eea6f2f8e14996f3",
        "type": "ui_table",
        "z": "f0fa34f030b02f7a",
        "group": "ef13138879730507",
        "name": "W26 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5e43b55fb1e041b4",
        "type": "ui_chart",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "group": "ef13138879730507",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W26 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3a2cfb9b8677c54c",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Data Schedule 2 For W26",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "701c88ee4b607a7d"
            ]
        ]
    },
    {
        "id": "79471c97e963c1b5",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Data Schedule 1 For W26 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "701c88ee4b607a7d"
            ]
        ]
    },
    {
        "id": "701c88ee4b607a7d",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "W26 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W26\");\nglobal.set(\"W26\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "b39ab7f3f31acb6b"
            ]
        ]
    },
    {
        "id": "998d2dd015e0b494",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Data Schedule 4 For W26",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "701c88ee4b607a7d"
            ]
        ]
    },
    {
        "id": "8d932f23d3ed8dd8",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Data Schedule 3 For W26",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "701c88ee4b607a7d"
            ]
        ]
    },
    {
        "id": "b39ab7f3f31acb6b",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 store data",
        "query": "INSERT INTO W26(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "8a4d69abdd1d461c",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Create W26 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "c4c249c66be5b062"
            ]
        ]
    },
    {
        "id": "c4c249c66be5b062",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Table",
        "query": "CREATE TABLE W26 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "08e58f9d15a767ac",
        "type": "function",
        "z": "f0fa34f030b02f7a",
        "name": "W26 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "59ce6c9323188479"
            ]
        ]
    },
    {
        "id": "51ecdec4f27c5f92",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "delete W26 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "56c7d049dd699f1e"
            ]
        ]
    },
    {
        "id": "56c7d049dd699f1e",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 Table delete",
        "query": "drop TABLE W26 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "267ea03d367520f9",
        "type": "trigger",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "56f1ca3382a0775c"
            ],
            [
                "db18802dec006a4b"
            ]
        ]
    },
    {
        "id": "818e50f29f549f5b",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "1f8404ce3d59857f"
            ]
        ]
    },
    {
        "id": "56f1ca3382a0775c",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "Post W26 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W26'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "db18802dec006a4b",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "Post W26 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W26'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3838350ba3233acc",
        "type": "ui_text",
        "z": "f0fa34f030b02f7a",
        "group": "ef13138879730507",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W26 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "678dcdd955c445c6",
        "type": "postgresql",
        "z": "f0fa34f030b02f7a",
        "name": "W26 status check",
        "query": "SELECT status FROM machine_data where machine_no='W26';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "3838350ba3233acc"
            ]
        ]
    },
    {
        "id": "6779990faf46a2e6",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "678dcdd955c445c6"
            ]
        ]
    },
    {
        "id": "5a8c33ffb1b07a76",
        "type": "inject",
        "z": "f0fa34f030b02f7a",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "6f82170ebd3976bc"
            ]
        ]
    },
    {
        "id": "e6c180d53c2ce2f3",
        "type": "debug",
        "z": "f0fa34f030b02f7a",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "67d891e03f5be05c",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Manual updating of W8 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "9389c81343544c11",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "Process W8 Information",
        "func": "var Mcount = parseInt(global.get(\"W8\")) - parseInt(global.get(\"W8_\"));\nvar npc = (global.get(\"W8_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW8\"));\nvar c_count = parseInt(global.get(\"c_W8\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW8\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W8\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "5e2c28df8ea665e0",
                "b3cfd0e29c0c79de"
            ]
        ]
    },
    {
        "id": "207078c2408a841c",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "548840f430505e5f"
            ]
        ]
    },
    {
        "id": "14ca67caaca0103e",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Get Part No for W8",
        "query": "SELECT part_no FROM machine_operator where machine_no='W8' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "99dd7469cad43cec"
            ]
        ]
    },
    {
        "id": "ce0dc0173fe45b5d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "manual Inject without reseting W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "14ca67caaca0103e"
            ]
        ]
    },
    {
        "id": "99dd7469cad43cec",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "0ecd6a68bd703eb0"
            ]
        ]
    },
    {
        "id": "0ecd6a68bd703eb0",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Get W8 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "3f78487330af2b7a"
            ]
        ]
    },
    {
        "id": "3f78487330af2b7a",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "Set W8 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W8_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8a52211b175fbc51",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Post W8 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W8'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1070,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "9dc94837366e9c44",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W8','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "cb9df37f8d676da7",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "inject 20 count to W8",
        "func": "var count =parseInt(global.get(\"W8\"));\nglobal.set(\"W8\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "1c04560284f9931e"
            ]
        ]
    },
    {
        "id": "1c04560284f9931e",
        "type": "mqtt out",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "topic": "W8",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "a8689a27204a4fa1",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "manual count testing 1 for W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "cb9df37f8d676da7"
            ]
        ]
    },
    {
        "id": "2de7a8b5527a003c",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "inject 1 count to W8",
        "func": "var count =global.get(\"W8\");\nglobal.set(\"W8\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 880,
        "wires": [
            [
                "1c04560284f9931e"
            ]
        ]
    },
    {
        "id": "5c9d73e88838deb3",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "manual count testing 2 for W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 880,
        "wires": [
            [
                "2de7a8b5527a003c"
            ]
        ]
    },
    {
        "id": "4bf1fc2e4368767d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "38e6fc94c3feca6d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "0b0ffe82709a3170",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "8bf95cd2e8640a35",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "6dcf65d4c4e5a5d8",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "548840f430505e5f"
            ]
        ]
    },
    {
        "id": "1fdb1a420daf5e22",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "548840f430505e5f"
            ]
        ]
    },
    {
        "id": "91b9ac035fae48e8",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Manual inject/reset W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "548840f430505e5f"
            ]
        ]
    },
    {
        "id": "ab80fd86d8d7ba31",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Create entry for W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "9dc94837366e9c44"
            ]
        ]
    },
    {
        "id": "548840f430505e5f",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "Initialize W8 counting",
        "func": "global.set(\"lW8\",0);\nglobal.set(\"c_W8\", 0);\nglobal.set(\"W8_\", global.get(\"W8\"));\nglobal.set(\"W8_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "14ca67caaca0103e"
            ]
        ]
    },
    {
        "id": "cd8939805ca1fc56",
        "type": "mqtt in",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "topic": "W8",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "27bae6c10ddfbfcc",
                "9723984c6213445d",
                "0ea8e0b3cff1f88e",
                "01d59b8ec2d26701",
                "05acda76e9da31af"
            ]
        ]
    },
    {
        "id": "27bae6c10ddfbfcc",
        "type": "ui_chart",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "group": "a7bda16e46bf2bf6",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W8 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9723984c6213445d",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "SET count for W8",
        "func": "global.set(\"W8\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0ea8e0b3cff1f88e",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W8' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "1216351f74d9688b",
                "6aa0c99b2981ace5"
            ]
        ]
    },
    {
        "id": "1216351f74d9688b",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "GET count for W8",
        "func": "msg.payload=global.get(\"W8\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "02cc4d545dcc6466"
            ]
        ]
    },
    {
        "id": "293bd6060eabe06a",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "a970486c82c91e4f"
            ]
        ]
    },
    {
        "id": "02cc4d545dcc6466",
        "type": "ui_text",
        "z": "0b7d0a8e9b80adfb",
        "group": "a7bda16e46bf2bf6",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W8 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "a970486c82c91e4f",
        "type": "ui_text",
        "z": "0b7d0a8e9b80adfb",
        "group": "a7bda16e46bf2bf6",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W8-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "6ceebeca344f3112",
        "type": "mqtt out",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "topic": "W8/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "8664f0f8899357ef",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "reset W8",
        "func": "global.set(\"W8\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "e4e4077f55687e7e"
            ]
        ]
    },
    {
        "id": "e4e4077f55687e7e",
        "type": "mqtt out",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "topic": "W8",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9d03e690877fdb7b",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w8 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "0b4dda334b36d7b7",
                "35c0c78cae8e56f3"
            ]
        ]
    },
    {
        "id": "591751c39e3a4b36",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "9d03e690877fdb7b"
            ]
        ]
    },
    {
        "id": "0b4dda334b36d7b7",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "1941371b7dfc0502"
            ]
        ]
    },
    {
        "id": "35c0c78cae8e56f3",
        "type": "ui_table",
        "z": "0b7d0a8e9b80adfb",
        "group": "a7bda16e46bf2bf6",
        "name": "W8 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1941371b7dfc0502",
        "type": "ui_chart",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "group": "a7bda16e46bf2bf6",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W8 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "dd065c26ece9a914",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Data Schedule 2 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "485c1a82f21a5805"
            ]
        ]
    },
    {
        "id": "0f42af078abda32e",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Data Schedule 1 For W8 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "485c1a82f21a5805"
            ]
        ]
    },
    {
        "id": "485c1a82f21a5805",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W8\");\nglobal.set(\"W8\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "0e59e5f63c1c84b2"
            ]
        ]
    },
    {
        "id": "63f69f598257fb5d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Data Schedule 4 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "485c1a82f21a5805"
            ]
        ]
    },
    {
        "id": "d377245b69d9412d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Data Schedule 3 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "485c1a82f21a5805"
            ]
        ]
    },
    {
        "id": "0e59e5f63c1c84b2",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 store data",
        "query": "INSERT INTO W8(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "2f3b17d95285fc40",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Create W8 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "3d0e85124065ca67"
            ]
        ]
    },
    {
        "id": "3d0e85124065ca67",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Table",
        "query": "CREATE TABLE W8 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6aa0c99b2981ace5",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "293bd6060eabe06a"
            ]
        ]
    },
    {
        "id": "8235080e6b1e4860",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "delete W8 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "6281f9cec7af1b40"
            ]
        ]
    },
    {
        "id": "6281f9cec7af1b40",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 Table delete",
        "query": "drop TABLE W8 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "01d59b8ec2d26701",
        "type": "trigger",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "85f5d863bb8363a8"
            ],
            [
                "7edb8eaaa8680a80"
            ]
        ]
    },
    {
        "id": "87fe225850b1d4c2",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "8664f0f8899357ef"
            ]
        ]
    },
    {
        "id": "85f5d863bb8363a8",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Post W8 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W8'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7edb8eaaa8680a80",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Post W8 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W8'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5432c65cc38e367d",
        "type": "ui_text",
        "z": "0b7d0a8e9b80adfb",
        "group": "a7bda16e46bf2bf6",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W8 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "008cdcc73fcf3213",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8 status check",
        "query": "SELECT status FROM machine_data where machine_no='W8';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "5432c65cc38e367d"
            ]
        ]
    },
    {
        "id": "74308935059fb81b",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "008cdcc73fcf3213"
            ]
        ]
    },
    {
        "id": "7d9ad4c9341a309e",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "14ca67caaca0103e"
            ]
        ]
    },
    {
        "id": "5e2c28df8ea665e0",
        "type": "debug",
        "z": "0b7d0a8e9b80adfb",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "5aed19a2de52052b",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "Initialize W8 counting",
        "func": "\nglobal.set(\"W8_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "00ee9ec7dae6179e",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "5aed19a2de52052b"
            ]
        ]
    },
    {
        "id": "05acda76e9da31af",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "comes on for first time",
        "func": "if(global.get(\"W8_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W8_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "769775c28a0196ae"
            ]
        ]
    },
    {
        "id": "769775c28a0196ae",
        "type": "switch",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "d73a3b80946f1cbd"
            ]
        ]
    },
    {
        "id": "d73a3b80946f1cbd",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Post W8 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W8'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1010,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d2c04c31e95b476e",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Get current for W8",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W8' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "15498a5d7a769e9f"
            ]
        ]
    },
    {
        "id": "9aef389664f6310d",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "d2c04c31e95b476e"
            ]
        ]
    },
    {
        "id": "15498a5d7a769e9f",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "W8data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "9a3351cb09cf1e03"
            ]
        ]
    },
    {
        "id": "9a3351cb09cf1e03",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Post current as previous in W8",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W8'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6cafaa9ce18f0585",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w8 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3f8412303b69a9fa",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "6cafaa9ce18f0585"
            ]
        ]
    },
    {
        "id": "b3cfd0e29c0c79de",
        "type": "delay",
        "z": "0b7d0a8e9b80adfb",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 700,
        "wires": [
            [
                "8a52211b175fbc51"
            ]
        ]
    },
    {
        "id": "482c3da516ec0b6e",
        "type": "inject",
        "z": "0b7d0a8e9b80adfb",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "1442c500c9eb36d5"
            ]
        ]
    },
    {
        "id": "1442c500c9eb36d5",
        "type": "postgresql",
        "z": "0b7d0a8e9b80adfb",
        "name": "Get last for W8",
        "query": "SELECT * FROM W8\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "c00b5365f2938fd6"
            ]
        ]
    },
    {
        "id": "c00b5365f2938fd6",
        "type": "function",
        "z": "0b7d0a8e9b80adfb",
        "name": "inject last count to W8",
        "func": "\nglobal.set(\"W8\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "1c04560284f9931e"
            ]
        ]
    },
    {
        "id": "f2d6d23587530c94",
        "type": "link in",
        "z": "0b7d0a8e9b80adfb",
        "name": "link in 8",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "548840f430505e5f"
            ]
        ]
    },
    {
        "id": "f57a9bc99cd323da",
        "type": "link in",
        "z": "0b7d0a8e9b80adfb",
        "name": "link in 31",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 445,
        "y": 660,
        "wires": [
            [
                "9389c81343544c11"
            ]
        ]
    },
    {
        "id": "e159ebb53ebb26a5",
        "type": "mqtt in",
        "z": "8eb827552b6c5944",
        "name": "",
        "topic": "machines",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 160,
        "wires": [
            [
                "fa918c81cf381d31"
            ]
        ]
    },
    {
        "id": "fa918c81cf381d31",
        "type": "debug",
        "z": "8eb827552b6c5944",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "5bd4207208c6b8f2",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "a5385cc9baaa3d0e"
            ]
        ]
    },
    {
        "id": "a5385cc9baaa3d0e",
        "type": "postgresql",
        "z": "8eb827552b6c5944",
        "name": "Machine count Table",
        "query": "CREATE TABLE machinecounts (\n    sno Serial, \n\tmachine_name varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "fa918c81cf381d31"
            ]
        ]
    },
    {
        "id": "32b89b796cb21e8c",
        "type": "postgresql",
        "z": "8eb827552b6c5944",
        "name": "W34 store data",
        "query": "INSERT INTO machinecoounts(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d87f15b68a39d0",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Manual updating of W4 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "85496808184363f2",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a3c29c2577c6fec7",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W4 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6156c51d16b3c4c7",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a01716f8f92d7c",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "29cc3de415aeeea9",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W8 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "a9f91f8d88a01433"
            ]
        ]
    },
    {
        "id": "9979a0959db8667a",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W8 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "a9f91f8d88a01433"
            ]
        ]
    },
    {
        "id": "8f32f9e28542543b",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "W8 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "a9f91f8d88a01433"
            ]
        ]
    },
    {
        "id": "e5110d71b18080d5",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Manual inject/reset W8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "a9f91f8d88a01433"
            ]
        ]
    },
    {
        "id": "a61353d6117bbdaa",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "652ab09edf167de3",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Data Schedule 2 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7826393c7ddfeaef",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Data Schedule 1 For W8 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "17e4d69e66a8a013",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Data Schedule 4 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9d016bd049a49f82",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "Data Schedule 3 For W8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a9f91f8d88a01433",
        "type": "postgresql",
        "z": "8eb827552b6c5944",
        "name": "Post current eff as previous ",
        "query": "UPDATE machine_data\nSET\tprevious_efficiency=efficiency,\n    previous_count=current_count,\n    previous_machine_start_time=machine_start_time\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 560,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9e204af80eef5f14",
        "type": "delay",
        "z": "8eb827552b6c5944",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 340,
        "wires": [
            [
                "f155120bf87a2ff2"
            ]
        ]
    },
    {
        "id": "f155120bf87a2ff2",
        "type": "postgresql",
        "z": "8eb827552b6c5944",
        "name": "reset machine start time",
        "query": "UPDATE machine_data\nSET\tmachine_start_time=Null\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e63285d065adb307",
        "type": "link out",
        "z": "8eb827552b6c5944",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "08d69652b88b449e",
            "0e5dcf9a18517534",
            "19f8819155e7db65",
            "28dbfce96c5ed61e",
            "44e5c1be2159dd1f",
            "518bc5a3d78384b7",
            "55f780de7de2665f",
            "725655c311cffcbc",
            "886d0a7f1502f84c",
            "9075a12d2d7a6fd9",
            "949697c559f56384",
            "9aa9db68902874c4",
            "9be6e5318d9dc6a1",
            "9e1883dee7b4e693",
            "a36c6b050701f2b6",
            "b064c1a12f863c38",
            "b697031534776ad0",
            "b828d4ab60b9ed2f",
            "cc4654c96b298dc7",
            "d0ecbbfb07199376",
            "d80ff545fbaae26e",
            "f2d6d23587530c94",
            "f814511f7e8cfe65",
            "ef80dceb8bac88d5",
            "4f0c4dcd4f18dcc5",
            "409981821f9191c3",
            "5393d02224c6d50e",
            "fd5d866d4e9e1e93",
            "e3e84a8449c60463",
            "913e67bef20e0113",
            "f57a9bc99cd323da",
            "cfc43015b925966a",
            "80d36829b7852eed",
            "bb2282b256b431ef",
            "5b4e9720c1696f6c",
            "edcc69035cc49ef0",
            "b3ccbf18abd6ae5e",
            "bd05043cbb8b817a",
            "642aae292490aff5",
            "a5f84b03a23301d6",
            "cb32cfb7c8965266",
            "f040136726a86fc9",
            "58285c35dca3dd71",
            "eb7bdabb1d5dd006",
            "e8c5a2656e24e22c",
            "49cffc1855975d4b"
        ],
        "x": 1085,
        "y": 480,
        "wires": []
    },
    {
        "id": "57a7915bbd2009c8",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 460,
        "wires": [
            [
                "e63285d065adb307"
            ]
        ]
    },
    {
        "id": "14d1d9e3fcbd4afc",
        "type": "link out",
        "z": "8eb827552b6c5944",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "409981821f9191c3",
            "49cffc1855975d4b",
            "4f0c4dcd4f18dcc5",
            "5393d02224c6d50e",
            "58285c35dca3dd71",
            "5b4e9720c1696f6c",
            "642aae292490aff5",
            "80d36829b7852eed",
            "913e67bef20e0113",
            "a5f84b03a23301d6",
            "b3ccbf18abd6ae5e",
            "bb2282b256b431ef",
            "bd05043cbb8b817a",
            "cb32cfb7c8965266",
            "cfc43015b925966a",
            "e3e84a8449c60463",
            "e8c5a2656e24e22c",
            "eb7bdabb1d5dd006",
            "edcc69035cc49ef0",
            "ef80dceb8bac88d5",
            "f040136726a86fc9",
            "f57a9bc99cd323da",
            "fd5d866d4e9e1e93"
        ],
        "x": 1125,
        "y": 560,
        "wires": []
    },
    {
        "id": "23acbc83dafb98ad",
        "type": "inject",
        "z": "8eb827552b6c5944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 540,
        "wires": [
            [
                "14d1d9e3fcbd4afc"
            ]
        ]
    },
    {
        "id": "0860548e661b9ae8",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Manual updating of W4 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "4c3a2e7d8d5b5a44",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "Process W4 Information",
        "func": "var Mcount = parseInt(global.get(\"W4\")) - parseInt(global.get(\"W4_\"));\nvar npc = (global.get(\"W4_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW4\"));\nvar c_count = parseInt(global.get(\"c_W4\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW4\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W4\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "648496a0c1a05a29"
            ]
        ]
    },
    {
        "id": "b9f642573bcbf8bc",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "77e54a6fbcdb1327"
            ]
        ]
    },
    {
        "id": "c40b31a874ed5fe6",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Get Part No for W4",
        "query": "SELECT part_no FROM machine_operator where machine_no='W4' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "8d564ee1e1b68345"
            ]
        ]
    },
    {
        "id": "95bde4548447866a",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "manual Inject without reseting W4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "c40b31a874ed5fe6"
            ]
        ]
    },
    {
        "id": "8d564ee1e1b68345",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "W4 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "fb1d95768467d011"
            ]
        ]
    },
    {
        "id": "fb1d95768467d011",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Get W4 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "3f97119c059d95bd"
            ]
        ]
    },
    {
        "id": "3f97119c059d95bd",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "Set W4 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W4_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "63d029b8f754f575",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Post W4 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W4'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1070,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "31c52ad509af5ee3",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W4','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ac25883b311bf543",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "inject 20 count to W4",
        "func": "var count =parseInt(global.get(\"W4\"));\nglobal.set(\"W4\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "03cda959b69311bd"
            ]
        ]
    },
    {
        "id": "03cda959b69311bd",
        "type": "mqtt out",
        "z": "715d6bc3e5230871",
        "name": "",
        "topic": "W4",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "cd77d5e89454c901",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "manual count testing 1 for W4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "ac25883b311bf543"
            ]
        ]
    },
    {
        "id": "0f0aa7a660ad8ba4",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "inject 1 count to W4",
        "func": "var count =global.get(\"W4\");\nglobal.set(\"W4\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 880,
        "wires": [
            [
                "03cda959b69311bd"
            ]
        ]
    },
    {
        "id": "3c5ad0471022a816",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "manual count testing 2 for W4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 880,
        "wires": [
            [
                "0f0aa7a660ad8ba4"
            ]
        ]
    },
    {
        "id": "5c8635dff6bf5111",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "01688308d47b409f",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "fa0f1d1ef9885de9",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "27386fd3e2b187a7",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "cae4c3a6dfbc65e1",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "77e54a6fbcdb1327"
            ]
        ]
    },
    {
        "id": "2838c83bc007b380",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "77e54a6fbcdb1327"
            ]
        ]
    },
    {
        "id": "91fb52793d78dfe9",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Manual inject/reset W4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "77e54a6fbcdb1327"
            ]
        ]
    },
    {
        "id": "1fd4dec2d7fac4e4",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Create entry for W4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "31c52ad509af5ee3"
            ]
        ]
    },
    {
        "id": "77e54a6fbcdb1327",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "Initialize W4 counting",
        "func": "global.set(\"lW4\",0);\nglobal.set(\"c_W4\", 0);\nglobal.set(\"W4_\", global.get(\"W4\"));\nglobal.set(\"W4_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "c40b31a874ed5fe6"
            ]
        ]
    },
    {
        "id": "2dea1ce5c6b92f44",
        "type": "mqtt in",
        "z": "715d6bc3e5230871",
        "name": "",
        "topic": "W4",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "5045b62f186acbc1",
                "6f5b6347c6a17693",
                "8776fc8cd2dc7541",
                "0307b1278185de02",
                "ebc4a74f18fb1025"
            ]
        ]
    },
    {
        "id": "5045b62f186acbc1",
        "type": "ui_chart",
        "z": "715d6bc3e5230871",
        "name": "",
        "group": "2f9c1b549c33166e",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W4 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6f5b6347c6a17693",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "SET count for W4",
        "func": "global.set(\"W4\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8776fc8cd2dc7541",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W4' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "451c5386d7aa8e65",
                "2909226ce42d5597"
            ]
        ]
    },
    {
        "id": "451c5386d7aa8e65",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "GET count for W4",
        "func": "msg.payload=global.get(\"W4\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "6865f19b7230db52"
            ]
        ]
    },
    {
        "id": "429b5dade2906e55",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "bfdb69c5963935be"
            ]
        ]
    },
    {
        "id": "6865f19b7230db52",
        "type": "ui_text",
        "z": "715d6bc3e5230871",
        "group": "2f9c1b549c33166e",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W4 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "bfdb69c5963935be",
        "type": "ui_text",
        "z": "715d6bc3e5230871",
        "group": "2f9c1b549c33166e",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W4-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "4ad72a85a90c5d04",
        "type": "mqtt out",
        "z": "715d6bc3e5230871",
        "name": "",
        "topic": "W4/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "31960c7ad7378d98",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "reset W4",
        "func": "global.set(\"W4\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "56b25a5a56ca8f38"
            ]
        ]
    },
    {
        "id": "56b25a5a56ca8f38",
        "type": "mqtt out",
        "z": "715d6bc3e5230871",
        "name": "",
        "topic": "W4",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "472820abc27c9cbf",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w4 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "869e0f62e16cea2d",
                "572f6e9e9b9b86f3"
            ]
        ]
    },
    {
        "id": "2a0a660bda2e50bb",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "W4 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "472820abc27c9cbf"
            ]
        ]
    },
    {
        "id": "869e0f62e16cea2d",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "W4 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "5fc555afaa70d6c6"
            ]
        ]
    },
    {
        "id": "572f6e9e9b9b86f3",
        "type": "ui_table",
        "z": "715d6bc3e5230871",
        "group": "2f9c1b549c33166e",
        "name": "W4 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5fc555afaa70d6c6",
        "type": "ui_chart",
        "z": "715d6bc3e5230871",
        "name": "",
        "group": "2f9c1b549c33166e",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W4 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "27adb9ce9ccdd679",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Data Schedule 2 For W4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "9ca72d4d66919387"
            ]
        ]
    },
    {
        "id": "99732a34324d2e41",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Data Schedule 1 For W4 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "9ca72d4d66919387"
            ]
        ]
    },
    {
        "id": "9ca72d4d66919387",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "W4 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W4\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "96c73a16c12c4aaa"
            ]
        ]
    },
    {
        "id": "b37f746a77a1528d",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Data Schedule 4 For W4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "9ca72d4d66919387"
            ]
        ]
    },
    {
        "id": "c86c86e608f84803",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Data Schedule 3 For W4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "9ca72d4d66919387"
            ]
        ]
    },
    {
        "id": "96c73a16c12c4aaa",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 store data",
        "query": "INSERT INTO W4(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "3117879084c2396b",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Create W4 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "26ae07c7b5458e99"
            ]
        ]
    },
    {
        "id": "26ae07c7b5458e99",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 Table",
        "query": "CREATE TABLE W4 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2909226ce42d5597",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "W4 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "429b5dade2906e55"
            ]
        ]
    },
    {
        "id": "784ada971f432759",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "delete W4 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "56d24a7f994d445a"
            ]
        ]
    },
    {
        "id": "56d24a7f994d445a",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 Table delete",
        "query": "drop TABLE W4 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "0307b1278185de02",
        "type": "trigger",
        "z": "715d6bc3e5230871",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "c9f3924c9766c3ad"
            ],
            [
                "df631485285df2ef"
            ]
        ]
    },
    {
        "id": "8bd84d443523739e",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "31960c7ad7378d98"
            ]
        ]
    },
    {
        "id": "c9f3924c9766c3ad",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Post W4 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W4'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "df631485285df2ef",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Post W4 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W4'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "64be6391551a9f1d",
        "type": "ui_text",
        "z": "715d6bc3e5230871",
        "group": "2f9c1b549c33166e",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W4 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "0133ead9fa9c1679",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "W4 status check",
        "query": "SELECT status FROM machine_data where machine_no='W4';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "64be6391551a9f1d"
            ]
        ]
    },
    {
        "id": "0d8eb390cfad0ba7",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "0133ead9fa9c1679"
            ]
        ]
    },
    {
        "id": "8619658666126caa",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "c40b31a874ed5fe6"
            ]
        ]
    },
    {
        "id": "af993e780ed3dfd1",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "Initialize W4 counting",
        "func": "\nglobal.set(\"W4_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a2a81ea9c7912cb2",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "af993e780ed3dfd1"
            ]
        ]
    },
    {
        "id": "ebc4a74f18fb1025",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "comes on for first time",
        "func": "if(global.get(\"W4_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W4_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "46155239ef96812b"
            ]
        ]
    },
    {
        "id": "46155239ef96812b",
        "type": "switch",
        "z": "715d6bc3e5230871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "baf2c18a0deb137a"
            ]
        ]
    },
    {
        "id": "baf2c18a0deb137a",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Post W4 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W4'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1070,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "dada6d9e7735a3c0",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Get current for W4",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W4' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "9211c0775fc79916"
            ]
        ]
    },
    {
        "id": "3149b5975c4bc5f6",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "dada6d9e7735a3c0"
            ]
        ]
    },
    {
        "id": "9211c0775fc79916",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "W4 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 500,
        "wires": [
            [
                "18471f09a12a0a1a"
            ]
        ]
    },
    {
        "id": "18471f09a12a0a1a",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Post current as previous in W4",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W4'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8e3caf3513169faf",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w4 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b462c7bcd4282aa7",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "8e3caf3513169faf"
            ]
        ]
    },
    {
        "id": "648496a0c1a05a29",
        "type": "delay",
        "z": "715d6bc3e5230871",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 680,
        "wires": [
            [
                "63d029b8f754f575"
            ]
        ]
    },
    {
        "id": "c4493c6fd3257573",
        "type": "inject",
        "z": "715d6bc3e5230871",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "730205109be22168"
            ]
        ]
    },
    {
        "id": "730205109be22168",
        "type": "postgresql",
        "z": "715d6bc3e5230871",
        "name": "Get last for W4",
        "query": "SELECT * FROM W4\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "9638d022675794da"
            ]
        ]
    },
    {
        "id": "9638d022675794da",
        "type": "function",
        "z": "715d6bc3e5230871",
        "name": "inject last count to W4",
        "func": "\nglobal.set(\"W4\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "03cda959b69311bd"
            ]
        ]
    },
    {
        "id": "9be6e5318d9dc6a1",
        "type": "link in",
        "z": "715d6bc3e5230871",
        "name": "link in 9",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "77e54a6fbcdb1327"
            ]
        ]
    },
    {
        "id": "cfc43015b925966a",
        "type": "link in",
        "z": "715d6bc3e5230871",
        "name": "link in 32",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 365,
        "y": 660,
        "wires": [
            [
                "4c3a2e7d8d5b5a44"
            ]
        ]
    },
    {
        "id": "7d53387cd74e59c3",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Manual updating of W5 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "0ec22135f96411d5",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "Process W5 Information",
        "func": "var Mcount = parseInt(global.get(\"W5\")) - parseInt(global.get(\"W5_\"));\nvar npc = (global.get(\"W5_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW5\"));\nvar c_count = parseInt(global.get(\"c_W5\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW5\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W5\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "efa850eda0560869"
            ]
        ]
    },
    {
        "id": "af62dd088d53b82b",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "c42de108c0ab8beb"
            ]
        ]
    },
    {
        "id": "8a239834af596c94",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Get Part No for W5",
        "query": "SELECT part_no FROM machine_operator where machine_no='W5' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "98329e5a4440fcce"
            ]
        ]
    },
    {
        "id": "4427f6acdf4d3fbe",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "manual Inject without reseting W5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "8a239834af596c94"
            ]
        ]
    },
    {
        "id": "98329e5a4440fcce",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "W5 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "210fd533d1bdeea8"
            ]
        ]
    },
    {
        "id": "210fd533d1bdeea8",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Get W5 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "b4f3871684a53022"
            ]
        ]
    },
    {
        "id": "b4f3871684a53022",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "Set W5 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W5_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d3bc0d45eb2d6e92",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Post W5 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W5'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1090,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "29395b33c7dce7d1",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W5','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "04580b6d75102f33",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "inject 20 count to W5",
        "func": "var count =parseInt(global.get(\"W5\"));\nglobal.set(\"W5\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "74b1123e23e6285c"
            ]
        ]
    },
    {
        "id": "74b1123e23e6285c",
        "type": "mqtt out",
        "z": "948382ebdb78ab03",
        "name": "",
        "topic": "W5",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "52c63ed4aa30e747",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "manual count testing 1 for W5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "04580b6d75102f33"
            ]
        ]
    },
    {
        "id": "4dfbe244134f966d",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "inject 1 count to W5",
        "func": "var count =global.get(\"W5\");\nglobal.set(\"W5\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 880,
        "wires": [
            [
                "74b1123e23e6285c"
            ]
        ]
    },
    {
        "id": "fe964617f228faeb",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "manual count testing 2 for W5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 880,
        "wires": [
            [
                "4dfbe244134f966d"
            ]
        ]
    },
    {
        "id": "450fe0f09ad00cda",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "2bd3074d8e8941a9",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "f3f6c33660c65242",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "1b12cbc1cd3b8d88",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "40a654ee63e4d387",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "c42de108c0ab8beb"
            ]
        ]
    },
    {
        "id": "45379df941787f59",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "c42de108c0ab8beb"
            ]
        ]
    },
    {
        "id": "61d957be635b1035",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Manual inject/reset W5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "c42de108c0ab8beb"
            ]
        ]
    },
    {
        "id": "7443214c0db4cada",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Create entry for W5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "29395b33c7dce7d1"
            ]
        ]
    },
    {
        "id": "c42de108c0ab8beb",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "Initialize W5 counting",
        "func": "global.set(\"lW5\",0);\nglobal.set(\"c_W5\", 0);\nglobal.set(\"W5_\", global.get(\"W5\"));\nglobal.set(\"W5_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "8a239834af596c94"
            ]
        ]
    },
    {
        "id": "c11211b5029c51ca",
        "type": "mqtt in",
        "z": "948382ebdb78ab03",
        "name": "",
        "topic": "W5",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "bc852be85fb773b8",
                "a6bec1201f992405",
                "ef1681ce9337eb4f",
                "d111deef3347c63e",
                "82f90cd725a7f79d"
            ]
        ]
    },
    {
        "id": "bc852be85fb773b8",
        "type": "ui_chart",
        "z": "948382ebdb78ab03",
        "name": "",
        "group": "1c937069dfad9f8f",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W5 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a6bec1201f992405",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "SET count for W5",
        "func": "global.set(\"W5\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ef1681ce9337eb4f",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W5' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "6ec65ec50d9ff224",
                "87e278f74ae6e6ab"
            ]
        ]
    },
    {
        "id": "6ec65ec50d9ff224",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "GET count for W5",
        "func": "msg.payload=global.get(\"W5\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "d05cf1583a0598f2"
            ]
        ]
    },
    {
        "id": "52c56511ad20b41a",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "b4e95c0694dce7c7"
            ]
        ]
    },
    {
        "id": "d05cf1583a0598f2",
        "type": "ui_text",
        "z": "948382ebdb78ab03",
        "group": "1c937069dfad9f8f",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W5 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "b4e95c0694dce7c7",
        "type": "ui_text",
        "z": "948382ebdb78ab03",
        "group": "1c937069dfad9f8f",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W5-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "4b4a977fd8d22421",
        "type": "mqtt out",
        "z": "948382ebdb78ab03",
        "name": "",
        "topic": "W5/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "8d01ac8af7fa5de9",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "reset W5",
        "func": "global.set(\"W5\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "57a83260921f6b8f"
            ]
        ]
    },
    {
        "id": "57a83260921f6b8f",
        "type": "mqtt out",
        "z": "948382ebdb78ab03",
        "name": "",
        "topic": "W5",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "de7d1c370985323b",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w5 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "032b4c52c9b29fcb",
                "0713cfddde5e91b9"
            ]
        ]
    },
    {
        "id": "abd901b5d40ba7f1",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "W5 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "de7d1c370985323b"
            ]
        ]
    },
    {
        "id": "032b4c52c9b29fcb",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "W5 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "6281b357f3dac166"
            ]
        ]
    },
    {
        "id": "0713cfddde5e91b9",
        "type": "ui_table",
        "z": "948382ebdb78ab03",
        "group": "1c937069dfad9f8f",
        "name": "W5 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6281b357f3dac166",
        "type": "ui_chart",
        "z": "948382ebdb78ab03",
        "name": "",
        "group": "1c937069dfad9f8f",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W5 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "77d3bbe08ce1c57f",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Data Schedule 2 For W5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "15c5e4362beef7a9"
            ]
        ]
    },
    {
        "id": "d1bd0da88846f245",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Data Schedule 1 For W5 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "15c5e4362beef7a9"
            ]
        ]
    },
    {
        "id": "15c5e4362beef7a9",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "W5 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W5\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "8e31b7faec16f278"
            ]
        ]
    },
    {
        "id": "16c5756edd7a41c1",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Data Schedule 4 For W5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "15c5e4362beef7a9"
            ]
        ]
    },
    {
        "id": "8620e6e1821bbaa2",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Data Schedule 3 For W5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "15c5e4362beef7a9"
            ]
        ]
    },
    {
        "id": "8e31b7faec16f278",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 store data",
        "query": "INSERT INTO W5(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0b12b64f0f3bc2",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Create W5 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "bc815baaa6a2d953"
            ]
        ]
    },
    {
        "id": "bc815baaa6a2d953",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 Table",
        "query": "CREATE TABLE W5 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "87e278f74ae6e6ab",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "W5 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "52c56511ad20b41a"
            ]
        ]
    },
    {
        "id": "93a8fea3e813a00c",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "delete W5 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "5a7321783e55f6d6"
            ]
        ]
    },
    {
        "id": "5a7321783e55f6d6",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 Table delete",
        "query": "drop TABLE W5 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "d111deef3347c63e",
        "type": "trigger",
        "z": "948382ebdb78ab03",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "c79b5018fa324e16"
            ],
            [
                "aedb21d833ebe4fe"
            ]
        ]
    },
    {
        "id": "96121d052f9af202",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "8d01ac8af7fa5de9"
            ]
        ]
    },
    {
        "id": "c79b5018fa324e16",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Post W5 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W5'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "aedb21d833ebe4fe",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Post W5 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W5'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "73bd02a481d661eb",
        "type": "ui_text",
        "z": "948382ebdb78ab03",
        "group": "1c937069dfad9f8f",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W5 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "245b0b0a409bf425",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "W5 status check",
        "query": "SELECT status FROM machine_data where machine_no='W5';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "73bd02a481d661eb"
            ]
        ]
    },
    {
        "id": "5e1dfa07e281f47a",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "245b0b0a409bf425"
            ]
        ]
    },
    {
        "id": "3bd61c032e7a395f",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "8a239834af596c94"
            ]
        ]
    },
    {
        "id": "b63c92b4696d99a3",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "Initialize W5 counting",
        "func": "\nglobal.set(\"W5_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e07e3e7b814c1cf4",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "b63c92b4696d99a3"
            ]
        ]
    },
    {
        "id": "82f90cd725a7f79d",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "comes on for first time",
        "func": "if(global.get(\"W5_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W5_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "2d2d5d1bfe401f77"
            ]
        ]
    },
    {
        "id": "2d2d5d1bfe401f77",
        "type": "switch",
        "z": "948382ebdb78ab03",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "bbbe58903258a42e"
            ]
        ]
    },
    {
        "id": "bbbe58903258a42e",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Post W5 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W5'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1070,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4d6d757a97505c53",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Get current for W5",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W5' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "012eb7b0471d4fd8"
            ]
        ]
    },
    {
        "id": "ab9f2281de9cde02",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "4d6d757a97505c53"
            ]
        ]
    },
    {
        "id": "012eb7b0471d4fd8",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "W5 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 500,
        "wires": [
            [
                "e49727f8e9a5e64f"
            ]
        ]
    },
    {
        "id": "e49727f8e9a5e64f",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Post current as previous in W5",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W5'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8c0a4ad17b9eecc5",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w5 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bbbabbc61b9fc92f",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "8c0a4ad17b9eecc5"
            ]
        ]
    },
    {
        "id": "efa850eda0560869",
        "type": "delay",
        "z": "948382ebdb78ab03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "d3bc0d45eb2d6e92"
            ]
        ]
    },
    {
        "id": "aea7dc341bca41ab",
        "type": "inject",
        "z": "948382ebdb78ab03",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "2832924e4dde116e"
            ]
        ]
    },
    {
        "id": "2832924e4dde116e",
        "type": "postgresql",
        "z": "948382ebdb78ab03",
        "name": "Get last for W5",
        "query": "SELECT * FROM W5\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "5bd84b55610fc487"
            ]
        ]
    },
    {
        "id": "5bd84b55610fc487",
        "type": "function",
        "z": "948382ebdb78ab03",
        "name": "inject last count to W5",
        "func": "\nglobal.set(\"W5\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "74b1123e23e6285c"
            ]
        ]
    },
    {
        "id": "9075a12d2d7a6fd9",
        "type": "link in",
        "z": "948382ebdb78ab03",
        "name": "link in 10",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "c42de108c0ab8beb"
            ]
        ]
    },
    {
        "id": "80d36829b7852eed",
        "type": "link in",
        "z": "948382ebdb78ab03",
        "name": "link in 33",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 365,
        "y": 660,
        "wires": [
            [
                "0ec22135f96411d5"
            ]
        ]
    },
    {
        "id": "66084d09d9ae8e17",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Manual updating of W15 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "274e1833dffa9881",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "Process W15 Information",
        "func": "var Mcount = parseInt(global.get(\"W15\")) - parseInt(global.get(\"W15_\"));\nvar npc = (global.get(\"W15_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW15\"));\nvar c_count = parseInt(global.get(\"c_W15\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW15\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W15\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "c1f1e9f16d1a1794"
            ]
        ]
    },
    {
        "id": "0220b6a687ab1399",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "f5c9c1b62a1df77c"
            ]
        ]
    },
    {
        "id": "bdd275db5c225e36",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Get Part No for W15",
        "query": "SELECT part_no FROM machine_operator where machine_no='W15' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "76561b730a0e39ee"
            ]
        ]
    },
    {
        "id": "4e7b2ec7e241e6ea",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "manual Inject without reseting W15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "bdd275db5c225e36"
            ]
        ]
    },
    {
        "id": "76561b730a0e39ee",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "W15 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "8545f981e951ea63"
            ]
        ]
    },
    {
        "id": "8545f981e951ea63",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Get W15 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "b7405b094ec7422f"
            ]
        ]
    },
    {
        "id": "b7405b094ec7422f",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "Set W15 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W15_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1d0d72c620ab145b",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Post W15 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W15'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "60c12b4447b5d8d8",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W15','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e323bad61bc3c41e",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "inject 20 count to W15",
        "func": "var count =parseInt(global.get(\"W15\"));\nglobal.set(\"W15\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "0c7d5259e8d70a4a"
            ]
        ]
    },
    {
        "id": "0c7d5259e8d70a4a",
        "type": "mqtt out",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "topic": "W15",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 850,
        "y": 840,
        "wires": []
    },
    {
        "id": "a00916bc3818ca46",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "manual count testing 1 for W15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "e323bad61bc3c41e"
            ]
        ]
    },
    {
        "id": "7866a88e74c57b1e",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "inject 1 count to W15",
        "func": "var count =global.get(\"W15\");\nglobal.set(\"W15\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 880,
        "wires": [
            [
                "0c7d5259e8d70a4a"
            ]
        ]
    },
    {
        "id": "bebeda495ff19e97",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "manual count testing 2 for W15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "7866a88e74c57b1e"
            ]
        ]
    },
    {
        "id": "7306c00b8677453e",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "494f27b53a17baae",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "7ea330a318095a81",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "05f6c872074fe1e1",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "2507b679d542bb8b",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "f5c9c1b62a1df77c"
            ]
        ]
    },
    {
        "id": "e7835b61741ab685",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "f5c9c1b62a1df77c"
            ]
        ]
    },
    {
        "id": "b8ac191ae2b10f32",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Manual inject/reset W15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "f5c9c1b62a1df77c"
            ]
        ]
    },
    {
        "id": "d739e7faf18bf089",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Create entry for W15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "60c12b4447b5d8d8"
            ]
        ]
    },
    {
        "id": "f5c9c1b62a1df77c",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "Initialize W15 counting",
        "func": "global.set(\"lW15\",0);\nglobal.set(\"c_W15\", 0);\nglobal.set(\"W15_\", global.get(\"W15\"));\nglobal.set(\"W15_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "bdd275db5c225e36"
            ]
        ]
    },
    {
        "id": "562aa30bb1b40fdd",
        "type": "mqtt in",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "topic": "W15",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b0c2da5777529b8b",
                "c0cd26f12f75fda3",
                "f0f5bfce9a6f940d",
                "57118bad2c187d03",
                "43d43fbfb0c88ada"
            ]
        ]
    },
    {
        "id": "b0c2da5777529b8b",
        "type": "ui_chart",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "group": "7892582b69cb831e",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W15 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c0cd26f12f75fda3",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "SET count for W15",
        "func": "global.set(\"W15\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f5bfce9a6f940d",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W15' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "2ed3281eb4a7818a",
                "16878f70beddc9c8"
            ]
        ]
    },
    {
        "id": "2ed3281eb4a7818a",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "GET count for W15",
        "func": "msg.payload=global.get(\"W15\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "0672e95537ed3111"
            ]
        ]
    },
    {
        "id": "236ad4851e6f94f1",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "f914027fe3da8d7e"
            ]
        ]
    },
    {
        "id": "0672e95537ed3111",
        "type": "ui_text",
        "z": "c1424d3bdc57c01c",
        "group": "7892582b69cb831e",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W15 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "f914027fe3da8d7e",
        "type": "ui_text",
        "z": "c1424d3bdc57c01c",
        "group": "7892582b69cb831e",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W15-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "bbfdedac80d5bc18",
        "type": "mqtt out",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "topic": "W15/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "99cb4cc6230b1e2a",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "reset W15",
        "func": "global.set(\"W15\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "89dc9f8089f00520"
            ]
        ]
    },
    {
        "id": "89dc9f8089f00520",
        "type": "mqtt out",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "topic": "W15",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0bc37ef9a7efa0cf",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w15 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "b7e721e4d4f553b7",
                "8cef24eacd0423cb"
            ]
        ]
    },
    {
        "id": "f1092b279440bf76",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "0bc37ef9a7efa0cf"
            ]
        ]
    },
    {
        "id": "b7e721e4d4f553b7",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "21ad078fbe2769fc"
            ]
        ]
    },
    {
        "id": "8cef24eacd0423cb",
        "type": "ui_table",
        "z": "c1424d3bdc57c01c",
        "group": "7892582b69cb831e",
        "name": "W15 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "21ad078fbe2769fc",
        "type": "ui_chart",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "group": "7892582b69cb831e",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W15 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "2152d37ca8c2ad85",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Data Schedule 2 For W15",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "38a2b1b92b5790d7"
            ]
        ]
    },
    {
        "id": "7d0f1ad3ecf553aa",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Data Schedule 1 For W15 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "38a2b1b92b5790d7"
            ]
        ]
    },
    {
        "id": "38a2b1b92b5790d7",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "W15 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W15\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "d177cc109beada0d"
            ]
        ]
    },
    {
        "id": "64359f62689c8919",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Data Schedule 4 For W15",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "38a2b1b92b5790d7"
            ]
        ]
    },
    {
        "id": "8063a14faa963a5e",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Data Schedule 3 For W15",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "38a2b1b92b5790d7"
            ]
        ]
    },
    {
        "id": "d177cc109beada0d",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 store data",
        "query": "INSERT INTO W15(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "97992788b18ea95c",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Create W15 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "7ca185b345ec6769"
            ]
        ]
    },
    {
        "id": "7ca185b345ec6769",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Table",
        "query": "CREATE TABLE W15 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "16878f70beddc9c8",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "W15 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "236ad4851e6f94f1"
            ]
        ]
    },
    {
        "id": "f9dc3589875e7efd",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "delete W15 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "a1d9dfd9f4bce0b3"
            ]
        ]
    },
    {
        "id": "a1d9dfd9f4bce0b3",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 Table delete",
        "query": "drop TABLE W15 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "57118bad2c187d03",
        "type": "trigger",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "9ebf6000bb1f420d"
            ],
            [
                "fced85b932cd06f4"
            ]
        ]
    },
    {
        "id": "96e497a3d3f7aa0f",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "99cb4cc6230b1e2a"
            ]
        ]
    },
    {
        "id": "9ebf6000bb1f420d",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Post W15 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W15'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "fced85b932cd06f4",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Post W15 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W15'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8b1eb587f345b55c",
        "type": "ui_text",
        "z": "c1424d3bdc57c01c",
        "group": "7892582b69cb831e",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W15 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "508909a72da8952c",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "W15 status check",
        "query": "SELECT status FROM machine_data where machine_no='W15';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "8b1eb587f345b55c"
            ]
        ]
    },
    {
        "id": "238aeb40126edd26",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "508909a72da8952c"
            ]
        ]
    },
    {
        "id": "389b1957b5a3faf6",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "bdd275db5c225e36"
            ]
        ]
    },
    {
        "id": "4bcd57445bed8756",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "Initialize W15 counting",
        "func": "\nglobal.set(\"W15_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7e2dce5cfc43c0ce",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "4bcd57445bed8756"
            ]
        ]
    },
    {
        "id": "43d43fbfb0c88ada",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "comes on for first time",
        "func": "if(global.get(\"W15_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W15_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "48f20d8919dd224b"
            ]
        ]
    },
    {
        "id": "48f20d8919dd224b",
        "type": "switch",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "22c405fe77eae629"
            ]
        ]
    },
    {
        "id": "22c405fe77eae629",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Post W15 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W15'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3334bcb249e3b4be",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Get current for W15",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W15' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "2f9a54b512c729f5"
            ]
        ]
    },
    {
        "id": "cb795d7c406a229a",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "3334bcb249e3b4be"
            ]
        ]
    },
    {
        "id": "2f9a54b512c729f5",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "W15 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "fd5341d6baa8cecf"
            ]
        ]
    },
    {
        "id": "fd5341d6baa8cecf",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Post current as previous in W15",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W15'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "124d0c477412f907",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w15 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1db84a5238d412b0",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "124d0c477412f907"
            ]
        ]
    },
    {
        "id": "c1f1e9f16d1a1794",
        "type": "delay",
        "z": "c1424d3bdc57c01c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "1d0d72c620ab145b"
            ]
        ]
    },
    {
        "id": "abbc664bbdd7df69",
        "type": "inject",
        "z": "c1424d3bdc57c01c",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "dcce5b71bb1b4738"
            ]
        ]
    },
    {
        "id": "dcce5b71bb1b4738",
        "type": "postgresql",
        "z": "c1424d3bdc57c01c",
        "name": "Get last for W15",
        "query": "SELECT * FROM W15\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 920,
        "wires": [
            [
                "c6b8cb644e36b8a4"
            ]
        ]
    },
    {
        "id": "c6b8cb644e36b8a4",
        "type": "function",
        "z": "c1424d3bdc57c01c",
        "name": "inject last count to W15",
        "func": "\nglobal.set(\"W15\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 920,
        "wires": [
            [
                "0c7d5259e8d70a4a"
            ]
        ]
    },
    {
        "id": "a36c6b050701f2b6",
        "type": "link in",
        "z": "c1424d3bdc57c01c",
        "name": "link in 11",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "f5c9c1b62a1df77c"
            ]
        ]
    },
    {
        "id": "bb2282b256b431ef",
        "type": "link in",
        "z": "c1424d3bdc57c01c",
        "name": "link in 34",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 395,
        "y": 660,
        "wires": [
            [
                "274e1833dffa9881"
            ]
        ]
    },
    {
        "id": "c2f58becb76d4beb",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Manual updating of W17 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "aa9dbf4178e6b513",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "Process W17 Information",
        "func": "var Mcount = parseInt(global.get(\"W17\")) - parseInt(global.get(\"W17_\"));\nvar npc = (global.get(\"W17_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW17\"));\nvar c_count = parseInt(global.get(\"c_W17\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW17\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W17\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "22f08bbcaea844a4"
            ]
        ]
    },
    {
        "id": "19a5fc0b987b7b20",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "9fa6182a8fc5872d"
            ]
        ]
    },
    {
        "id": "ce64ba01db79ef01",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Get Part No for W17",
        "query": "SELECT part_no FROM machine_operator where machine_no='W17' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "8abdbd2109b6539e"
            ]
        ]
    },
    {
        "id": "0ba58b7f48290bfb",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "manual Inject without reseting W17",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "ce64ba01db79ef01"
            ]
        ]
    },
    {
        "id": "8abdbd2109b6539e",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "W17 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "e80321415d2e3a2e"
            ]
        ]
    },
    {
        "id": "e80321415d2e3a2e",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Get W17 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "5f54c8c4d43af36f"
            ]
        ]
    },
    {
        "id": "5f54c8c4d43af36f",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "Set W17 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W17_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "f17eebde9256775c",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Post W17 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W17'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1060,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "b8a32abe1161b3b1",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W17','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c15161f6b8cdd35e",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "inject 20 count to W17",
        "func": "var count =parseInt(global.get(\"W17\"));\nglobal.set(\"W17\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "c8a70d92e2e9376c"
            ]
        ]
    },
    {
        "id": "c8a70d92e2e9376c",
        "type": "mqtt out",
        "z": "e56d2349d41599d9",
        "name": "",
        "topic": "W17",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 770,
        "y": 860,
        "wires": []
    },
    {
        "id": "79a6cad028511ecc",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "manual count testing 1 for W17",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "c15161f6b8cdd35e"
            ]
        ]
    },
    {
        "id": "2cccd83ddfca5e3d",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "inject 1 count to W17",
        "func": "var count =global.get(\"W17\");\nglobal.set(\"W17\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "c8a70d92e2e9376c"
            ]
        ]
    },
    {
        "id": "37b7e28cafaab174",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "manual count testing 2 for W17",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "2cccd83ddfca5e3d"
            ]
        ]
    },
    {
        "id": "22e0a4d7407397c8",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "6ebaa92a95430ba9",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "0a3b744bd4dd3514",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "3f203ec134e69a12",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "fe605f8f4e7a4af0",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "9fa6182a8fc5872d"
            ]
        ]
    },
    {
        "id": "6a8fb4bcde540c38",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "9fa6182a8fc5872d"
            ]
        ]
    },
    {
        "id": "c9078007abf82a5e",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Manual inject/reset W17",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "9fa6182a8fc5872d"
            ]
        ]
    },
    {
        "id": "4b1161037fbceb6a",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Create entry for W17",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "b8a32abe1161b3b1"
            ]
        ]
    },
    {
        "id": "9fa6182a8fc5872d",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "Initialize W17 counting",
        "func": "global.set(\"lW17\",0);\nglobal.set(\"c_W17\", 0);\nglobal.set(\"W17_\", global.get(\"W17\"));\nglobal.set(\"W17_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "ce64ba01db79ef01"
            ]
        ]
    },
    {
        "id": "f66e843212d7a2fa",
        "type": "mqtt in",
        "z": "e56d2349d41599d9",
        "name": "",
        "topic": "W17",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "96fbdbf3ed11a7e6",
                "1a17b1300c1f9de5",
                "de93879253f69fa6",
                "a9234f1d54a9af5d",
                "8afa3ca71e776989"
            ]
        ]
    },
    {
        "id": "96fbdbf3ed11a7e6",
        "type": "ui_chart",
        "z": "e56d2349d41599d9",
        "name": "",
        "group": "9abfbc18c8215dba",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W17 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1a17b1300c1f9de5",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "SET count for W17",
        "func": "global.set(\"W17\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "de93879253f69fa6",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W17' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "aa0ce32e8573a5c3",
                "cf260517854707d0"
            ]
        ]
    },
    {
        "id": "aa0ce32e8573a5c3",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "GET count for W17",
        "func": "msg.payload=global.get(\"W17\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "c01fb9d53152d895"
            ]
        ]
    },
    {
        "id": "fdc7a40b9ba224f8",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "2c2883e598885057"
            ]
        ]
    },
    {
        "id": "c01fb9d53152d895",
        "type": "ui_text",
        "z": "e56d2349d41599d9",
        "group": "9abfbc18c8215dba",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W17 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "2c2883e598885057",
        "type": "ui_text",
        "z": "e56d2349d41599d9",
        "group": "9abfbc18c8215dba",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W17-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "7857cdfb230eee0d",
        "type": "mqtt out",
        "z": "e56d2349d41599d9",
        "name": "",
        "topic": "W17/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "12f57caf0a0f4aed",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "reset W17",
        "func": "global.set(\"W17\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "5451b002daef2952"
            ]
        ]
    },
    {
        "id": "5451b002daef2952",
        "type": "mqtt out",
        "z": "e56d2349d41599d9",
        "name": "",
        "topic": "W17",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "bb980c56f4bc7b9d",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w17 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "7eb4a6392ab833bc",
                "d1c7abd5b10b918a"
            ]
        ]
    },
    {
        "id": "8b99b1740881cd73",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "W17 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "bb980c56f4bc7b9d"
            ]
        ]
    },
    {
        "id": "7eb4a6392ab833bc",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "W17 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "166dc47d7642ad23"
            ]
        ]
    },
    {
        "id": "d1c7abd5b10b918a",
        "type": "ui_table",
        "z": "e56d2349d41599d9",
        "group": "9abfbc18c8215dba",
        "name": "W17 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "166dc47d7642ad23",
        "type": "ui_chart",
        "z": "e56d2349d41599d9",
        "name": "",
        "group": "9abfbc18c8215dba",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W17 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "62cd59dce0c6fd00",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Data Schedule 2 For W17",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "e0498d5ba8013b72"
            ]
        ]
    },
    {
        "id": "15a13cb5651bdcd8",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Data Schedule 1 For W17 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "e0498d5ba8013b72"
            ]
        ]
    },
    {
        "id": "e0498d5ba8013b72",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "W17 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W17\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "1b4ae67141470d06"
            ]
        ]
    },
    {
        "id": "610772223778b4ee",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Data Schedule 4 For W17",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "e0498d5ba8013b72"
            ]
        ]
    },
    {
        "id": "10a4a27d09c2917b",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Data Schedule 3 For W17",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "e0498d5ba8013b72"
            ]
        ]
    },
    {
        "id": "1b4ae67141470d06",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 store data",
        "query": "INSERT INTO W17(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "f09f7dd4431dfa3a",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Create W17 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "933a43f3613abbeb"
            ]
        ]
    },
    {
        "id": "933a43f3613abbeb",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 Table",
        "query": "CREATE TABLE W17 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "cf260517854707d0",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "W17 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "fdc7a40b9ba224f8"
            ]
        ]
    },
    {
        "id": "edbcaa893f7dabe3",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "delete W17 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "063d9314f55acd6c"
            ]
        ]
    },
    {
        "id": "063d9314f55acd6c",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 Table delete",
        "query": "drop TABLE W17 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "a9234f1d54a9af5d",
        "type": "trigger",
        "z": "e56d2349d41599d9",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "a837cc4902f8a597"
            ],
            [
                "b2e7774326da1b9f"
            ]
        ]
    },
    {
        "id": "e4b5ab085ae2aebd",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "12f57caf0a0f4aed"
            ]
        ]
    },
    {
        "id": "a837cc4902f8a597",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Post W17 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W17'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b2e7774326da1b9f",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Post W17 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W17'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "23e1f584ad473831",
        "type": "ui_text",
        "z": "e56d2349d41599d9",
        "group": "9abfbc18c8215dba",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W17 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "87ddd249f8d8bf15",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "W17 status check",
        "query": "SELECT status FROM machine_data where machine_no='W17';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "23e1f584ad473831"
            ]
        ]
    },
    {
        "id": "2660806df4cb8bdf",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "87ddd249f8d8bf15"
            ]
        ]
    },
    {
        "id": "7651a6d6fa0e2cbd",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "ce64ba01db79ef01"
            ]
        ]
    },
    {
        "id": "f779701f630370cd",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "Initialize W17 counting",
        "func": "\nglobal.set(\"W17_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "46c7d60f62370c62",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "f779701f630370cd"
            ]
        ]
    },
    {
        "id": "8afa3ca71e776989",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "comes on for first time",
        "func": "if(global.get(\"W17_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W17_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "894d52ed77001344"
            ]
        ]
    },
    {
        "id": "894d52ed77001344",
        "type": "switch",
        "z": "e56d2349d41599d9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "bb92339ba112ffa5"
            ]
        ]
    },
    {
        "id": "bb92339ba112ffa5",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Post W17 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W17'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e447d5372adc04ae",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Get current for W17",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W17' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "f2538831c7c30fe9"
            ]
        ]
    },
    {
        "id": "043b69d290470e9f",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "e447d5372adc04ae"
            ]
        ]
    },
    {
        "id": "f2538831c7c30fe9",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "W17 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "d7fd3053488e1fb9"
            ]
        ]
    },
    {
        "id": "d7fd3053488e1fb9",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Post current as previous in W17",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W17'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "9c18e539e945f978",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w17 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9001a058a479b723",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "9c18e539e945f978"
            ]
        ]
    },
    {
        "id": "22f08bbcaea844a4",
        "type": "delay",
        "z": "e56d2349d41599d9",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 700,
        "wires": [
            [
                "f17eebde9256775c"
            ]
        ]
    },
    {
        "id": "9296c908a0c9a36b",
        "type": "inject",
        "z": "e56d2349d41599d9",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "0695807f3a290ef6"
            ]
        ]
    },
    {
        "id": "0695807f3a290ef6",
        "type": "postgresql",
        "z": "e56d2349d41599d9",
        "name": "Get last for W17",
        "query": "SELECT * FROM W17\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "2e6d3f39b9c71fc5"
            ]
        ]
    },
    {
        "id": "2e6d3f39b9c71fc5",
        "type": "function",
        "z": "e56d2349d41599d9",
        "name": "inject last count to W17",
        "func": "\nglobal.set(\"W17\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "c8a70d92e2e9376c"
            ]
        ]
    },
    {
        "id": "b064c1a12f863c38",
        "type": "link in",
        "z": "e56d2349d41599d9",
        "name": "link in 12",
        "links": [
            "e63285d065adb307"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "9fa6182a8fc5872d"
            ]
        ]
    },
    {
        "id": "5b4e9720c1696f6c",
        "type": "link in",
        "z": "e56d2349d41599d9",
        "name": "link in 35",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "aa9dbf4178e6b513"
            ]
        ]
    },
    {
        "id": "a03bd8877be8cbe5",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Manual updating of W32 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "9fa1024257d66f19",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Process W32 Information",
        "func": "var Mcount = parseInt(global.get(\"W32\")) - parseInt(global.get(\"W32_\"));\nvar npc = (global.get(\"W32_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW32\"));\nvar c_count = parseInt(global.get(\"c_W32\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW32\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W32\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "73c7395782a77b41"
            ]
        ]
    },
    {
        "id": "5f61b16467ee40f2",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "3a99eb9bbc5c5a35"
            ]
        ]
    },
    {
        "id": "9a80fe90ce98a9fd",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Get Part No for W32",
        "query": "SELECT part_no FROM machine_operator where machine_no='W32' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "e7428d873430958a"
            ]
        ]
    },
    {
        "id": "693fc2a9c0a6fcbf",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "manual Inject without reseting W32",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "9a80fe90ce98a9fd"
            ]
        ]
    },
    {
        "id": "e7428d873430958a",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "W32 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "6b436993f37d89b0"
            ]
        ]
    },
    {
        "id": "6b436993f37d89b0",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Get W32 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "c89cbbe8feec56fc"
            ]
        ]
    },
    {
        "id": "c89cbbe8feec56fc",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Set W32 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W32_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c5fd5283695f80d6",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Post W32 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W32'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "241491f1b434320b",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W32','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8de3912e64fa947b",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "inject 20 count to W32",
        "func": "var count =parseInt(global.get(\"W32\"));\nglobal.set(\"W32\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 860,
        "wires": [
            [
                "cb8a76e8d9ef6f0a"
            ]
        ]
    },
    {
        "id": "cb8a76e8d9ef6f0a",
        "type": "mqtt out",
        "z": "42defa72a5588e63",
        "name": "",
        "topic": "W32",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 990,
        "y": 860,
        "wires": []
    },
    {
        "id": "ab46eeaa2ca501b1",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "manual count testing 1 for W32",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "8de3912e64fa947b"
            ]
        ]
    },
    {
        "id": "8e05a93e8bd75d98",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "inject 1 count to W32",
        "func": "var count =global.get(\"W32\");\nglobal.set(\"W32\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 900,
        "wires": [
            [
                "cb8a76e8d9ef6f0a"
            ]
        ]
    },
    {
        "id": "cfeba1afe2d8a02b",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "manual count testing 2 for W32",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 920,
        "wires": [
            [
                "8e05a93e8bd75d98"
            ]
        ]
    },
    {
        "id": "a8cc8541031daf45",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "c943078912a7cba3",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "f05c98911ce6654a",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "40b65001e0b8aaad",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "e82025607871bacf",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "3a99eb9bbc5c5a35"
            ]
        ]
    },
    {
        "id": "14857bc440b4ccb5",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "3a99eb9bbc5c5a35"
            ]
        ]
    },
    {
        "id": "a0c4ec9350cb2004",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Manual inject/reset W32",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "3a99eb9bbc5c5a35"
            ]
        ]
    },
    {
        "id": "39da61ebc0cd213f",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Create entry for W32",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "241491f1b434320b"
            ]
        ]
    },
    {
        "id": "3a99eb9bbc5c5a35",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Initialize W32 counting",
        "func": "global.set(\"lW32\",0);\nglobal.set(\"c_W32\", 0);\nglobal.set(\"W32_\", global.get(\"W32\"));\nglobal.set(\"W32_alive\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "9a80fe90ce98a9fd"
            ]
        ]
    },
    {
        "id": "58367266f2014bd3",
        "type": "mqtt in",
        "z": "42defa72a5588e63",
        "name": "",
        "topic": "W32",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "3a4820a3af47c73c",
                "d7085ce58edf5e58",
                "dced0831517d8055",
                "aeb05da5ccb445bc",
                "ce0481b2ebc50889",
                "f77eac4b4c2afe57"
            ]
        ]
    },
    {
        "id": "3a4820a3af47c73c",
        "type": "ui_chart",
        "z": "42defa72a5588e63",
        "name": "",
        "group": "2b370276c0cd0dcc",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W32 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d7085ce58edf5e58",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "SET count for W32",
        "func": "global.set(\"W32\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "dced0831517d8055",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W32' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "74719d20c4da10ab",
                "1906a1302abf7897"
            ]
        ]
    },
    {
        "id": "74719d20c4da10ab",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "GET count for W32",
        "func": "msg.payload=global.get(\"W32\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "4d46e001d1ec21c2"
            ]
        ]
    },
    {
        "id": "ab06afcaad6d8d07",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "5d0035e01fcd4369"
            ]
        ]
    },
    {
        "id": "4d46e001d1ec21c2",
        "type": "ui_text",
        "z": "42defa72a5588e63",
        "group": "2b370276c0cd0dcc",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W32 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d0035e01fcd4369",
        "type": "ui_text",
        "z": "42defa72a5588e63",
        "group": "2b370276c0cd0dcc",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W32-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "f6ef1a6074ade411",
        "type": "mqtt out",
        "z": "42defa72a5588e63",
        "name": "",
        "topic": "W32/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "2e4633d49e4b84fd",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "reset W32",
        "func": "global.set(\"W32\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "32f6f518043ea836"
            ]
        ]
    },
    {
        "id": "32f6f518043ea836",
        "type": "mqtt out",
        "z": "42defa72a5588e63",
        "name": "",
        "topic": "W32",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fb3127f3d8ef17c4",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w32 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "60a879499c221e9e",
                "bdeb88d423634dc0"
            ]
        ]
    },
    {
        "id": "9c3d2598aaf961f2",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "W32 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "fb3127f3d8ef17c4"
            ]
        ]
    },
    {
        "id": "60a879499c221e9e",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "W32 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "9cb7cbf57c508472"
            ]
        ]
    },
    {
        "id": "bdeb88d423634dc0",
        "type": "ui_table",
        "z": "42defa72a5588e63",
        "group": "2b370276c0cd0dcc",
        "name": "W32 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9cb7cbf57c508472",
        "type": "ui_chart",
        "z": "42defa72a5588e63",
        "name": "",
        "group": "2b370276c0cd0dcc",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W32 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cfc943bc28147d86",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Data Schedule 2 For W32",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "648abce718ededcb"
            ]
        ]
    },
    {
        "id": "2a9b80660b65c5b6",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Data Schedule 1 For W32 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "648abce718ededcb"
            ]
        ]
    },
    {
        "id": "648abce718ededcb",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "W32 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W32\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "5dcbc3e87527ccb1"
            ]
        ]
    },
    {
        "id": "bf5496de7451ebf7",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Data Schedule 4 For W32",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "648abce718ededcb"
            ]
        ]
    },
    {
        "id": "bab90aa7682780b0",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Data Schedule 3 For W32",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "648abce718ededcb"
            ]
        ]
    },
    {
        "id": "5dcbc3e87527ccb1",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 store data",
        "query": "INSERT INTO W32(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "76c05f7d24f580cf",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Create W32 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "7c707d2ab9c0a4be"
            ]
        ]
    },
    {
        "id": "7c707d2ab9c0a4be",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 Table",
        "query": "CREATE TABLE W32 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1906a1302abf7897",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "W32 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "ab06afcaad6d8d07"
            ]
        ]
    },
    {
        "id": "da735fe907f56134",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "delete W32 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "9b17de6ceb876bb1"
            ]
        ]
    },
    {
        "id": "9b17de6ceb876bb1",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 Table delete",
        "query": "drop TABLE W32 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "aeb05da5ccb445bc",
        "type": "trigger",
        "z": "42defa72a5588e63",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "6ab860e32c460f4a"
            ],
            [
                "451f07a952805aed"
            ]
        ]
    },
    {
        "id": "56f6cdf23c152d6d",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "2e4633d49e4b84fd"
            ]
        ]
    },
    {
        "id": "6ab860e32c460f4a",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Post W32 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W32'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "451f07a952805aed",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Post W32 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W32'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d81580692b414084",
        "type": "ui_text",
        "z": "42defa72a5588e63",
        "group": "2b370276c0cd0dcc",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W32 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "3a4904b505ca678b",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "W32 status check",
        "query": "SELECT status FROM machine_data where machine_no='W32';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "d81580692b414084"
            ]
        ]
    },
    {
        "id": "ea99311bfb499dea",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "3a4904b505ca678b"
            ]
        ]
    },
    {
        "id": "41a19566d365141e",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "9a80fe90ce98a9fd"
            ]
        ]
    },
    {
        "id": "41ba1736ed512523",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Initialize W32 counting",
        "func": "\nglobal.set(\"W32_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1f7f6e7aa3a309c9",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "41ba1736ed512523"
            ]
        ]
    },
    {
        "id": "ce0481b2ebc50889",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "comes on for first time",
        "func": "if(global.get(\"W32_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W32_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "7d69ab33c4377fa6"
            ]
        ]
    },
    {
        "id": "7d69ab33c4377fa6",
        "type": "switch",
        "z": "42defa72a5588e63",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "7c738a523513d50d"
            ]
        ]
    },
    {
        "id": "7c738a523513d50d",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Post W32 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W32'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "25d3cecb6ac7f989",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Get current for W32",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W32' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "d513c566ec62771a"
            ]
        ]
    },
    {
        "id": "7e72273c0070c1c6",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "25d3cecb6ac7f989"
            ]
        ]
    },
    {
        "id": "d513c566ec62771a",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "W32 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "1d540b389d48e666"
            ]
        ]
    },
    {
        "id": "1d540b389d48e666",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Post current as previous in W32",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W32'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 560,
        "wires": [
            [
                "757a0003ecd73d65"
            ]
        ]
    },
    {
        "id": "9b6e0d475b57fc27",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w32 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ad22d224d5f6f4a6",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "9b6e0d475b57fc27"
            ]
        ]
    },
    {
        "id": "73c7395782a77b41",
        "type": "delay",
        "z": "42defa72a5588e63",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 700,
        "wires": [
            [
                "c5fd5283695f80d6"
            ]
        ]
    },
    {
        "id": "f77eac4b4c2afe57",
        "type": "debug",
        "z": "42defa72a5588e63",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "173688c3c9d2f205",
        "type": "postgresql",
        "z": "42defa72a5588e63",
        "name": "Get last for W32",
        "query": "SELECT * FROM w32\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 480,
        "y": 940,
        "wires": [
            [
                "9dc2ef5684481109"
            ]
        ]
    },
    {
        "id": "ba2f18c20aebbe9b",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "173688c3c9d2f205"
            ]
        ]
    },
    {
        "id": "9dc2ef5684481109",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "inject last count to W32",
        "func": "\nglobal.set(\"W32\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 920,
        "wires": [
            [
                "cb8a76e8d9ef6f0a"
            ]
        ]
    },
    {
        "id": "757a0003ecd73d65",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Process W32 Information",
        "func": "var Mcount = parseInt(global.get(\"W32\")) - parseInt(global.get(\"W32_\"));\nvar npc = (global.get(\"W32_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW32\"));\nvar c_count = parseInt(global.get(\"c_W32\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\n\nglobal.set(\"lW32\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W32\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 760,
        "wires": [
            [
                "73c7395782a77b41"
            ]
        ]
    },
    {
        "id": "f20962a733458422",
        "type": "function",
        "z": "42defa72a5588e63",
        "name": "Initialize W32 counting",
        "func": "global.set(\"W32_\", global.get(\"W32\"));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 360,
        "wires": [
            [
                "9a80fe90ce98a9fd"
            ]
        ]
    },
    {
        "id": "8e4991606a989975",
        "type": "inject",
        "z": "42defa72a5588e63",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "f20962a733458422"
            ]
        ]
    },
    {
        "id": "d0ecbbfb07199376",
        "type": "link in",
        "z": "42defa72a5588e63",
        "name": "link in 13",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "3a99eb9bbc5c5a35"
            ]
        ]
    },
    {
        "id": "edcc69035cc49ef0",
        "type": "link in",
        "z": "42defa72a5588e63",
        "name": "link in 36",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 375,
        "y": 660,
        "wires": [
            [
                "9fa1024257d66f19"
            ]
        ]
    },
    {
        "id": "6b25d0e4fa171044",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Manual updating of W19 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "4f67fb1d839cd6cb",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "Process W19 Information",
        "func": "var Mcount = parseInt(global.get(\"W19\")) - parseInt(global.get(\"W19_\"));\nvar npc = (global.get(\"W19_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW19\"));\nvar c_count = parseInt(global.get(\"c_W19\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW19\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W19\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "bddb2d007efcc4cb"
            ]
        ]
    },
    {
        "id": "d8ca6a8276ae15df",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "9ca1107b45740cba"
            ]
        ]
    },
    {
        "id": "c90d1bc9a896287b",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Get Part No for W19",
        "query": "SELECT part_no FROM machine_operator where machine_no='W19' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "3279318b7b89359c"
            ]
        ]
    },
    {
        "id": "318a0ce0af838787",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "manual Inject without reseting W19",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "c90d1bc9a896287b"
            ]
        ]
    },
    {
        "id": "3279318b7b89359c",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "W19 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "d04c18ad2c12248f"
            ]
        ]
    },
    {
        "id": "d04c18ad2c12248f",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Get W19 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "0250fc38a9f741fa"
            ]
        ]
    },
    {
        "id": "0250fc38a9f741fa",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "Set W19 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W19_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "dc779497f134bb53",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Post W19 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W19'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5fe63ba5c1c60d73",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W19','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "063606d74e77243c",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "inject 20 count to W19",
        "func": "var count =parseInt(global.get(\"W19\"));\nglobal.set(\"W19\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "5b5fa907ca8d1a1c"
            ]
        ]
    },
    {
        "id": "5b5fa907ca8d1a1c",
        "type": "mqtt out",
        "z": "be902db97934f5f9",
        "name": "",
        "topic": "W19",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 830,
        "y": 840,
        "wires": []
    },
    {
        "id": "f1dc304976bd43fb",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "manual count testing 1 for W19",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "063606d74e77243c"
            ]
        ]
    },
    {
        "id": "350858dc147cdcaa",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "inject 1 count to W19",
        "func": "var count =global.get(\"W19\");\nglobal.set(\"W19\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 880,
        "wires": [
            [
                "5b5fa907ca8d1a1c"
            ]
        ]
    },
    {
        "id": "ce8c6d9605ebf391",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "manual count testing 2 for W19",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "350858dc147cdcaa"
            ]
        ]
    },
    {
        "id": "60b0dd91d276e2e1",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "b02e98bb6fcdd78a",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "51cb9ad78acfc3f3",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "517c094509a72128",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "2fdece7479e99d11",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "9ca1107b45740cba"
            ]
        ]
    },
    {
        "id": "662dda9095e7baf7",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "9ca1107b45740cba"
            ]
        ]
    },
    {
        "id": "6ab6afa738dc3d96",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Manual inject/reset W19",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "9ca1107b45740cba"
            ]
        ]
    },
    {
        "id": "bbf6dffd222a17d1",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Create entry for W19",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "5fe63ba5c1c60d73"
            ]
        ]
    },
    {
        "id": "9ca1107b45740cba",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "Initialize W19 counting",
        "func": "global.set(\"lW19\",0);\nglobal.set(\"c_W19\", 0);\nglobal.set(\"W19_\", global.get(\"W19\"));\nglobal.set(\"W19_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "c90d1bc9a896287b"
            ]
        ]
    },
    {
        "id": "af7f806255294258",
        "type": "mqtt in",
        "z": "be902db97934f5f9",
        "name": "",
        "topic": "W19",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "078371ecf76318be",
                "98f78acaabb39f6b",
                "93f72d1fde62774f",
                "3498b474d10436f7",
                "4134030b2a5ee2a1"
            ]
        ]
    },
    {
        "id": "078371ecf76318be",
        "type": "ui_chart",
        "z": "be902db97934f5f9",
        "name": "",
        "group": "a42f279e1b57ba8f",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W19 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "98f78acaabb39f6b",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "SET count for W19",
        "func": "global.set(\"W19\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "93f72d1fde62774f",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W19' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "39f4dc1167529548",
                "7cfc4d8ad49890c5"
            ]
        ]
    },
    {
        "id": "39f4dc1167529548",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "GET count for W19",
        "func": "msg.payload=global.get(\"W19\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "b86f76d3cb74031b"
            ]
        ]
    },
    {
        "id": "a9150fbaac98d262",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "e2e150b1f184b7ae"
            ]
        ]
    },
    {
        "id": "b86f76d3cb74031b",
        "type": "ui_text",
        "z": "be902db97934f5f9",
        "group": "a42f279e1b57ba8f",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W19 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "e2e150b1f184b7ae",
        "type": "ui_text",
        "z": "be902db97934f5f9",
        "group": "a42f279e1b57ba8f",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W19-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "07526472cfad100a",
        "type": "mqtt out",
        "z": "be902db97934f5f9",
        "name": "",
        "topic": "W19/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "1ef08dd76c4f2731",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "reset W19",
        "func": "global.set(\"W19\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "5240a2348a41ca3a"
            ]
        ]
    },
    {
        "id": "5240a2348a41ca3a",
        "type": "mqtt out",
        "z": "be902db97934f5f9",
        "name": "",
        "topic": "W19",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "adce1236414d01b9",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w19 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "511a768287fdfe31",
                "c849c05f54a4be4a"
            ]
        ]
    },
    {
        "id": "a04a7a38321d9052",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "W19 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "adce1236414d01b9"
            ]
        ]
    },
    {
        "id": "511a768287fdfe31",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "W19 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "62326c84b7c8b72f"
            ]
        ]
    },
    {
        "id": "c849c05f54a4be4a",
        "type": "ui_table",
        "z": "be902db97934f5f9",
        "group": "a42f279e1b57ba8f",
        "name": "W19 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "62326c84b7c8b72f",
        "type": "ui_chart",
        "z": "be902db97934f5f9",
        "name": "",
        "group": "a42f279e1b57ba8f",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W19 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "0f2749fa8fded762",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Data Schedule 2 For W19",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "9296fecf19c625e1"
            ]
        ]
    },
    {
        "id": "b1b0158f8f3749dd",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Data Schedule 1 For W19 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "9296fecf19c625e1"
            ]
        ]
    },
    {
        "id": "9296fecf19c625e1",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "W19 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W19\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1180,
        "wires": [
            [
                "b0692418b297732a"
            ]
        ]
    },
    {
        "id": "79690b08a0baa285",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Data Schedule 4 For W19",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "9296fecf19c625e1"
            ]
        ]
    },
    {
        "id": "d13865387a08aff1",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Data Schedule 3 For W19",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "9296fecf19c625e1"
            ]
        ]
    },
    {
        "id": "b0692418b297732a",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 store data",
        "query": "INSERT INTO W19(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 740,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "76e6fb217f1dbff2",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Create W19 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "1b1531cac5a611a2"
            ]
        ]
    },
    {
        "id": "1b1531cac5a611a2",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 Table",
        "query": "CREATE TABLE W19 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7cfc4d8ad49890c5",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "W19 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "a9150fbaac98d262"
            ]
        ]
    },
    {
        "id": "0aeedcdb89d4f694",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "delete W19 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "f9309ef9cb5a328d"
            ]
        ]
    },
    {
        "id": "f9309ef9cb5a328d",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 Table delete",
        "query": "drop TABLE W19 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3498b474d10436f7",
        "type": "trigger",
        "z": "be902db97934f5f9",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "4846860bb983c17a"
            ],
            [
                "7ef1767847a80206"
            ]
        ]
    },
    {
        "id": "fa9f1e65e61ef4b2",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "1ef08dd76c4f2731"
            ]
        ]
    },
    {
        "id": "4846860bb983c17a",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Post W19 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W19'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7ef1767847a80206",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Post W19 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W19'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fe90c032870fa50b",
        "type": "ui_text",
        "z": "be902db97934f5f9",
        "group": "a42f279e1b57ba8f",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W19 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "324866d3d202c8f9",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "W19 status check",
        "query": "SELECT status FROM machine_data where machine_no='W19';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "fe90c032870fa50b"
            ]
        ]
    },
    {
        "id": "b22411f839c19ccf",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "324866d3d202c8f9"
            ]
        ]
    },
    {
        "id": "279e11a61ed51087",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "c90d1bc9a896287b"
            ]
        ]
    },
    {
        "id": "760189a848c73890",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "Initialize W19 counting",
        "func": "\nglobal.set(\"W19_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a78bfc2257bd8297",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "760189a848c73890"
            ]
        ]
    },
    {
        "id": "4134030b2a5ee2a1",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "comes on for first time",
        "func": "if(global.get(\"W19_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W19_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "3507e277b6927dec"
            ]
        ]
    },
    {
        "id": "3507e277b6927dec",
        "type": "switch",
        "z": "be902db97934f5f9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "f93bce61f64c07b6"
            ]
        ]
    },
    {
        "id": "f93bce61f64c07b6",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Post W19 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W19'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ef1250e3d906c597",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Get current for W19",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W19' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "0d50fee8163c7a8c"
            ]
        ]
    },
    {
        "id": "3da2cb3417e083a2",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "ef1250e3d906c597"
            ]
        ]
    },
    {
        "id": "0d50fee8163c7a8c",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "W19 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "1121c948ea608f8c"
            ]
        ]
    },
    {
        "id": "1121c948ea608f8c",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Post current as previous in W19",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W19'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6d746d2def46f059",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w19 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a6bfb5473f36f07c",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "6d746d2def46f059"
            ]
        ]
    },
    {
        "id": "bddb2d007efcc4cb",
        "type": "delay",
        "z": "be902db97934f5f9",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "dc779497f134bb53"
            ]
        ]
    },
    {
        "id": "d5878195111154ae",
        "type": "inject",
        "z": "be902db97934f5f9",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "4c03e00461ee65d9"
            ]
        ]
    },
    {
        "id": "4c03e00461ee65d9",
        "type": "postgresql",
        "z": "be902db97934f5f9",
        "name": "Get last for W19",
        "query": "SELECT * FROM W19\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "98b175f27ca9a878"
            ]
        ]
    },
    {
        "id": "98b175f27ca9a878",
        "type": "function",
        "z": "be902db97934f5f9",
        "name": "inject last count to W19",
        "func": "\nglobal.set(\"W19\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "5b5fa907ca8d1a1c"
            ]
        ]
    },
    {
        "id": "19f8819155e7db65",
        "type": "link in",
        "z": "be902db97934f5f9",
        "name": "link in 14",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "9ca1107b45740cba"
            ]
        ]
    },
    {
        "id": "b3ccbf18abd6ae5e",
        "type": "link in",
        "z": "be902db97934f5f9",
        "name": "link in 37",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "4f67fb1d839cd6cb"
            ]
        ]
    },
    {
        "id": "4457396e2541fb04",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Manual updating of W28 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "655b07c4977ff83b",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "Process W28 Information",
        "func": "var Mcount = parseInt(global.get(\"W28\")) - parseInt(global.get(\"W28_\"));\nvar npc = (global.get(\"W28_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW28\"));\nvar c_count = parseInt(global.get(\"c_W28\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW28\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W28\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "d52d793f258d41dc"
            ]
        ]
    },
    {
        "id": "c7c3ec8a651bc432",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "6ff3c2fb584032a5"
            ]
        ]
    },
    {
        "id": "35b388d37a0d09c9",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Get Part No for W28",
        "query": "SELECT part_no FROM machine_operator where machine_no='W28' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "9577a58e8b24a7f2"
            ]
        ]
    },
    {
        "id": "4cf4f10bfeec35d7",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "manual Inject without reseting W28",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "35b388d37a0d09c9"
            ]
        ]
    },
    {
        "id": "9577a58e8b24a7f2",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "W28 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "04b4fb8fbcf7c003"
            ]
        ]
    },
    {
        "id": "04b4fb8fbcf7c003",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Get W28 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "ecc00a99aaf9134c"
            ]
        ]
    },
    {
        "id": "ecc00a99aaf9134c",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "Set W28 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W28_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "61a952beca565757",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Post W28 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W28'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "842ea756b7a4453c",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W28','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e9c4b170a05fe893",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "inject 20 count to W28",
        "func": "var count =parseInt(global.get(\"W28\"));\nglobal.set(\"W28\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 820,
        "wires": [
            [
                "53a5f48aa83faf3f"
            ]
        ]
    },
    {
        "id": "53a5f48aa83faf3f",
        "type": "mqtt out",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "topic": "W28",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 770,
        "y": 860,
        "wires": []
    },
    {
        "id": "cf6d8deee7a11cae",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "manual count testing 1 for W28",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "e9c4b170a05fe893"
            ]
        ]
    },
    {
        "id": "a9f1e2d4ecedf82c",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "inject 1 count to W28",
        "func": "var count =global.get(\"W28\");\nglobal.set(\"W28\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 860,
        "wires": [
            [
                "53a5f48aa83faf3f"
            ]
        ]
    },
    {
        "id": "4bf5399ab77e4f69",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "manual count testing 2 for W28",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "a9f1e2d4ecedf82c"
            ]
        ]
    },
    {
        "id": "d65d5cdbf99db03e",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "7c43faa55e220fec",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "5fab56bd423233c2",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "bef58dadf87a76ef",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "ee72de05de0e1d15",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "6ff3c2fb584032a5"
            ]
        ]
    },
    {
        "id": "ded03e7d49502bed",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "6ff3c2fb584032a5"
            ]
        ]
    },
    {
        "id": "997c58e4dc07dce6",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Manual inject/reset W28",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "6ff3c2fb584032a5"
            ]
        ]
    },
    {
        "id": "4785e9c4b4e5a883",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Create entry for W28",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "842ea756b7a4453c"
            ]
        ]
    },
    {
        "id": "6ff3c2fb584032a5",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "Initialize W28 counting",
        "func": "global.set(\"lW28\",0);\nglobal.set(\"c_W28\", 0);\nglobal.set(\"W28_\", global.get(\"W28\"));\nglobal.set(\"W28_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "35b388d37a0d09c9"
            ]
        ]
    },
    {
        "id": "7ab6b15d9844189d",
        "type": "mqtt in",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "topic": "W28",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "edc2abceea393a22",
                "df4c2d508b438302",
                "91d401c5810f064d",
                "6eec34678e9c47f1",
                "be8c179c34fa1c63"
            ]
        ]
    },
    {
        "id": "edc2abceea393a22",
        "type": "ui_chart",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "group": "35174f50eef1c2b3",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W28 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "df4c2d508b438302",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "SET count for W28",
        "func": "global.set(\"W28\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "91d401c5810f064d",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W28' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "eb1fc29869ca68a1",
                "1b414fb04f3e462d"
            ]
        ]
    },
    {
        "id": "eb1fc29869ca68a1",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "GET count for W28",
        "func": "msg.payload=global.get(\"W28\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "c3283cf54d01d30a"
            ]
        ]
    },
    {
        "id": "20dafd846bfe48ae",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "35941967ae0c7ae7"
            ]
        ]
    },
    {
        "id": "c3283cf54d01d30a",
        "type": "ui_text",
        "z": "e7400a1aef6eeb97",
        "group": "35174f50eef1c2b3",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W28 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "35941967ae0c7ae7",
        "type": "ui_text",
        "z": "e7400a1aef6eeb97",
        "group": "35174f50eef1c2b3",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W28-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "1b500b24d6c2e1d0",
        "type": "mqtt out",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "topic": "W28/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "d0d034e0f616dc46",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "reset W28",
        "func": "global.set(\"W28\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "359a15e0c5224306"
            ]
        ]
    },
    {
        "id": "359a15e0c5224306",
        "type": "mqtt out",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "topic": "W28",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6a108902d05f2f98",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w28 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "aeb5f8627b77a649",
                "3a6212de796acecf"
            ]
        ]
    },
    {
        "id": "3154451369e11f86",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "6a108902d05f2f98"
            ]
        ]
    },
    {
        "id": "aeb5f8627b77a649",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "3d9345ca550a8161"
            ]
        ]
    },
    {
        "id": "3a6212de796acecf",
        "type": "ui_table",
        "z": "e7400a1aef6eeb97",
        "group": "35174f50eef1c2b3",
        "name": "W28 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3d9345ca550a8161",
        "type": "ui_chart",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "group": "35174f50eef1c2b3",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W28 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "04eeb9096d2362bf",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Data Schedule 2 For W28",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "fb4e31fc5d1a2649"
            ]
        ]
    },
    {
        "id": "1fd8278a3d485948",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Data Schedule 1 For W28 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "fb4e31fc5d1a2649"
            ]
        ]
    },
    {
        "id": "fb4e31fc5d1a2649",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "W28 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W28\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "9f4cdc7791c93fe1"
            ]
        ]
    },
    {
        "id": "8b8d0adc22924578",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Data Schedule 4 For W28",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "fb4e31fc5d1a2649"
            ]
        ]
    },
    {
        "id": "f4ea46ce8d79d481",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Data Schedule 3 For W28",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "fb4e31fc5d1a2649"
            ]
        ]
    },
    {
        "id": "9f4cdc7791c93fe1",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 store data",
        "query": "INSERT INTO W28(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "4e6a40928d74a10b",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Create W28 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "77786415e1090156"
            ]
        ]
    },
    {
        "id": "77786415e1090156",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Table",
        "query": "CREATE TABLE W28 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1b414fb04f3e462d",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "W28 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "20dafd846bfe48ae"
            ]
        ]
    },
    {
        "id": "de45256fb042d215",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "delete W28 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "8f26d28d0e837fd0"
            ]
        ]
    },
    {
        "id": "8f26d28d0e837fd0",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 Table delete",
        "query": "drop TABLE W28 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "6eec34678e9c47f1",
        "type": "trigger",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "d4efbd38c07d6c3f"
            ],
            [
                "661fc24e7266d8bf"
            ]
        ]
    },
    {
        "id": "b98199ac02b354ed",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "d0d034e0f616dc46"
            ]
        ]
    },
    {
        "id": "d4efbd38c07d6c3f",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Post W28 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W28'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "661fc24e7266d8bf",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Post W28 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W28'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b8f2519196130ac8",
        "type": "ui_text",
        "z": "e7400a1aef6eeb97",
        "group": "35174f50eef1c2b3",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W28 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "1fefcc8109eb71ba",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "W28 status check",
        "query": "SELECT status FROM machine_data where machine_no='W28';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "b8f2519196130ac8"
            ]
        ]
    },
    {
        "id": "86d46969091778a3",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "1fefcc8109eb71ba"
            ]
        ]
    },
    {
        "id": "c7c8aef259e18038",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "35b388d37a0d09c9"
            ]
        ]
    },
    {
        "id": "cfa72affaf14716c",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "Initialize W28 counting",
        "func": "\nglobal.set(\"W28_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4dad76123e169f7d",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "cfa72affaf14716c"
            ]
        ]
    },
    {
        "id": "be8c179c34fa1c63",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "comes on for first time",
        "func": "if(global.get(\"W28_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W28_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "4618aa6d2eb37c22"
            ]
        ]
    },
    {
        "id": "4618aa6d2eb37c22",
        "type": "switch",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "5cf9928a2d1b9b78"
            ]
        ]
    },
    {
        "id": "5cf9928a2d1b9b78",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Post W28 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W28'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4a8855dfe316d0e4",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Get current for W28",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W28' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "276fdd5c98d7d276"
            ]
        ]
    },
    {
        "id": "daf2cdd36a26112a",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "4a8855dfe316d0e4"
            ]
        ]
    },
    {
        "id": "276fdd5c98d7d276",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "W28 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "202e13c7bbfe1a31"
            ]
        ]
    },
    {
        "id": "202e13c7bbfe1a31",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Post current as previous in W28",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W28'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6764bbec8d7a03c5",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w28 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f433df21c0046e85",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "6764bbec8d7a03c5"
            ]
        ]
    },
    {
        "id": "d52d793f258d41dc",
        "type": "delay",
        "z": "e7400a1aef6eeb97",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 680,
        "wires": [
            [
                "61a952beca565757"
            ]
        ]
    },
    {
        "id": "6c54a8689fc9069f",
        "type": "inject",
        "z": "e7400a1aef6eeb97",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "bf9678482a93f114"
            ]
        ]
    },
    {
        "id": "bf9678482a93f114",
        "type": "postgresql",
        "z": "e7400a1aef6eeb97",
        "name": "Get last for W28",
        "query": "SELECT * FROM W28\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "56de6876a63fcb2c"
            ]
        ]
    },
    {
        "id": "56de6876a63fcb2c",
        "type": "function",
        "z": "e7400a1aef6eeb97",
        "name": "inject last count to W28",
        "func": "\nglobal.set(\"W28\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "53a5f48aa83faf3f"
            ]
        ]
    },
    {
        "id": "cc4654c96b298dc7",
        "type": "link in",
        "z": "e7400a1aef6eeb97",
        "name": "link in 15",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "6ff3c2fb584032a5"
            ]
        ]
    },
    {
        "id": "bd05043cbb8b817a",
        "type": "link in",
        "z": "e7400a1aef6eeb97",
        "name": "link in 38",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 375,
        "y": 660,
        "wires": [
            [
                "655b07c4977ff83b"
            ]
        ]
    },
    {
        "id": "cf1ee4f6a6795556",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Manual updating of W16 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "7b710c47ab652927",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "Process W16 Information",
        "func": "var Mcount = parseInt(global.get(\"W16\")) - parseInt(global.get(\"W16_\"));\nvar npc = (global.get(\"W16_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW16\"));\nvar c_count = parseInt(global.get(\"c_W16\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW16\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W16\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "ebd172170fa5cdb6"
            ]
        ]
    },
    {
        "id": "895c57cb7b827be0",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "285f584db9b8fd3d"
            ]
        ]
    },
    {
        "id": "92b3f23516002142",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Get Part No for W16",
        "query": "SELECT part_no FROM machine_operator where machine_no='W16' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "eed18739ae73e3b4"
            ]
        ]
    },
    {
        "id": "f6f08121216e5663",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "manual Inject without reseting W16",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "92b3f23516002142"
            ]
        ]
    },
    {
        "id": "eed18739ae73e3b4",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "bde6b20b895e77fa"
            ]
        ]
    },
    {
        "id": "bde6b20b895e77fa",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Get W16 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "fa47d7dab65469ec"
            ]
        ]
    },
    {
        "id": "fa47d7dab65469ec",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "Set W16 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W16_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "370972b3dac710b6",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Post W16 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W16'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "9dae64db8c753ed2",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W16','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "0764109821b311c7",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "inject 20 count to W16",
        "func": "var count =parseInt(global.get(\"W16\"));\nglobal.set(\"W16\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 820,
        "wires": [
            [
                "c952f0ff2dc5ea42"
            ]
        ]
    },
    {
        "id": "c952f0ff2dc5ea42",
        "type": "mqtt out",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "topic": "W16",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "7a13520ce0a39679",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "manual count testing 1 for W16",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "0764109821b311c7"
            ]
        ]
    },
    {
        "id": "7fd60be440d097b4",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "inject 1 count to W16",
        "func": "var count =global.get(\"W16\");\nglobal.set(\"W16\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "c952f0ff2dc5ea42"
            ]
        ]
    },
    {
        "id": "71bce438101576fa",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "manual count testing 2 for W16",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "7fd60be440d097b4"
            ]
        ]
    },
    {
        "id": "1b6ea190fbf5831c",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "0824661133b37c09",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "d20eafa1c870cf59",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "5937ed339b2b172b",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "8e9bc66b8766fbf7",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "285f584db9b8fd3d"
            ]
        ]
    },
    {
        "id": "dde727495c1d469a",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "285f584db9b8fd3d"
            ]
        ]
    },
    {
        "id": "1c2e6be9ea0509cc",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Manual inject/reset W16",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "285f584db9b8fd3d"
            ]
        ]
    },
    {
        "id": "7ddb9d293b70d6db",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Create entry for W16",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "9dae64db8c753ed2"
            ]
        ]
    },
    {
        "id": "285f584db9b8fd3d",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "Initialize W16 counting",
        "func": "global.set(\"lW16\",0);\nglobal.set(\"c_W16\", 0);\nglobal.set(\"W16_\", global.get(\"W16\"));\nglobal.set(\"W16_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "92b3f23516002142"
            ]
        ]
    },
    {
        "id": "cb992d4e73336995",
        "type": "mqtt in",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "topic": "W16",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "43858d681162dd78",
                "f85b2e3a63bdd08b",
                "3c35c6be1141b176",
                "65cb2dc7c816968e",
                "46c37294ed33a3b5"
            ]
        ]
    },
    {
        "id": "43858d681162dd78",
        "type": "ui_chart",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "group": "0f300590201e6c0d",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W16 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f85b2e3a63bdd08b",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "SET count for W16",
        "func": "global.set(\"W16\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3c35c6be1141b176",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W16' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "acccd2778c754743",
                "b6c4cf7ad71fdd76"
            ]
        ]
    },
    {
        "id": "acccd2778c754743",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "GET count for W16",
        "func": "msg.payload=global.get(\"W16\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "458436df26d5e202"
            ]
        ]
    },
    {
        "id": "139bb1ec1e5cd34d",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "ad68f4bae3f3b194"
            ]
        ]
    },
    {
        "id": "458436df26d5e202",
        "type": "ui_text",
        "z": "7d57d1b8f5cea3e2",
        "group": "0f300590201e6c0d",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W16 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "ad68f4bae3f3b194",
        "type": "ui_text",
        "z": "7d57d1b8f5cea3e2",
        "group": "0f300590201e6c0d",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W16-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "b3935aa0f6ee9a62",
        "type": "mqtt out",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "topic": "W16/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "fbb396d75e158532",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "reset W16",
        "func": "global.set(\"W16\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "9fe3ee097a694b81"
            ]
        ]
    },
    {
        "id": "9fe3ee097a694b81",
        "type": "mqtt out",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "topic": "W16",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0dafb4a6f4dcc1ae",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w16 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "2d3d8a83af1be051",
                "9282f20490d14328"
            ]
        ]
    },
    {
        "id": "9691ba4aa150af8e",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "0dafb4a6f4dcc1ae"
            ]
        ]
    },
    {
        "id": "2d3d8a83af1be051",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "600e8e1da7bb308d"
            ]
        ]
    },
    {
        "id": "9282f20490d14328",
        "type": "ui_table",
        "z": "7d57d1b8f5cea3e2",
        "group": "0f300590201e6c0d",
        "name": "W16 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "600e8e1da7bb308d",
        "type": "ui_chart",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "group": "0f300590201e6c0d",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W16 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "497f2c338ae67496",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Data Schedule 2 For W16",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "d086a6a461f6b046"
            ]
        ]
    },
    {
        "id": "2d8a516b77b08030",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Data Schedule 1 For W16 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "d086a6a461f6b046"
            ]
        ]
    },
    {
        "id": "d086a6a461f6b046",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W16\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "e2937b9f131fb9ea"
            ]
        ]
    },
    {
        "id": "26941b2f8baaa82e",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Data Schedule 4 For W16",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "d086a6a461f6b046"
            ]
        ]
    },
    {
        "id": "ce34914ed725e371",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Data Schedule 3 For W16",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "d086a6a461f6b046"
            ]
        ]
    },
    {
        "id": "e2937b9f131fb9ea",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 store data",
        "query": "INSERT INTO W16(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "cc2d6a40d5e26ea2",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Create W16 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "e41bc5057499b006"
            ]
        ]
    },
    {
        "id": "e41bc5057499b006",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Table",
        "query": "CREATE TABLE W16 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b6c4cf7ad71fdd76",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "139bb1ec1e5cd34d"
            ]
        ]
    },
    {
        "id": "07b739d9f21815a1",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "delete W16 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "851b556afdb46549"
            ]
        ]
    },
    {
        "id": "851b556afdb46549",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 Table delete",
        "query": "drop TABLE W16 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "65cb2dc7c816968e",
        "type": "trigger",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "c5061c6ec43e5bf0"
            ],
            [
                "4cbee76fab9e1341"
            ]
        ]
    },
    {
        "id": "1cbc1bbea3db8186",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "fbb396d75e158532"
            ]
        ]
    },
    {
        "id": "c5061c6ec43e5bf0",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Post W16 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W16'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4cbee76fab9e1341",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Post W16 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W16'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8b98189bcbf54638",
        "type": "ui_text",
        "z": "7d57d1b8f5cea3e2",
        "group": "0f300590201e6c0d",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W16 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "b8e45e66879088f8",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 status check",
        "query": "SELECT status FROM machine_data where machine_no='W16';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "8b98189bcbf54638"
            ]
        ]
    },
    {
        "id": "8a72156d45062550",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "b8e45e66879088f8"
            ]
        ]
    },
    {
        "id": "5f28adfda291b1f5",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "92b3f23516002142"
            ]
        ]
    },
    {
        "id": "8a9d61ba0ebbd13f",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "Initialize W16 counting",
        "func": "\nglobal.set(\"W16_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b8995448e7437e46",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "8a9d61ba0ebbd13f"
            ]
        ]
    },
    {
        "id": "46c37294ed33a3b5",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "comes on for first time",
        "func": "if(global.get(\"W16_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W16_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "5aa0a87d756099ae"
            ]
        ]
    },
    {
        "id": "5aa0a87d756099ae",
        "type": "switch",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "d24f22ecedf387f5"
            ]
        ]
    },
    {
        "id": "d24f22ecedf387f5",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Post W16 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W16'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b154526e7e837d46",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Get current for W16",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W16' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "0e6dc4e1de3fe439"
            ]
        ]
    },
    {
        "id": "ced61182fc5d5dd1",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "b154526e7e837d46"
            ]
        ]
    },
    {
        "id": "0e6dc4e1de3fe439",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "W16 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "206aa762d24eeecf"
            ]
        ]
    },
    {
        "id": "206aa762d24eeecf",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Post current as previous in W16",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W16'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5450bf34de0eabde",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w16 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2f3b68cac8419fd0",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "5450bf34de0eabde"
            ]
        ]
    },
    {
        "id": "ebd172170fa5cdb6",
        "type": "delay",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "370972b3dac710b6"
            ]
        ]
    },
    {
        "id": "95d576c0a8f73685",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "cde42d2211650c91"
            ]
        ]
    },
    {
        "id": "cde42d2211650c91",
        "type": "postgresql",
        "z": "7d57d1b8f5cea3e2",
        "name": "Get last for W16",
        "query": "SELECT * FROM W16\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "ab0a9799880d12da"
            ]
        ]
    },
    {
        "id": "ab0a9799880d12da",
        "type": "function",
        "z": "7d57d1b8f5cea3e2",
        "name": "inject last count to W16",
        "func": "\nglobal.set(\"W16\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "c952f0ff2dc5ea42"
            ]
        ]
    },
    {
        "id": "29b742821cf08783",
        "type": "inject",
        "z": "7d57d1b8f5cea3e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "4cbee76fab9e1341"
            ]
        ]
    },
    {
        "id": "949697c559f56384",
        "type": "link in",
        "z": "7d57d1b8f5cea3e2",
        "name": "link in 16",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "285f584db9b8fd3d"
            ]
        ]
    },
    {
        "id": "642aae292490aff5",
        "type": "link in",
        "z": "7d57d1b8f5cea3e2",
        "name": "link in 39",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "7b710c47ab652927"
            ]
        ]
    },
    {
        "id": "4f3ae332121358f7",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Manual updating of W12 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "22ceedd851c5c294",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "Process W12 Information",
        "func": "var Mcount = parseInt(global.get(\"W12\")) - parseInt(global.get(\"W12_\"));\nvar npc = (global.get(\"W12_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW12\"));\nvar c_count = parseInt(global.get(\"c_W12\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW12\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W12\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "66fbca9a792f6ac2"
            ]
        ]
    },
    {
        "id": "18cd0501e65cd160",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "f46cf3a70903ae27"
            ]
        ]
    },
    {
        "id": "cf24455706c5dee2",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Get Part No for W12",
        "query": "SELECT part_no FROM machine_operator where machine_no='W12' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "cd842f3229277792"
            ]
        ]
    },
    {
        "id": "e32aea5bfbeb44ad",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "manual Inject without reseting W12",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "cf24455706c5dee2"
            ]
        ]
    },
    {
        "id": "cd842f3229277792",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "W12 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "5cf57f104340059a"
            ]
        ]
    },
    {
        "id": "5cf57f104340059a",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Get W12 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "0b775997d7f66c95"
            ]
        ]
    },
    {
        "id": "0b775997d7f66c95",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "Set W12 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W12_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7829fadc9cf92ac8",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Post W12 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W12'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1060,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "14480f5bcb0a1363",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W12','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "adb3f0edfdaefd1d",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "inject 20 count to W12",
        "func": "var count =parseInt(global.get(\"W12\"));\nglobal.set(\"W12\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "ef0a63a178d72238"
            ]
        ]
    },
    {
        "id": "ef0a63a178d72238",
        "type": "mqtt out",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "topic": "W12",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "a7827bdbb6810b27",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "manual count testing 1 for W12",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "adb3f0edfdaefd1d"
            ]
        ]
    },
    {
        "id": "5a603ba8c203950a",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "inject 1 count to W12",
        "func": "var count =global.get(\"W12\");\nglobal.set(\"W12\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "ef0a63a178d72238"
            ]
        ]
    },
    {
        "id": "8b08eeda630e4b4f",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "manual count testing 2 for W12",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "5a603ba8c203950a"
            ]
        ]
    },
    {
        "id": "fba39ac3b1097003",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "c6ec81b7f9530b20",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "35f05f56db1374ee",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "b6705e1eae456f18",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "c1d8c8480a5b55be",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "f46cf3a70903ae27"
            ]
        ]
    },
    {
        "id": "bb658e42c1e4ae04",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "f46cf3a70903ae27"
            ]
        ]
    },
    {
        "id": "3769a28b08b1a815",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Manual inject/reset W12",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "f46cf3a70903ae27"
            ]
        ]
    },
    {
        "id": "8dd40b64836827c5",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Create entry for W12",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "14480f5bcb0a1363"
            ]
        ]
    },
    {
        "id": "f46cf3a70903ae27",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "Initialize W12 counting",
        "func": "global.set(\"lW12\",0);\nglobal.set(\"c_W12\", 0);\nglobal.set(\"W12_\", global.get(\"W12\"));\nglobal.set(\"W12_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "cf24455706c5dee2"
            ]
        ]
    },
    {
        "id": "09dc5c0a42f72e4f",
        "type": "mqtt in",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "topic": "W12",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "ddf0fd516eacc490",
                "b87922b76d9d4ae2",
                "b51ce82af15a2e0e",
                "298152fd292e73b5",
                "e89cabfaf1a448d8"
            ]
        ]
    },
    {
        "id": "ddf0fd516eacc490",
        "type": "ui_chart",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "group": "13928d208e6d8fb5",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W12 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b87922b76d9d4ae2",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "SET count for W12",
        "func": "global.set(\"W12\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b51ce82af15a2e0e",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W12' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "3059c4e4f91e52e7",
                "42b134cee451e27a"
            ]
        ]
    },
    {
        "id": "3059c4e4f91e52e7",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "GET count for W12",
        "func": "msg.payload=global.get(\"W12\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "b454bdab4bb4a012"
            ]
        ]
    },
    {
        "id": "d1920b6cd554c2ba",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "3bbc6a306ea0fb53"
            ]
        ]
    },
    {
        "id": "b454bdab4bb4a012",
        "type": "ui_text",
        "z": "8b89d3508a6c98cc",
        "group": "13928d208e6d8fb5",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W12 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "3bbc6a306ea0fb53",
        "type": "ui_text",
        "z": "8b89d3508a6c98cc",
        "group": "13928d208e6d8fb5",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W12-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "8130db1709900a46",
        "type": "mqtt out",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "topic": "W12/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "b5776027e58480f3",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "reset W12",
        "func": "global.set(\"W12\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "fb856f73827fd98e"
            ]
        ]
    },
    {
        "id": "fb856f73827fd98e",
        "type": "mqtt out",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "topic": "W12",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a27bc4a918252614",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w12 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "9b395cbdf30a3c0f",
                "d950f60f05c51b2e"
            ]
        ]
    },
    {
        "id": "ca2e5361966dc3e4",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "a27bc4a918252614"
            ]
        ]
    },
    {
        "id": "9b395cbdf30a3c0f",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "6f06917c9bc4594a"
            ]
        ]
    },
    {
        "id": "d950f60f05c51b2e",
        "type": "ui_table",
        "z": "8b89d3508a6c98cc",
        "group": "13928d208e6d8fb5",
        "name": "W12 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6f06917c9bc4594a",
        "type": "ui_chart",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "group": "13928d208e6d8fb5",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W12 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "620239bd7fd2024c",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Data Schedule 2 For W12",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "7eb4f669451341af"
            ]
        ]
    },
    {
        "id": "fa8ccfa497173144",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Data Schedule 1 For W12 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "7eb4f669451341af"
            ]
        ]
    },
    {
        "id": "7eb4f669451341af",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "W12 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W12\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "b2c639c950d0a8b8"
            ]
        ]
    },
    {
        "id": "88fead79e320837e",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Data Schedule 4 For W12",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "7eb4f669451341af"
            ]
        ]
    },
    {
        "id": "bd9bbed1a44a05f5",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Data Schedule 3 For W12",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "7eb4f669451341af"
            ]
        ]
    },
    {
        "id": "b2c639c950d0a8b8",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 store data",
        "query": "INSERT INTO W12(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "2f33991136275077",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Create W12 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "ee0eb18c8d13e65c"
            ]
        ]
    },
    {
        "id": "ee0eb18c8d13e65c",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Table",
        "query": "CREATE TABLE W12 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "42b134cee451e27a",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "W12 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "d1920b6cd554c2ba"
            ]
        ]
    },
    {
        "id": "efa88b993b3a8074",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "delete W12 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "0f4616261ddd7fbe"
            ]
        ]
    },
    {
        "id": "0f4616261ddd7fbe",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 Table delete",
        "query": "drop TABLE W12 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "298152fd292e73b5",
        "type": "trigger",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "8f8ba527dd2033d8"
            ],
            [
                "8da0cc3a9580ce59"
            ]
        ]
    },
    {
        "id": "d841b3e4a5ebf656",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "b5776027e58480f3"
            ]
        ]
    },
    {
        "id": "8f8ba527dd2033d8",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Post W12 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W12'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8da0cc3a9580ce59",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Post W12 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W12'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d22ced3537498795",
        "type": "ui_text",
        "z": "8b89d3508a6c98cc",
        "group": "13928d208e6d8fb5",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W12 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "1ce4b33031cfe017",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "W12 status check",
        "query": "SELECT status FROM machine_data where machine_no='W12';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "d22ced3537498795"
            ]
        ]
    },
    {
        "id": "36483d3a61598285",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "1ce4b33031cfe017"
            ]
        ]
    },
    {
        "id": "b07990a77503ec65",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "cf24455706c5dee2"
            ]
        ]
    },
    {
        "id": "3074c8868b049494",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "Initialize W12 counting",
        "func": "\nglobal.set(\"W12_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b4527eec1f8623e6",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "3074c8868b049494"
            ]
        ]
    },
    {
        "id": "e89cabfaf1a448d8",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "comes on for first time",
        "func": "if(global.get(\"W12_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W12_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "6fccccfb286394df"
            ]
        ]
    },
    {
        "id": "6fccccfb286394df",
        "type": "switch",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "2a4eac14255b7eb1"
            ]
        ]
    },
    {
        "id": "2a4eac14255b7eb1",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Post W12data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W12'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "80b16f0665156381",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Get current for W12",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W12' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "dd0ba535a3c3abaa"
            ]
        ]
    },
    {
        "id": "343540887a0f946b",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "80b16f0665156381"
            ]
        ]
    },
    {
        "id": "dd0ba535a3c3abaa",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "W12 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "4128864b1f5ad3ec"
            ]
        ]
    },
    {
        "id": "4128864b1f5ad3ec",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Post current as previous in W12",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W12'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7fe93df41fd774c5",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w12 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1d15711cf79abbf0",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "7fe93df41fd774c5"
            ]
        ]
    },
    {
        "id": "66fbca9a792f6ac2",
        "type": "delay",
        "z": "8b89d3508a6c98cc",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 700,
        "wires": [
            [
                "7829fadc9cf92ac8"
            ]
        ]
    },
    {
        "id": "a14740d976812b79",
        "type": "inject",
        "z": "8b89d3508a6c98cc",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "9ff277f71eba04b0"
            ]
        ]
    },
    {
        "id": "9ff277f71eba04b0",
        "type": "postgresql",
        "z": "8b89d3508a6c98cc",
        "name": "Get last for W12",
        "query": "SELECT * FROM W12\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "7eed3362e7642090"
            ]
        ]
    },
    {
        "id": "7eed3362e7642090",
        "type": "function",
        "z": "8b89d3508a6c98cc",
        "name": "inject last count to W12",
        "func": "\nglobal.set(\"W12\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "ef0a63a178d72238"
            ]
        ]
    },
    {
        "id": "08d69652b88b449e",
        "type": "link in",
        "z": "8b89d3508a6c98cc",
        "name": "link in 17",
        "links": [
            "e63285d065adb307"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "f46cf3a70903ae27"
            ]
        ]
    },
    {
        "id": "a5f84b03a23301d6",
        "type": "link in",
        "z": "8b89d3508a6c98cc",
        "name": "link in 40",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 365,
        "y": 660,
        "wires": [
            [
                "22ceedd851c5c294"
            ]
        ]
    },
    {
        "id": "5e2884b4e826bb98",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Manual updating of W38 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "18f3098a8909c481",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "Process W38 Information",
        "func": "var Mcount = parseInt(global.get(\"W38\")) - parseInt(global.get(\"W38_\"));\nvar npc = (global.get(\"W38_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW38\"));\nvar c_count = parseInt(global.get(\"c_W38\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW38\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 = c_count;\nglobal.set(\"c_W38\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "31cd1aa479f12b3a"
            ]
        ]
    },
    {
        "id": "5964df10eb24f47f",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "afbc3c5bc2d52d52"
            ]
        ]
    },
    {
        "id": "f8df53be894c3720",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Get Part No for W38",
        "query": "SELECT part_no FROM machine_operator where machine_no='W38' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "062e74a291c04ff0"
            ]
        ]
    },
    {
        "id": "c29099b2969d2993",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "manual Inject without reseting W38",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "f8df53be894c3720"
            ]
        ]
    },
    {
        "id": "062e74a291c04ff0",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "W38 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "39fb21432c4cc1eb"
            ]
        ]
    },
    {
        "id": "39fb21432c4cc1eb",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Get W38 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "ae2014f8c11ea3c2"
            ]
        ]
    },
    {
        "id": "ae2014f8c11ea3c2",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "Set W38 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W38_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a0f4be016d947a3a",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Post W38 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W38'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "0522ffb5ed687ec8",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W38','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f479eba244b3571b",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "inject 20 count to W38",
        "func": "var count =parseInt(global.get(\"W38\"));\nglobal.set(\"W38\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "6ef435a09510836f"
            ]
        ]
    },
    {
        "id": "6ef435a09510836f",
        "type": "mqtt out",
        "z": "229aa3c142c47a94",
        "name": "",
        "topic": "W38",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "5f56a09ef8843c12",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "manual count testing 1 for W38",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "f479eba244b3571b"
            ]
        ]
    },
    {
        "id": "acd9d8780e8ba920",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "inject 1 count to W38",
        "func": "var count =global.get(\"W38\");\nglobal.set(\"W38\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "6ef435a09510836f"
            ]
        ]
    },
    {
        "id": "5ab179d237aadd8a",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "manual count testing 2 for W38",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 880,
        "wires": [
            [
                "acd9d8780e8ba920"
            ]
        ]
    },
    {
        "id": "e1d91e0c8d33b54c",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "44ae57f35fca7fa2",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "f5184c261f664293",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "9c2d9e5ba4155473",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "cc53a57c0adc7ebc",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "afbc3c5bc2d52d52"
            ]
        ]
    },
    {
        "id": "cfc2aeedd21db379",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "afbc3c5bc2d52d52"
            ]
        ]
    },
    {
        "id": "85aad9ee9c2f552e",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Manual inject/reset W38",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "afbc3c5bc2d52d52"
            ]
        ]
    },
    {
        "id": "1272697bd4387a97",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Create entry for W38",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "0522ffb5ed687ec8"
            ]
        ]
    },
    {
        "id": "afbc3c5bc2d52d52",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "Initialize W38 counting",
        "func": "global.set(\"lW38\",0);\nglobal.set(\"c_W38\", 0);\nglobal.set(\"W38_\", global.get(\"W38\"));\nglobal.set(\"W38_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "f8df53be894c3720"
            ]
        ]
    },
    {
        "id": "83b3b5408b73290c",
        "type": "mqtt in",
        "z": "229aa3c142c47a94",
        "name": "",
        "topic": "W38",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "02e2966e60572afe",
                "522e54761f9a92a9",
                "ed7745b41489aa80",
                "ca7cf3f2da0a3bcf",
                "226e5460e8d25c37"
            ]
        ]
    },
    {
        "id": "02e2966e60572afe",
        "type": "ui_chart",
        "z": "229aa3c142c47a94",
        "name": "",
        "group": "5974f23aadc08431",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W38 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "522e54761f9a92a9",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "SET count for W38",
        "func": "global.set(\"W38\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ed7745b41489aa80",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W38' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "c8446b70cdc46a6e",
                "94992bb53e85f70b"
            ]
        ]
    },
    {
        "id": "c8446b70cdc46a6e",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "GET count for W38",
        "func": "msg.payload=global.get(\"W38\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "4277174d04c33b7d"
            ]
        ]
    },
    {
        "id": "70333298e822240f",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "c020e5819a69c5d3"
            ]
        ]
    },
    {
        "id": "4277174d04c33b7d",
        "type": "ui_text",
        "z": "229aa3c142c47a94",
        "group": "5974f23aadc08431",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W38 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "c020e5819a69c5d3",
        "type": "ui_text",
        "z": "229aa3c142c47a94",
        "group": "5974f23aadc08431",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W38-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "e96681232c78f805",
        "type": "mqtt out",
        "z": "229aa3c142c47a94",
        "name": "",
        "topic": "W38/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "8c083fcf4d58ba93",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "reset W38",
        "func": "global.set(\"W38\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "edfc54cdbeb6bd5e"
            ]
        ]
    },
    {
        "id": "edfc54cdbeb6bd5e",
        "type": "mqtt out",
        "z": "229aa3c142c47a94",
        "name": "",
        "topic": "W38",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "810bd75a610123f6",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from w38 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "e5f46765107e144c",
                "857f36f7c099194c"
            ]
        ]
    },
    {
        "id": "0b282e44da96d9be",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "W38 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "810bd75a610123f6"
            ]
        ]
    },
    {
        "id": "e5f46765107e144c",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "W38 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "ddf858a317902d70"
            ]
        ]
    },
    {
        "id": "857f36f7c099194c",
        "type": "ui_table",
        "z": "229aa3c142c47a94",
        "group": "5974f23aadc08431",
        "name": "W38 history",
        "order": 18,
        "width": 9,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ddf858a317902d70",
        "type": "ui_chart",
        "z": "229aa3c142c47a94",
        "name": "",
        "group": "5974f23aadc08431",
        "order": 17,
        "width": 15,
        "height": 12,
        "label": "W38 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "0c680bf373bef43c",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Data Schedule 2 For W38",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "0be34b1c9c48c974"
            ]
        ]
    },
    {
        "id": "958868b1f6e0eaf3",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Data Schedule 1 For W38 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "0be34b1c9c48c974"
            ]
        ]
    },
    {
        "id": "0be34b1c9c48c974",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "W38 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W38\");\n//global.set(\"machine1\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "6086e1766046d771"
            ]
        ]
    },
    {
        "id": "d9c9f6e815f02e7f",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Data Schedule 4 For W38",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "0be34b1c9c48c974"
            ]
        ]
    },
    {
        "id": "4f2a4b03e9d453e5",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Data Schedule 3 For W38",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "0be34b1c9c48c974"
            ]
        ]
    },
    {
        "id": "6086e1766046d771",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 store data",
        "query": "INSERT INTO W38(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "32877ce54099c9ea",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Create W38 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "04380f502f9b2cba"
            ]
        ]
    },
    {
        "id": "04380f502f9b2cba",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 Table",
        "query": "CREATE TABLE W38 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "94992bb53e85f70b",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "W38 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "70333298e822240f"
            ]
        ]
    },
    {
        "id": "252648abf04a9c17",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "delete W38 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "14b74cfc900e1182"
            ]
        ]
    },
    {
        "id": "14b74cfc900e1182",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 Table delete",
        "query": "drop TABLE W38 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "ca7cf3f2da0a3bcf",
        "type": "trigger",
        "z": "229aa3c142c47a94",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "3e10731b97b57c29"
            ],
            [
                "df74b3c6326fb1b8"
            ]
        ]
    },
    {
        "id": "771c428fd2fcb154",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "8c083fcf4d58ba93"
            ]
        ]
    },
    {
        "id": "3e10731b97b57c29",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Post W38 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W38'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "df74b3c6326fb1b8",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Post W38 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W38'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "853c9318ceacb0c7",
        "type": "ui_text",
        "z": "229aa3c142c47a94",
        "group": "5974f23aadc08431",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W38 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "5d3c3a7d0e4717a3",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "W38 status check",
        "query": "SELECT status FROM machine_data where machine_no='W38';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "853c9318ceacb0c7"
            ]
        ]
    },
    {
        "id": "1aef2d2fcc08ad30",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "5d3c3a7d0e4717a3"
            ]
        ]
    },
    {
        "id": "b4f0a2b76ce001f7",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "f8df53be894c3720"
            ]
        ]
    },
    {
        "id": "cb2e1ad1d4602dc6",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "Initialize W38 counting",
        "func": "\nglobal.set(\"W38_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "727410589c412d15",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "cb2e1ad1d4602dc6"
            ]
        ]
    },
    {
        "id": "226e5460e8d25c37",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "comes on for first time",
        "func": "if(global.get(\"W38_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W38_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "8d45cd51e49ef629"
            ]
        ]
    },
    {
        "id": "8d45cd51e49ef629",
        "type": "switch",
        "z": "229aa3c142c47a94",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "2dfd33e7a042d5a2"
            ]
        ]
    },
    {
        "id": "2dfd33e7a042d5a2",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Post W38 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W38'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "46ae6034aa8b0a3a",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Get current for W38",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W38' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "b105678cafc37bf8"
            ]
        ]
    },
    {
        "id": "444347dfc4246e3b",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "46ae6034aa8b0a3a"
            ]
        ]
    },
    {
        "id": "b105678cafc37bf8",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "W38 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "1266951771cf872f"
            ]
        ]
    },
    {
        "id": "1266951771cf872f",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Post current as previous in W38",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W38'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 990,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b0eb123d78325f3e",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w38 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a2132a962fde8b3c",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "b0eb123d78325f3e"
            ]
        ]
    },
    {
        "id": "31cd1aa479f12b3a",
        "type": "delay",
        "z": "229aa3c142c47a94",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 680,
        "wires": [
            [
                "a0f4be016d947a3a"
            ]
        ]
    },
    {
        "id": "f73de90e5f2feb3b",
        "type": "inject",
        "z": "229aa3c142c47a94",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "ed3b6d82bea9983b"
            ]
        ]
    },
    {
        "id": "ed3b6d82bea9983b",
        "type": "postgresql",
        "z": "229aa3c142c47a94",
        "name": "Get last for W38",
        "query": "SELECT * FROM W38\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "88a35b0e3aa61cde"
            ]
        ]
    },
    {
        "id": "88a35b0e3aa61cde",
        "type": "function",
        "z": "229aa3c142c47a94",
        "name": "inject last count to W38",
        "func": "\nglobal.set(\"W38\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 940,
        "wires": [
            [
                "6ef435a09510836f"
            ]
        ]
    },
    {
        "id": "28dbfce96c5ed61e",
        "type": "link in",
        "z": "229aa3c142c47a94",
        "name": "link in 18",
        "links": [
            "e63285d065adb307"
        ],
        "x": 85,
        "y": 540,
        "wires": [
            [
                "afbc3c5bc2d52d52"
            ]
        ]
    },
    {
        "id": "cb32cfb7c8965266",
        "type": "link in",
        "z": "229aa3c142c47a94",
        "name": "link in 41",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 375,
        "y": 660,
        "wires": [
            [
                "18f3098a8909c481"
            ]
        ]
    },
    {
        "id": "b2c17615286d9ff3",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Manual updating of W31 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "8ae3f2eb3342b209",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "Process W31 Information",
        "func": "var Mcount = parseInt(global.get(\"W31\")) - parseInt(global.get(\"W31_\"));\nvar npc = (global.get(\"W31_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW31\"));\nvar c_count = parseInt(global.get(\"c_W31\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW31\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W31\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "ef061f7b06a12aba",
                "b2aefe71d35fd00c"
            ]
        ]
    },
    {
        "id": "c62f47bca1bd3c0b",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "4f1f3f38c40b6fca"
            ]
        ]
    },
    {
        "id": "77f466d16e5d74d2",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Get Part No for W31",
        "query": "SELECT part_no FROM machine_operator where machine_no='W31' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "33ee7f87ce3f0abc"
            ]
        ]
    },
    {
        "id": "e9fbf711f7cb26b7",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "manual Inject without reseting W31",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "77f466d16e5d74d2"
            ]
        ]
    },
    {
        "id": "33ee7f87ce3f0abc",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "W31 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "5ddb273ed1299670"
            ]
        ]
    },
    {
        "id": "5ddb273ed1299670",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Get W31 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "a0bf4cbf5e10c8ed"
            ]
        ]
    },
    {
        "id": "a0bf4cbf5e10c8ed",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "Set W31 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W31_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c9cbb090e79cfa11",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Post W31 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W31'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c986f0c175e49ae2",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W31','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ee899626fca67a49",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "inject 20 count to W31",
        "func": "var count =parseInt(global.get(\"W31\"));\nglobal.set(\"W31\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "9f3ef20276f5e465"
            ]
        ]
    },
    {
        "id": "9f3ef20276f5e465",
        "type": "mqtt out",
        "z": "c24da0a76715089f",
        "name": "",
        "topic": "W31",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "1347d031f86a5aad",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "manual count testing 1 for W31",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "ee899626fca67a49"
            ]
        ]
    },
    {
        "id": "951af2ca83b9aba6",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "inject 1 count to W31",
        "func": "var count =global.get(\"W31\");\nglobal.set(\"W31\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 900,
        "wires": [
            [
                "9f3ef20276f5e465"
            ]
        ]
    },
    {
        "id": "875dc31f014c093e",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "manual count testing 2 for W31",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 900,
        "wires": [
            [
                "951af2ca83b9aba6"
            ]
        ]
    },
    {
        "id": "c5a606144f4857cb",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "83f1d0a11bebb96b",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "cb855ba9da995e7f",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "066f3cb6d96820ee",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "1eb1e6debeb112f9",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "4f1f3f38c40b6fca"
            ]
        ]
    },
    {
        "id": "cb9e6661924fe361",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "4f1f3f38c40b6fca"
            ]
        ]
    },
    {
        "id": "5684f1e5a9f80dc8",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Manual inject/reset W31",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "4f1f3f38c40b6fca"
            ]
        ]
    },
    {
        "id": "b3f555135e6370ca",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Create entry for W31",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "c986f0c175e49ae2"
            ]
        ]
    },
    {
        "id": "4f1f3f38c40b6fca",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "Initialize W31 counting",
        "func": "global.set(\"lW31\",0);\nglobal.set(\"c_W31\", 0);\nglobal.set(\"W31_\", global.get(\"W31\"));\nglobal.set(\"W31_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "77f466d16e5d74d2"
            ]
        ]
    },
    {
        "id": "11380b0e67bb8ce6",
        "type": "mqtt in",
        "z": "c24da0a76715089f",
        "name": "",
        "topic": "W31",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "adb221c30c3f5b40",
                "f2127aad0dd83653",
                "5ea5098939c8a7c9",
                "54be605f4ca6ce7e",
                "b90421a3128832a9"
            ]
        ]
    },
    {
        "id": "adb221c30c3f5b40",
        "type": "ui_chart",
        "z": "c24da0a76715089f",
        "name": "",
        "group": "ef13138879730507",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W31 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f2127aad0dd83653",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "SET count for W31",
        "func": "global.set(\"W31\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5ea5098939c8a7c9",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W31' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "81a7e515eae122b4",
                "84bd8f00ef3d4bef"
            ]
        ]
    },
    {
        "id": "81a7e515eae122b4",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "GET count for W31",
        "func": "msg.payload=global.get(\"W31\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "3e2ae8a32fe4ecc4"
            ]
        ]
    },
    {
        "id": "77984f33723f9f10",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "5a418739616a461d"
            ]
        ]
    },
    {
        "id": "3e2ae8a32fe4ecc4",
        "type": "ui_text",
        "z": "c24da0a76715089f",
        "group": "ef13138879730507",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W31 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "5a418739616a461d",
        "type": "ui_text",
        "z": "c24da0a76715089f",
        "group": "ef13138879730507",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W31-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "c2213bcfdc74cc01",
        "type": "mqtt out",
        "z": "c24da0a76715089f",
        "name": "",
        "topic": "W31/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "461afec1e48b4bdf",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "reset W31",
        "func": "global.set(\"W31\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "63eee15dec910337"
            ]
        ]
    },
    {
        "id": "63eee15dec910337",
        "type": "mqtt out",
        "z": "c24da0a76715089f",
        "name": "",
        "topic": "W31",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7eb231c3db9546e1",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from W31 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "4ee9e66c89158d89",
                "b620af8084454b75"
            ]
        ]
    },
    {
        "id": "736a53eff35e692e",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "W31 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "7eb231c3db9546e1"
            ]
        ]
    },
    {
        "id": "4ee9e66c89158d89",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "W31 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "2f17ae8995a647b0"
            ]
        ]
    },
    {
        "id": "b620af8084454b75",
        "type": "ui_table",
        "z": "c24da0a76715089f",
        "group": "ef13138879730507",
        "name": "W31 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "2f17ae8995a647b0",
        "type": "ui_chart",
        "z": "c24da0a76715089f",
        "name": "",
        "group": "ef13138879730507",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W31 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0172d41e59cd7c",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Data Schedule 2 For W31",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "adbc919f62e666b7"
            ]
        ]
    },
    {
        "id": "6fb2e811c96ab46a",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Data Schedule 1 For W31 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "adbc919f62e666b7"
            ]
        ]
    },
    {
        "id": "adbc919f62e666b7",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "W31 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W31\");\nglobal.set(\"W31\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "e71ae3bb5dee6d18"
            ]
        ]
    },
    {
        "id": "a7809861e53cc8ed",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Data Schedule 4 For W31",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "adbc919f62e666b7"
            ]
        ]
    },
    {
        "id": "b07b8f68a4011a4f",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Data Schedule 3 For W31",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "adbc919f62e666b7"
            ]
        ]
    },
    {
        "id": "e71ae3bb5dee6d18",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 store data",
        "query": "INSERT INTO W31(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "4fa5c658cf27ca75",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Create W31 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "e729219c38a9bf38"
            ]
        ]
    },
    {
        "id": "e729219c38a9bf38",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 Table",
        "query": "CREATE TABLE W31 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "84bd8f00ef3d4bef",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "W31 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "77984f33723f9f10"
            ]
        ]
    },
    {
        "id": "79c7ef48a80a2454",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "delete W31 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "3a57f4ad43ebd8c7"
            ]
        ]
    },
    {
        "id": "3a57f4ad43ebd8c7",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 Table delete",
        "query": "drop TABLE W31 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "54be605f4ca6ce7e",
        "type": "trigger",
        "z": "c24da0a76715089f",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "e830e13fd1a1a08b"
            ],
            [
                "c9b6ff9246819af6"
            ]
        ]
    },
    {
        "id": "36a6afa7c7b28a9f",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "461afec1e48b4bdf"
            ]
        ]
    },
    {
        "id": "e830e13fd1a1a08b",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Post W31 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W31'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c9b6ff9246819af6",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Post W31 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W31'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "015e6fc111b3d3a9",
        "type": "ui_text",
        "z": "c24da0a76715089f",
        "group": "ef13138879730507",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W31 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "c78a815c7ebbe76c",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "W31 status check",
        "query": "SELECT status FROM machine_data where machine_no='W31';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "015e6fc111b3d3a9"
            ]
        ]
    },
    {
        "id": "20f730744b538eea",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "c78a815c7ebbe76c"
            ]
        ]
    },
    {
        "id": "297bcb62d20b8698",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "77f466d16e5d74d2"
            ]
        ]
    },
    {
        "id": "ef061f7b06a12aba",
        "type": "debug",
        "z": "c24da0a76715089f",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "67fca7ef3fc3ed96",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "Initialize W31 counting",
        "func": "\nglobal.set(\"W31_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "71215c4647394583",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "67fca7ef3fc3ed96"
            ]
        ]
    },
    {
        "id": "b90421a3128832a9",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "comes on for first time",
        "func": "if(global.get(\"W31_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W31_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "eba314bd2031e9aa"
            ]
        ]
    },
    {
        "id": "eba314bd2031e9aa",
        "type": "switch",
        "z": "c24da0a76715089f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "20f002763ab2af25"
            ]
        ]
    },
    {
        "id": "20f002763ab2af25",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Post W31 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W31'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "eb199862c7032c68",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Get current for W31",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W31' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "e79f9c8cd5aab742"
            ]
        ]
    },
    {
        "id": "9b881927ada62105",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "eb199862c7032c68"
            ]
        ]
    },
    {
        "id": "e79f9c8cd5aab742",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "W31 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "f8dd386525fad893"
            ]
        ]
    },
    {
        "id": "f8dd386525fad893",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Post current as previous in W31",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W31'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            [
                "4af9d4b791d61b89"
            ]
        ]
    },
    {
        "id": "c5e3fd05f6d29bd6",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w31 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1fa6e12fab42f561",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "c5e3fd05f6d29bd6"
            ]
        ]
    },
    {
        "id": "b2aefe71d35fd00c",
        "type": "delay",
        "z": "c24da0a76715089f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "c9cbb090e79cfa11"
            ]
        ]
    },
    {
        "id": "904349c7d2fe6f58",
        "type": "inject",
        "z": "c24da0a76715089f",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "d4fcfb7132bdded9"
            ]
        ]
    },
    {
        "id": "d4fcfb7132bdded9",
        "type": "postgresql",
        "z": "c24da0a76715089f",
        "name": "Get last for W31",
        "query": "SELECT * FROM W31\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "79421aac26020770"
            ]
        ]
    },
    {
        "id": "79421aac26020770",
        "type": "function",
        "z": "c24da0a76715089f",
        "name": "inject last count to W31",
        "func": "\nglobal.set(\"W31\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 940,
        "wires": [
            [
                "9f3ef20276f5e465"
            ]
        ]
    },
    {
        "id": "4af9d4b791d61b89",
        "type": "debug",
        "z": "c24da0a76715089f",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "d80ff545fbaae26e",
        "type": "link in",
        "z": "c24da0a76715089f",
        "name": "link in 19",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "4f1f3f38c40b6fca"
            ]
        ]
    },
    {
        "id": "f040136726a86fc9",
        "type": "link in",
        "z": "c24da0a76715089f",
        "name": "link in 42",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "8ae3f2eb3342b209"
            ]
        ]
    },
    {
        "id": "dc2390629f1553f6",
        "type": "postgresql",
        "z": "f974ef47d19745f8",
        "name": "Hourly Table",
        "query": "CREATE TABLE Hourly_report (\n    sno Serial PRIMARY KEY, \n\tdateandtime timestamp \n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 430,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "dca534382affe770",
        "type": "inject",
        "z": "f974ef47d19745f8",
        "name": "Create hourly History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "dc2390629f1553f6"
            ]
        ]
    },
    {
        "id": "0af912a730110284",
        "type": "inject",
        "z": "f974ef47d19745f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "7acea2041a174f40"
            ]
        ]
    },
    {
        "id": "50e4a91b53258764",
        "type": "postgresql",
        "z": "f974ef47d19745f8",
        "name": "store hourly data",
        "query": "INSERT INTO hourly_report(dateandtime,{{msg.payload1}})\nVALUES\n    (now(),{{msg.payload2}});",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "a42b2209ced29aeb"
            ]
        ]
    },
    {
        "id": "b5e74d06e479929e",
        "type": "delay",
        "z": "f974ef47d19745f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7acea2041a174f40",
        "type": "postgresql",
        "z": "f974ef47d19745f8",
        "name": "W16 OPERATOR Id",
        "query": "select machine_no,current_count,previous_hour_count from machine_data;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "12859ab223c574a6",
                "4a8a0e9e4db56e57"
            ]
        ]
    },
    {
        "id": "12859ab223c574a6",
        "type": "debug",
        "z": "f974ef47d19745f8",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "4a8a0e9e4db56e57",
        "type": "function",
        "z": "f974ef47d19745f8",
        "name": "function 1",
        "func": "var all_columns='';\nvar all_values='';\nfor(let i=0;i<msg.payload.length;i++){  \n    if(i<msg.payload.length-1){\n        all_columns += msg.payload[i].machine_no+',';\n        if (msg.payload[i].current_count!='NaN'){\n            var previous_hour_count = msg.payload[i].previous_hour_count;\n            if (previous_hour_count=='NaN'){\n                previous_hour_count='0';\n            }\n            all_values += (msg.payload[i].current_count-previous_hour_count)+',';}\n        else {\n            all_values +='0,';\n        }\n    }\n    else {\n        all_columns += msg.payload[i].machine_no ;\n        if (msg.payload[i].current_count != 'NaN') {\n            var previous_hour_count = msg.payload[i].previous_hour_count;\n            if (previous_hour_count == 'NaN') {\n                previous_hour_count = '0';\n            }\n            all_values += msg.payload[i].current_count-previous_hour_count;\n        }\n        else { \n            all_values += '0'; \n        }\n    }\n}\nmsg.payload1=all_columns;\nmsg.payload2=all_values;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 300,
        "wires": [
            [
                "50e4a91b53258764",
                "3a2414d67465f378",
                "41999bdb7be4d50e",
                "fca7af565ea0933d"
            ]
        ]
    },
    {
        "id": "3a2414d67465f378",
        "type": "debug",
        "z": "f974ef47d19745f8",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload1",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "41999bdb7be4d50e",
        "type": "debug",
        "z": "f974ef47d19745f8",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload2",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 420,
        "wires": []
    },
    {
        "id": "a42b2209ced29aeb",
        "type": "debug",
        "z": "f974ef47d19745f8",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 280,
        "wires": []
    },
    {
        "id": "fca7af565ea0933d",
        "type": "postgresql",
        "z": "f974ef47d19745f8",
        "name": "current count added to previous hour count",
        "query": "UPDATE machine_data\nSET\tprevious_hour_count=current_count\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "7469b5513e3e5e50",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Manual updating of W22 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "c2ef3772387de194",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "Process W22 Information",
        "func": "var Mcount = parseInt(global.get(\"W22\")) - parseInt(global.get(\"W22_\"));\nvar npc = (global.get(\"W22_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW22\"));\nvar c_count = parseInt(global.get(\"c_W22\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW22\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W22\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "b0ec2b455ea7b12c",
                "f3fc218ee7e666a4"
            ]
        ]
    },
    {
        "id": "b4f8f57a08122197",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "c14633a7a4565131"
            ]
        ]
    },
    {
        "id": "db3ad91763534096",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Get Part No for W22",
        "query": "SELECT part_no FROM machine_operator where machine_no='W22' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "ec56287f86b3fdc6"
            ]
        ]
    },
    {
        "id": "20c1deb57e576c33",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "manual Inject without reseting W22",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "db3ad91763534096"
            ]
        ]
    },
    {
        "id": "ec56287f86b3fdc6",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "W22 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "c3b8d509af87a26f"
            ]
        ]
    },
    {
        "id": "c3b8d509af87a26f",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Get W22 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "a63dae0ebf51caa9"
            ]
        ]
    },
    {
        "id": "a63dae0ebf51caa9",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "Set W22 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W22_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "348d3c36b6270d3a",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Post W22 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W22'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "2180b80e9a4c60ce",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W22','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "688fdf4deb926279",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "inject 20 count to W22",
        "func": "var count =parseInt(global.get(\"W22\"));\nglobal.set(\"W22\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "d644b08cce19576a"
            ]
        ]
    },
    {
        "id": "d644b08cce19576a",
        "type": "mqtt out",
        "z": "58a50fa656eaee7f",
        "name": "",
        "topic": "W22",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 770,
        "y": 860,
        "wires": []
    },
    {
        "id": "a44a666391f5eaf0",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "manual count testing 1 for W22",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "688fdf4deb926279"
            ]
        ]
    },
    {
        "id": "2fc6a89b7e66289b",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "inject 1 count to W22",
        "func": "var count =global.get(\"W22\");\nglobal.set(\"W22\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "d644b08cce19576a"
            ]
        ]
    },
    {
        "id": "6091b07c0dd34e08",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "manual count testing 2 for W22",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 880,
        "wires": [
            [
                "2fc6a89b7e66289b"
            ]
        ]
    },
    {
        "id": "af21853d49e641d0",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "40373701994dad58",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "614af971cbdf5e9a",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "044d919ed3ed341a",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "1942f305f04552cf",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "c14633a7a4565131"
            ]
        ]
    },
    {
        "id": "ba5a7b73b2d48a46",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "c14633a7a4565131"
            ]
        ]
    },
    {
        "id": "0a689c126a53d994",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Manual inject/reset W22",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "c14633a7a4565131"
            ]
        ]
    },
    {
        "id": "4ec910bc69b13b28",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Create entry for W22",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "2180b80e9a4c60ce"
            ]
        ]
    },
    {
        "id": "c14633a7a4565131",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "Initialize W22 counting",
        "func": "global.set(\"lW22\",0);\nglobal.set(\"c_W22\", 0);\nglobal.set(\"W22_\", global.get(\"W22\"));\nglobal.set(\"W22_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "db3ad91763534096"
            ]
        ]
    },
    {
        "id": "c1dd3c961079dc6e",
        "type": "mqtt in",
        "z": "58a50fa656eaee7f",
        "name": "",
        "topic": "W22",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "1b6470d5bbc22bb6",
                "2d4077494a3204ef",
                "01c49b94f8343d8a",
                "33dcf8a311a6f170",
                "6a82cb79c6925513"
            ]
        ]
    },
    {
        "id": "1b6470d5bbc22bb6",
        "type": "ui_chart",
        "z": "58a50fa656eaee7f",
        "name": "",
        "group": "0955bd53daa08def",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W22 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2d4077494a3204ef",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "SET count for W22",
        "func": "global.set(\"W22\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "01c49b94f8343d8a",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W22' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "e746155a679e8418",
                "69bd38ce491a9f0c"
            ]
        ]
    },
    {
        "id": "e746155a679e8418",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "GET count for W22",
        "func": "msg.payload=global.get(\"W22\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "49303cdf37a115cc"
            ]
        ]
    },
    {
        "id": "3e48f5ea7d8b2aa4",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "9b26223acca845c8"
            ]
        ]
    },
    {
        "id": "49303cdf37a115cc",
        "type": "ui_text",
        "z": "58a50fa656eaee7f",
        "group": "0955bd53daa08def",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W22 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "9b26223acca845c8",
        "type": "ui_text",
        "z": "58a50fa656eaee7f",
        "group": "0955bd53daa08def",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W22-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "c8a5ad06c73a5d43",
        "type": "mqtt out",
        "z": "58a50fa656eaee7f",
        "name": "",
        "topic": "W22/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "de6696a2308c1e81",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "reset W22",
        "func": "global.set(\"W22\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "ed50eb90f25b6c2e"
            ]
        ]
    },
    {
        "id": "ed50eb90f25b6c2e",
        "type": "mqtt out",
        "z": "58a50fa656eaee7f",
        "name": "",
        "topic": "W22",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c353051da852eaba",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from W22 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "a372baaca35c29ae",
                "c422756cb1cd733d"
            ]
        ]
    },
    {
        "id": "dadde0063101bb78",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "W22 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "c353051da852eaba"
            ]
        ]
    },
    {
        "id": "a372baaca35c29ae",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "W22 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "b2845cee03a178d5"
            ]
        ]
    },
    {
        "id": "c422756cb1cd733d",
        "type": "ui_table",
        "z": "58a50fa656eaee7f",
        "group": "0955bd53daa08def",
        "name": "W22 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b2845cee03a178d5",
        "type": "ui_chart",
        "z": "58a50fa656eaee7f",
        "name": "",
        "group": "0955bd53daa08def",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W22 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "444bdd64502c3cf4",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Data Schedule 2 For W22",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "9ea3041c8e5f3b13"
            ]
        ]
    },
    {
        "id": "ba5b3ff84cdbf50d",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Data Schedule 1 For W22 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "9ea3041c8e5f3b13"
            ]
        ]
    },
    {
        "id": "9ea3041c8e5f3b13",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "W22 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W22\");\nglobal.set(\"W22\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "0944e122d05c1c87"
            ]
        ]
    },
    {
        "id": "ef86394c7e9da527",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Data Schedule 4 For W22",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "9ea3041c8e5f3b13"
            ]
        ]
    },
    {
        "id": "e8190fc5756f9631",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Data Schedule 3 For W22",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "9ea3041c8e5f3b13"
            ]
        ]
    },
    {
        "id": "0944e122d05c1c87",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 store data",
        "query": "INSERT INTO W22(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "7bc3a09da0a816d7",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Create W22 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "7eca768bc1d1c8f8"
            ]
        ]
    },
    {
        "id": "7eca768bc1d1c8f8",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 Table",
        "query": "CREATE TABLE W22 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "69bd38ce491a9f0c",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "W22 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "3e48f5ea7d8b2aa4"
            ]
        ]
    },
    {
        "id": "9f35f9496c211754",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "delete W22 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "a39e7dde74f66946"
            ]
        ]
    },
    {
        "id": "a39e7dde74f66946",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 Table delete",
        "query": "drop TABLE W22 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "33dcf8a311a6f170",
        "type": "trigger",
        "z": "58a50fa656eaee7f",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "14c4d8856463dd43"
            ],
            [
                "38717f9910fc475f"
            ]
        ]
    },
    {
        "id": "cf77e6630a589c32",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "de6696a2308c1e81"
            ]
        ]
    },
    {
        "id": "14c4d8856463dd43",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Post W22 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W22'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "38717f9910fc475f",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Post W22 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W22'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c5b01103fa9c30bb",
        "type": "ui_text",
        "z": "58a50fa656eaee7f",
        "group": "0955bd53daa08def",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W22 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "7e963387f9b4cbc2",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "W22 status check",
        "query": "SELECT status FROM machine_data where machine_no='W22';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "c5b01103fa9c30bb"
            ]
        ]
    },
    {
        "id": "37d823e80d58df77",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "7e963387f9b4cbc2"
            ]
        ]
    },
    {
        "id": "b0f67b40b1c186b6",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "db3ad91763534096"
            ]
        ]
    },
    {
        "id": "b0ec2b455ea7b12c",
        "type": "debug",
        "z": "58a50fa656eaee7f",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "129dce63477e9d14",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "Initialize W22 counting",
        "func": "\nglobal.set(\"W22_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f050308477969be8",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "129dce63477e9d14"
            ]
        ]
    },
    {
        "id": "6a82cb79c6925513",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "comes on for first time",
        "func": "if(global.get(\"W22_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W22_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "0d7dfc1960a6183c"
            ]
        ]
    },
    {
        "id": "0d7dfc1960a6183c",
        "type": "switch",
        "z": "58a50fa656eaee7f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "fda1f81e9572703b"
            ]
        ]
    },
    {
        "id": "fda1f81e9572703b",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Post W22 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W22'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "83b322fe9787c8fc",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Get current for W22",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W22' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "da081be40dd9b42e"
            ]
        ]
    },
    {
        "id": "4c08ac120985c54e",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "83b322fe9787c8fc"
            ]
        ]
    },
    {
        "id": "da081be40dd9b42e",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "W22 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "c073f22e50665f7d"
            ]
        ]
    },
    {
        "id": "c073f22e50665f7d",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Post current as previous in W22",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W22'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "782a30f491245ab4",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w22 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "edac6947f3010fb1",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "782a30f491245ab4"
            ]
        ]
    },
    {
        "id": "f3fc218ee7e666a4",
        "type": "delay",
        "z": "58a50fa656eaee7f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 700,
        "wires": [
            [
                "348d3c36b6270d3a"
            ]
        ]
    },
    {
        "id": "c581e9fc65d0ce88",
        "type": "inject",
        "z": "58a50fa656eaee7f",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 920,
        "wires": [
            [
                "2b689186df58f831"
            ]
        ]
    },
    {
        "id": "2b689186df58f831",
        "type": "postgresql",
        "z": "58a50fa656eaee7f",
        "name": "Get last for W22",
        "query": "SELECT * FROM W22\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 300,
        "y": 920,
        "wires": [
            [
                "5eb18cac39503cdb"
            ]
        ]
    },
    {
        "id": "5eb18cac39503cdb",
        "type": "function",
        "z": "58a50fa656eaee7f",
        "name": "inject last count to W22",
        "func": "\nglobal.set(\"W22\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 940,
        "wires": [
            [
                "d644b08cce19576a"
            ]
        ]
    },
    {
        "id": "9aa9db68902874c4",
        "type": "link in",
        "z": "58a50fa656eaee7f",
        "name": "link in 20",
        "links": [
            "e63285d065adb307"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "c14633a7a4565131"
            ]
        ]
    },
    {
        "id": "58285c35dca3dd71",
        "type": "link in",
        "z": "58a50fa656eaee7f",
        "name": "link in 43",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "c2ef3772387de194"
            ]
        ]
    },
    {
        "id": "fefe974e6896e73e",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Manual updating of W27 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "97945a7cf49f2316",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "Process W27 Information",
        "func": "var Mcount = parseInt(global.get(\"W27\")) - parseInt(global.get(\"W27_\"));\nvar npc = (global.get(\"W27_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW27\"));\nvar c_count = parseInt(global.get(\"c_W27\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW27\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W27\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "85ea0bb2f9b38b1e",
                "3a4fe3f1b36c32e1"
            ]
        ]
    },
    {
        "id": "5bdf1701ba1af398",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "ea2a7cd3e6487b5d"
            ]
        ]
    },
    {
        "id": "e67104d0174f1b93",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Get Part No for W27",
        "query": "SELECT part_no FROM machine_operator where machine_no='W27' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "86d2f205a782c445"
            ]
        ]
    },
    {
        "id": "5efc2e59fd156eae",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "manual Inject without reseting W27",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "e67104d0174f1b93"
            ]
        ]
    },
    {
        "id": "86d2f205a782c445",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "W27 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "113f98b3ba7828f1"
            ]
        ]
    },
    {
        "id": "113f98b3ba7828f1",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Get W27 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "5a1022ed7f0aa0b1"
            ]
        ]
    },
    {
        "id": "5a1022ed7f0aa0b1",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "Set W27 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W27_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8b4fd4df786a01a3",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Post W27 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W27'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1080,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "86305593aac894e3",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W27','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "a6240c56b551a6b0",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "inject 20 count to W27",
        "func": "var count =parseInt(global.get(\"W27\"));\nglobal.set(\"W27\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "595cc4a0ae231870"
            ]
        ]
    },
    {
        "id": "595cc4a0ae231870",
        "type": "mqtt out",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "topic": "W27",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "f629aa4840ef09b9",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "manual count testing 1 for W27",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "a6240c56b551a6b0"
            ]
        ]
    },
    {
        "id": "7775b3c0c535c8a1",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "inject 1 count to W27",
        "func": "var count =global.get(\"W27\");\nglobal.set(\"W27\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "595cc4a0ae231870"
            ]
        ]
    },
    {
        "id": "583f7c4321e590c7",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "manual count testing 2 for W27",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "7775b3c0c535c8a1"
            ]
        ]
    },
    {
        "id": "5d44f1e350c8e346",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "730e9dd410be437c",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "802a29152150d8a0",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "e08e1c38db9ac7ba",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "697c7e17d8ffe778",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "ea2a7cd3e6487b5d"
            ]
        ]
    },
    {
        "id": "90affc01e98dc7ee",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "ea2a7cd3e6487b5d"
            ]
        ]
    },
    {
        "id": "eeca8ea227102aca",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Manual inject/reset W27",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "ea2a7cd3e6487b5d"
            ]
        ]
    },
    {
        "id": "69a0af43345e2206",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Create entry for W27",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "86305593aac894e3"
            ]
        ]
    },
    {
        "id": "ea2a7cd3e6487b5d",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "Initialize W27 counting",
        "func": "global.set(\"lW27\",0);\nglobal.set(\"c_W27\", 0);\nglobal.set(\"W27_\", global.get(\"W27\"));\nglobal.set(\"W27_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "e67104d0174f1b93"
            ]
        ]
    },
    {
        "id": "b45ef437f2ae1ed4",
        "type": "mqtt in",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "topic": "W27",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "f7305b2f3b865584",
                "130edfaba39c12b6",
                "4eb9de07a42a0829",
                "7c169910fd23e7a1",
                "9678576d9db1e6e8"
            ]
        ]
    },
    {
        "id": "f7305b2f3b865584",
        "type": "ui_chart",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "group": "ab8145926718add8",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W27 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "130edfaba39c12b6",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "SET count for W27",
        "func": "global.set(\"W27\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4eb9de07a42a0829",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W27' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "cb2c077675b05852",
                "ba0a4043e1264665"
            ]
        ]
    },
    {
        "id": "cb2c077675b05852",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "GET count for W27",
        "func": "msg.payload=global.get(\"W27\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "3c40575cb6fc2248"
            ]
        ]
    },
    {
        "id": "989de4d97a886787",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "d7bdc6e7267ec92c"
            ]
        ]
    },
    {
        "id": "3c40575cb6fc2248",
        "type": "ui_text",
        "z": "c9d71bbc66a9f079",
        "group": "ab8145926718add8",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W27 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "d7bdc6e7267ec92c",
        "type": "ui_text",
        "z": "c9d71bbc66a9f079",
        "group": "ab8145926718add8",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W27-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "7bc7ea0e25d34ee2",
        "type": "mqtt out",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "topic": "W27/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "4d55a6fd33f892d0",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "reset W27",
        "func": "global.set(\"W27\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "f067d25f6d6469c0"
            ]
        ]
    },
    {
        "id": "f067d25f6d6469c0",
        "type": "mqtt out",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "topic": "W27",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e5cc5745e464ba9b",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from W27 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "c9918201dd2beb88",
                "afab4eab7efa66f1"
            ]
        ]
    },
    {
        "id": "0c79297b9af2eafc",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "e5cc5745e464ba9b"
            ]
        ]
    },
    {
        "id": "c9918201dd2beb88",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "b05b6c19c28758f0"
            ]
        ]
    },
    {
        "id": "afab4eab7efa66f1",
        "type": "ui_table",
        "z": "c9d71bbc66a9f079",
        "group": "ab8145926718add8",
        "name": "W27 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b05b6c19c28758f0",
        "type": "ui_chart",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "group": "ab8145926718add8",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W27 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "23b6cd67ecc9801f",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Data Schedule 2 For W27",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "a4023eeafd8ff314"
            ]
        ]
    },
    {
        "id": "64257d8996f8bdaa",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Data Schedule 1 For W27 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "a4023eeafd8ff314"
            ]
        ]
    },
    {
        "id": "a4023eeafd8ff314",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "W27 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W27\");\nglobal.set(\"W27\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "9d3c5777c370f8dd"
            ]
        ]
    },
    {
        "id": "4f94513e13b3631f",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Data Schedule 4 For W27",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "a4023eeafd8ff314"
            ]
        ]
    },
    {
        "id": "4af6270337dc0452",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Data Schedule 3 For W27",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "a4023eeafd8ff314"
            ]
        ]
    },
    {
        "id": "9d3c5777c370f8dd",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 store data",
        "query": "INSERT INTO W27(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "844551ade8f1be0f",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Create W27 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "0d5231b20ebbaa0b"
            ]
        ]
    },
    {
        "id": "0d5231b20ebbaa0b",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Table",
        "query": "CREATE TABLE W27 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ba0a4043e1264665",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "W27 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "989de4d97a886787"
            ]
        ]
    },
    {
        "id": "d29a2d23b3fb4373",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "delete W27 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "6b12be6abd74df84"
            ]
        ]
    },
    {
        "id": "6b12be6abd74df84",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 Table delete",
        "query": "drop TABLE W27 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "7c169910fd23e7a1",
        "type": "trigger",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "45861c9d1965432b"
            ],
            [
                "1e51f2add5c1e196"
            ]
        ]
    },
    {
        "id": "aec91b94cc922067",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "4d55a6fd33f892d0"
            ]
        ]
    },
    {
        "id": "45861c9d1965432b",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Post W27 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W27'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1e51f2add5c1e196",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Post W27 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W27'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "20fac2b500791526",
        "type": "ui_text",
        "z": "c9d71bbc66a9f079",
        "group": "ab8145926718add8",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W27 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "9cb372a912953b40",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "W27 status check",
        "query": "SELECT status FROM machine_data where machine_no='W27';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "20fac2b500791526"
            ]
        ]
    },
    {
        "id": "83c9225b5f9b6d76",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "9cb372a912953b40"
            ]
        ]
    },
    {
        "id": "c28a56a27817be94",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "e67104d0174f1b93"
            ]
        ]
    },
    {
        "id": "85ea0bb2f9b38b1e",
        "type": "debug",
        "z": "c9d71bbc66a9f079",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "b25696ea9be2189b",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "Initialize W27 counting",
        "func": "\nglobal.set(\"W27_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1a4788c86d93fb16",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "b25696ea9be2189b"
            ]
        ]
    },
    {
        "id": "9678576d9db1e6e8",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "comes on for first time",
        "func": "if(global.get(\"W27_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W27_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "73df8da569d263bb"
            ]
        ]
    },
    {
        "id": "73df8da569d263bb",
        "type": "switch",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "9f8de4c0fe51e841"
            ]
        ]
    },
    {
        "id": "9f8de4c0fe51e841",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Post W27 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W27'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "07245fa93ea0d30d",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Get current for W27",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W27' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "ae0a7baf666a69a3"
            ]
        ]
    },
    {
        "id": "af115f5e7db8fdbf",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "07245fa93ea0d30d"
            ]
        ]
    },
    {
        "id": "ae0a7baf666a69a3",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "W27 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "fb723066cc323f4f"
            ]
        ]
    },
    {
        "id": "fb723066cc323f4f",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Post current as previous in W29",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W27'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "fccfaf39df65ebcd",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w27 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6003daa6ccfd1316",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "fccfaf39df65ebcd"
            ]
        ]
    },
    {
        "id": "3a4fe3f1b36c32e1",
        "type": "delay",
        "z": "c9d71bbc66a9f079",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "8b4fd4df786a01a3"
            ]
        ]
    },
    {
        "id": "324fe511fbd90393",
        "type": "inject",
        "z": "c9d71bbc66a9f079",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "f823559c4f431aa3"
            ]
        ]
    },
    {
        "id": "f823559c4f431aa3",
        "type": "postgresql",
        "z": "c9d71bbc66a9f079",
        "name": "Get last for W27",
        "query": "SELECT * FROM W27\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "d642f51e9e84a448"
            ]
        ]
    },
    {
        "id": "d642f51e9e84a448",
        "type": "function",
        "z": "c9d71bbc66a9f079",
        "name": "inject last count to W27",
        "func": "\nglobal.set(\"W27\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 940,
        "wires": [
            [
                "595cc4a0ae231870"
            ]
        ]
    },
    {
        "id": "518bc5a3d78384b7",
        "type": "link in",
        "z": "c9d71bbc66a9f079",
        "name": "link in 21",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "ea2a7cd3e6487b5d"
            ]
        ]
    },
    {
        "id": "eb7bdabb1d5dd006",
        "type": "link in",
        "z": "c9d71bbc66a9f079",
        "name": "link in 44",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 395,
        "y": 660,
        "wires": [
            [
                "97945a7cf49f2316"
            ]
        ]
    },
    {
        "id": "f1a3cef56a07f6e4",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Manual updating of W3 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "6365fc39de2ac7f6",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "Process W3 Information",
        "func": "var Mcount = parseInt(global.get(\"W3\")) - parseInt(global.get(\"W3_\"));\nvar npc = (global.get(\"W3_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW3\"));\nvar c_count = parseInt(global.get(\"c_W3\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW3\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W3\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "9abe53155b44f794",
                "7026024cf4f44587"
            ]
        ]
    },
    {
        "id": "7d5cccff5b135f29",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "105cc803d1087972"
            ]
        ]
    },
    {
        "id": "3f1040850bf8c39a",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Get Part No for W3",
        "query": "SELECT part_no FROM machine_operator where machine_no='W3' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "8905fce6f4ed34d8"
            ]
        ]
    },
    {
        "id": "ddd0f03bab457e79",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "manual Inject without reseting W3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "3f1040850bf8c39a"
            ]
        ]
    },
    {
        "id": "8905fce6f4ed34d8",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "W3 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "ac4e643b41bcae08"
            ]
        ]
    },
    {
        "id": "ac4e643b41bcae08",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Get W3 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "bbcaaddae6482ef9"
            ]
        ]
    },
    {
        "id": "bbcaaddae6482ef9",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "Set W3 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W3_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0c1c3367aacf4406",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Post W3 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W3'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "854fed5e150b047d",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W3','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b9d25eacff19a708",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "inject 20 count to W3",
        "func": "var count =parseInt(global.get(\"W3\"));\nglobal.set(\"W3\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "aaa2207b674189ea"
            ]
        ]
    },
    {
        "id": "aaa2207b674189ea",
        "type": "mqtt out",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "topic": "W3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 810,
        "y": 840,
        "wires": []
    },
    {
        "id": "396ba472ddd47ff1",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "manual count testing 1 for W3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "b9d25eacff19a708"
            ]
        ]
    },
    {
        "id": "8d600b25c3a33d5f",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "inject 1 count to W3",
        "func": "var count =global.get(\"W3\");\nglobal.set(\"W3\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 880,
        "wires": [
            [
                "aaa2207b674189ea"
            ]
        ]
    },
    {
        "id": "427b75757988ad81",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "manual count testing 2 for W3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 880,
        "wires": [
            [
                "8d600b25c3a33d5f"
            ]
        ]
    },
    {
        "id": "2e3ea527f2fa8cf7",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "c033126dd26e3fe1",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "32591fd5406b17e0",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "a76fbfdfba3a2caf",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "b6011a60ec0eacc0",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "105cc803d1087972"
            ]
        ]
    },
    {
        "id": "453cd3946013439c",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "105cc803d1087972"
            ]
        ]
    },
    {
        "id": "14bf780027f058a0",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Manual inject/reset W3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "105cc803d1087972"
            ]
        ]
    },
    {
        "id": "b3f565f9ee963b5a",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Create entry for W3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "854fed5e150b047d"
            ]
        ]
    },
    {
        "id": "105cc803d1087972",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "Initialize W3 counting",
        "func": "global.set(\"lW3\",0);\nglobal.set(\"c_W3\", 0);\nglobal.set(\"W3_\", global.get(\"W3\"));\nglobal.set(\"W3_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "3f1040850bf8c39a"
            ]
        ]
    },
    {
        "id": "377e2614ae19479b",
        "type": "mqtt in",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "topic": "W3",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "338b08a78310e70d",
                "9093993ef5bb76b3",
                "66b722d310d63c18",
                "5c56eb75f3fef6f3",
                "fb2a3796dfcb7ca0"
            ]
        ]
    },
    {
        "id": "338b08a78310e70d",
        "type": "ui_chart",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "group": "a81c2c5f1faf946d",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W3 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9093993ef5bb76b3",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "SET count for W3",
        "func": "global.set(\"W3\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "66b722d310d63c18",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W3' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "6fe07c6acce0e0f5",
                "4aa46206a958a217"
            ]
        ]
    },
    {
        "id": "6fe07c6acce0e0f5",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "GET count for W3",
        "func": "msg.payload=global.get(\"W3\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "c7f2898d1b148e62"
            ]
        ]
    },
    {
        "id": "a2bbb7843616f0a2",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "c17ee878afcbd609"
            ]
        ]
    },
    {
        "id": "c7f2898d1b148e62",
        "type": "ui_text",
        "z": "a3e57d984ff8d19b",
        "group": "a81c2c5f1faf946d",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W3 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "c17ee878afcbd609",
        "type": "ui_text",
        "z": "a3e57d984ff8d19b",
        "group": "a81c2c5f1faf946d",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W3-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "abe9c51676c08bf0",
        "type": "mqtt out",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "topic": "W3/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "4b2ed5778c051f83",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "reset W3",
        "func": "global.set(\"W3\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "762937adb273056d"
            ]
        ]
    },
    {
        "id": "762937adb273056d",
        "type": "mqtt out",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "topic": "W3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "dafa6d1ede2b50ca",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from W3 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "5915ed9a3f282de7",
                "13261937950913d5"
            ]
        ]
    },
    {
        "id": "efad702e8b7b76e2",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "dafa6d1ede2b50ca"
            ]
        ]
    },
    {
        "id": "5915ed9a3f282de7",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "626a39af61b4bf28"
            ]
        ]
    },
    {
        "id": "13261937950913d5",
        "type": "ui_table",
        "z": "a3e57d984ff8d19b",
        "group": "a81c2c5f1faf946d",
        "name": "W3 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "626a39af61b4bf28",
        "type": "ui_chart",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "group": "a81c2c5f1faf946d",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W3 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3a6ae0222c089604",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Data Schedule 2 For W3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "fdeb40c4ee8728cb"
            ]
        ]
    },
    {
        "id": "338962b420bc8a7a",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Data Schedule 1 For W3 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "fdeb40c4ee8728cb"
            ]
        ]
    },
    {
        "id": "fdeb40c4ee8728cb",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "W3 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W3\");\nglobal.set(\"W3\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "c073376b12444c67"
            ]
        ]
    },
    {
        "id": "c251234a23ea26b7",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Data Schedule 4 For W3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "fdeb40c4ee8728cb"
            ]
        ]
    },
    {
        "id": "09f9c4c0f35802ce",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Data Schedule 3 For W3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "fdeb40c4ee8728cb"
            ]
        ]
    },
    {
        "id": "c073376b12444c67",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 store data",
        "query": "INSERT INTO W3(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "a62f895feaf21e7b",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Create W3 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "a8903dbb39f250fc"
            ]
        ]
    },
    {
        "id": "a8903dbb39f250fc",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Table",
        "query": "CREATE TABLE W3 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4aa46206a958a217",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "W3 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "a2bbb7843616f0a2"
            ]
        ]
    },
    {
        "id": "16a7a4cd020ba227",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "delete W3 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "28deb8aa8d49ed3b"
            ]
        ]
    },
    {
        "id": "28deb8aa8d49ed3b",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 Table delete",
        "query": "drop TABLE W3 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "5c56eb75f3fef6f3",
        "type": "trigger",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "b46c712c2913ebd0"
            ],
            [
                "dd9117c82710b0ad"
            ]
        ]
    },
    {
        "id": "0cef8ad0f7bb2ef0",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "4b2ed5778c051f83"
            ]
        ]
    },
    {
        "id": "b46c712c2913ebd0",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Post W3 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W3'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "dd9117c82710b0ad",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Post W3 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W3'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "cc9aed7f4da2bce5",
        "type": "ui_text",
        "z": "a3e57d984ff8d19b",
        "group": "ef13138879730507",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W3 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "bf4e05f89e366cb6",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "W3 status check",
        "query": "SELECT status FROM machine_data where machine_no='W3';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "cc9aed7f4da2bce5"
            ]
        ]
    },
    {
        "id": "e8be707daf730248",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "bf4e05f89e366cb6"
            ]
        ]
    },
    {
        "id": "31ab1e4337d21408",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "3f1040850bf8c39a"
            ]
        ]
    },
    {
        "id": "9abe53155b44f794",
        "type": "debug",
        "z": "a3e57d984ff8d19b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "c0fcc5982e7825be",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "Initialize W3 counting",
        "func": "\nglobal.set(\"W3_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7bcd6d783c50c965",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "c0fcc5982e7825be"
            ]
        ]
    },
    {
        "id": "fb2a3796dfcb7ca0",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "comes on for first time",
        "func": "if(global.get(\"W3_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W3_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "625610ae3ca6769a"
            ]
        ]
    },
    {
        "id": "625610ae3ca6769a",
        "type": "switch",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "0dfc5624e7b7036f"
            ]
        ]
    },
    {
        "id": "0dfc5624e7b7036f",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Post W29 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W3'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1040,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "441bea58ec1ac2ab",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Get current for W3",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W3' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "86b4623dec7d0fd7"
            ]
        ]
    },
    {
        "id": "e296238210fa64a5",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "441bea58ec1ac2ab"
            ]
        ]
    },
    {
        "id": "86b4623dec7d0fd7",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "W3 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            [
                "b5c1e70eb94f2f82"
            ]
        ]
    },
    {
        "id": "b5c1e70eb94f2f82",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Post current as previous in W3",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W3'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 930,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b212311c79284684",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w3 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d670409e89bb4737",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "b212311c79284684"
            ]
        ]
    },
    {
        "id": "7026024cf4f44587",
        "type": "delay",
        "z": "a3e57d984ff8d19b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 720,
        "wires": [
            [
                "0c1c3367aacf4406"
            ]
        ]
    },
    {
        "id": "3ef909db3f34cc3d",
        "type": "inject",
        "z": "a3e57d984ff8d19b",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "011054fd0faacf1f"
            ]
        ]
    },
    {
        "id": "011054fd0faacf1f",
        "type": "postgresql",
        "z": "a3e57d984ff8d19b",
        "name": "Get last for W3",
        "query": "SELECT * FROM W3\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "9b101c54ce67990e"
            ]
        ]
    },
    {
        "id": "9b101c54ce67990e",
        "type": "function",
        "z": "a3e57d984ff8d19b",
        "name": "inject last count to W3",
        "func": "\nglobal.set(\"W3\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "aaa2207b674189ea"
            ]
        ]
    },
    {
        "id": "f814511f7e8cfe65",
        "type": "link in",
        "z": "a3e57d984ff8d19b",
        "name": "link in 22",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "105cc803d1087972"
            ]
        ]
    },
    {
        "id": "e8c5a2656e24e22c",
        "type": "link in",
        "z": "a3e57d984ff8d19b",
        "name": "link in 45",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 365,
        "y": 660,
        "wires": [
            [
                "6365fc39de2ac7f6"
            ]
        ]
    },
    {
        "id": "879f41c2cc684870",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Manual updating of W6 count",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    },
    {
        "id": "188556c0dca9600c",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "Process W6 Information",
        "func": "var Mcount = parseInt(global.get(\"W6\")) - parseInt(global.get(\"W6_\"));\nvar npc = (global.get(\"W6_npc\"))/(8*12);\nvar lcount = parseInt(global.get(\"lW6\"));\nvar c_count = parseInt(global.get(\"c_W6\"));\nvar eff =0;\nvar effs=\"0\";\nif(lcount!=0)\n{  npc=npc*lcount;\n    eff = Mcount / npc;\n    effs=\"\"+(eff*100);\n}\nlcount+=1;\nglobal.set(\"lW6\",lcount);\nmsg.payload1=Mcount;\nmsg.payload2 = effs;\nif(eff==NaN)\n{\nmsg.payload2='0';\n}\nmsg.payload3 =(Mcount-c_count)*8*12;\nmsg.payload4 =c_count;\nmsg.payload5 =lcount;\nglobal.set(\"c_W6\",Mcount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "73bc7ebc2c696110",
                "04706d47741e05c0"
            ]
        ]
    },
    {
        "id": "1f015503154ecc19",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Change to Shift 1 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "5e38584a8b194f3d"
            ]
        ]
    },
    {
        "id": "fd7b91ba48fe03ea",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Get Part No for W6",
        "query": "SELECT part_no FROM machine_operator where machine_no='W6' ORDER BY sno DESC LIMIT 1;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "7a62afe5b134f22d"
            ]
        ]
    },
    {
        "id": "82bc126753dac9c8",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "manual Inject without reseting W6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "fd7b91ba48fe03ea"
            ]
        ]
    },
    {
        "id": "7a62afe5b134f22d",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "W6 npc identification input",
        "func": "msg.payload=msg.payload[0].part_no;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "5fb81d80359cb717"
            ]
        ]
    },
    {
        "id": "5fb81d80359cb717",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Get W6 NPC",
        "query": "SELECT npccps FROM part_master where pcode='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "64c4cd622da74ebf"
            ]
        ]
    },
    {
        "id": "64c4cd622da74ebf",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "Set W6 NPC",
        "func": "if (msg.payload == \"\" || msg.hasOwnProperty('error')) {\n    msg.payload = 5000;\n}\nelse {\n\n    msg.payload = parseInt(msg.payload[0].npccps);\n}\nglobal.set(\"W6_npc\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "6bbd064f5b5e2428",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Post W6 data in database",
        "query": "UPDATE machine_data\nSET\tcurrent_count='{{msg.payload1}}',\n    efficiency= {{{msg.payload2}}},\n    efficiency_count='{{msg.payload3}}'\nWHERE\n    machine_no='W6'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1090,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "885e8da7dc25bbca",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 data posting",
        "query": "INSERT INTO machine_data\n\t(machine_no, current_count, efficiency,efficiency_count)\nVALUES\n    ('W6','100',80,'20');",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "49d45f19d497f94f",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "inject 20 count to W6",
        "func": "var count =parseInt(global.get(\"W6\"));\nglobal.set(\"W6\", count+20);\n\nmsg.payload = '' + (count + 20);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "ebf5c495f0894153"
            ]
        ]
    },
    {
        "id": "ebf5c495f0894153",
        "type": "mqtt out",
        "z": "9139773cfc6432c4",
        "name": "",
        "topic": "W6",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "b93ff08b5e53837f",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "manual count testing 1 for W6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "49d45f19d497f94f"
            ]
        ]
    },
    {
        "id": "133444f92867c3b7",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "inject 1 count to W6",
        "func": "var count =global.get(\"W6\");\nglobal.set(\"W6\", count+1);\n\nmsg.payload = '' + (count + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 880,
        "wires": [
            [
                "ebf5c495f0894153"
            ]
        ]
    },
    {
        "id": "8c7728f978a94ecd",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "manual count testing 2 for W6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "133444f92867c3b7"
            ]
        ]
    },
    {
        "id": "3927304b045b8c2a",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    },
    {
        "id": "811ab0d0f3117d24",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Sampling schedule1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    },
    {
        "id": "628a95cc059e3390",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    },
    {
        "id": "2010123141e6144b",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Sampling schedule 2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/5 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    },
    {
        "id": "519303b01c429ab8",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Change to Shift 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "5e38584a8b194f3d"
            ]
        ]
    },
    {
        "id": "0b7dd1bf35568fe0",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Change to Shift 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "5e38584a8b194f3d"
            ]
        ]
    },
    {
        "id": "00a3dbb2592c6eee",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Manual inject/reset W6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "5e38584a8b194f3d"
            ]
        ]
    },
    {
        "id": "748cb5dfb333daa5",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Create entry for W6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "885e8da7dc25bbca"
            ]
        ]
    },
    {
        "id": "5e38584a8b194f3d",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "Initialize W6 counting",
        "func": "global.set(\"lW6\",0);\nglobal.set(\"c_W6\", 0);\nglobal.set(\"W6_\", global.get(\"W6\"));\nglobal.set(\"W6_alive\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "fd7b91ba48fe03ea"
            ]
        ]
    },
    {
        "id": "584e26ca14076945",
        "type": "mqtt in",
        "z": "9139773cfc6432c4",
        "name": "",
        "topic": "W6",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "10e78a89.5b4fd5",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "d052d33464e91c79",
                "69762aa75fc8f072",
                "6c31727246152336",
                "71e1e6f4e2514b4e",
                "fe32138889afbc0e"
            ]
        ]
    },
    {
        "id": "d052d33464e91c79",
        "type": "ui_chart",
        "z": "9139773cfc6432c4",
        "name": "",
        "group": "d2ce95de570c2aca",
        "order": 1,
        "width": 17,
        "height": 9,
        "label": "W6 Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "69762aa75fc8f072",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "SET count for W6",
        "func": "global.set(\"W6\", msg.payload);\nvar date= new Date;\nvar times = date.getTime();\nglobal.set(\"time\",times);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6c31727246152336",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 OPERATOR Id",
        "query": "SELECT operator_id FROM machine_operator where machine_no='W6' order by sno desc limit 1  ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "201d464daee1ce4a",
                "f3b1452ae4e7aa48"
            ]
        ]
    },
    {
        "id": "201d464daee1ce4a",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "GET count for W6",
        "func": "msg.payload=global.get(\"W6\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "78e1f735b6c4dc47"
            ]
        ]
    },
    {
        "id": "d3be3ba4c5ac2eb4",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 OPERATOR Name",
        "query": "SELECT employee_name as name FROM employee_master where employee_code='{{msg.payload}}';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "9d338c566420786c"
            ]
        ]
    },
    {
        "id": "78e1f735b6c4dc47",
        "type": "ui_text",
        "z": "9139773cfc6432c4",
        "group": "d2ce95de570c2aca",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W6 Product Count",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "9d338c566420786c",
        "type": "ui_text",
        "z": "9139773cfc6432c4",
        "group": "d2ce95de570c2aca",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W6-Operator Name",
        "format": "{{msg.payload[0].name}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "9f2cc34c55e75ff0",
        "type": "mqtt out",
        "z": "9139773cfc6432c4",
        "name": "",
        "topic": "W6/operation/RESET",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 620,
        "y": 980,
        "wires": []
    },
    {
        "id": "848f8944f5a2e1f5",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "reset W6",
        "func": "global.set(\"W6\", 0);\n\nmsg.payload='0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "0b52318eaba750a3"
            ]
        ]
    },
    {
        "id": "0b52318eaba750a3",
        "type": "mqtt out",
        "z": "9139773cfc6432c4",
        "name": "",
        "topic": "W6",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "10e78a89.5b4fd5",
        "x": 550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "944c834fd6d15210",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 data for chart",
        "query": "Select LAST_VALUE (\"count\")over(order by \"sno\" desc)AS y, \"dateandtime\" as x from W6 limit 2020;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 1360,
        "wires": [
            [
                "bacdacb89da8a80b",
                "b005f40506b56802"
            ]
        ]
    },
    {
        "id": "39be98aff4d7d578",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "W6 Chart schedule",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "944c834fd6d15210"
            ]
        ]
    },
    {
        "id": "bacdacb89da8a80b",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "W6 Chart setting",
        "func": "\nmsg.payload=[{\n    \"series\":[\"A\"],\n    \"data\":[msg.payload],\n    \"lables\":[\"\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "b937f438ad0b5d28"
            ]
        ]
    },
    {
        "id": "b005f40506b56802",
        "type": "ui_table",
        "z": "9139773cfc6432c4",
        "group": "d2ce95de570c2aca",
        "name": "W6 history",
        "order": 18,
        "width": 9,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b937f438ad0b5d28",
        "type": "ui_chart",
        "z": "9139773cfc6432c4",
        "name": "",
        "group": "d2ce95de570c2aca",
        "order": 17,
        "width": 15,
        "height": 11,
        "label": "W6 chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "c9facd96d99094b7",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Data Schedule 2 For W6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 22-23 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "289378eb664502dc"
            ]
        ]
    },
    {
        "id": "5b58560a7b736f9c",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Data Schedule 1 For W6 ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 14-21 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "289378eb664502dc"
            ]
        ]
    },
    {
        "id": "289378eb664502dc",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "W6 data post",
        "func": "var t= new Date();\nvar count= global.get(\"W6\");\nglobal.set(\"W6\",count);\nmsg.params=[t.toLocaleString(),count];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "ae41bc2358d48d3f"
            ]
        ]
    },
    {
        "id": "f179daf8d3620c9c",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Data Schedule 4 For W6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 6-13 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "289378eb664502dc"
            ]
        ]
    },
    {
        "id": "bd38da35d365c316",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Data Schedule 3 For W6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-5 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "289378eb664502dc"
            ]
        ]
    },
    {
        "id": "ae41bc2358d48d3f",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 store data",
        "query": "INSERT INTO W6(dateandtime,count)\nVALUES\n    ($1,$2);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "4d65faa7cd0a506e",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Create W6 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "989a367dae348e7f"
            ]
        ]
    },
    {
        "id": "989a367dae348e7f",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 Table",
        "query": "CREATE TABLE W6 (\n    sno Serial, \n\tdateandtime varchar(25) PRIMARY KEY,\n    count varchar(100)\n);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f3b1452ae4e7aa48",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "W6 npc identification input",
        "func": "msg.payload=msg.payload[0].operator_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "d3be3ba4c5ac2eb4"
            ]
        ]
    },
    {
        "id": "33c85ed6b17d1394",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "delete W6 History table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "304b27191fe6f2fb"
            ]
        ]
    },
    {
        "id": "304b27191fe6f2fb",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 Table delete",
        "query": "drop TABLE W6 ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 380,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "71e1e6f4e2514b4e",
        "type": "trigger",
        "z": "9139773cfc6432c4",
        "name": "",
        "op1": "1",
        "op2": "Inactive",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "97d04df52d1a5a69"
            ],
            [
                "2517d2cb8bd0b632"
            ]
        ]
    },
    {
        "id": "4b20b2e01630242d",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "848f8944f5a2e1f5"
            ]
        ]
    },
    {
        "id": "97d04df52d1a5a69",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Post W6 as active",
        "query": "UPDATE machine_data\nSET\tstatus='active'\nWHERE\n    machine_no='W6'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2517d2cb8bd0b632",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Post W6 as inactive",
        "query": "UPDATE machine_data\nSET\tstatus='Inactive'\nWHERE\n    machine_no='W6'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "469e2b29ce9d30a0",
        "type": "ui_text",
        "z": "9139773cfc6432c4",
        "group": "d2ce95de570c2aca",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "W6 status",
        "format": "{{msg.payload[0].status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "6d02dd4cbfee2f5c",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "W6 status check",
        "query": "SELECT status FROM machine_data where machine_no='W6';",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "469e2b29ce9d30a0"
            ]
        ]
    },
    {
        "id": "f1766a7092856fef",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "6d02dd4cbfee2f5c"
            ]
        ]
    },
    {
        "id": "6523cf134bbfa62c",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Verify NPC ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "fd7b91ba48fe03ea"
            ]
        ]
    },
    {
        "id": "73bc7ebc2c696110",
        "type": "debug",
        "z": "9139773cfc6432c4",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload5",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "da44f1e286a50aa4",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "Initialize W6 counting",
        "func": "\nglobal.set(\"W6_alive\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9db9e6e4f23e96ec",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 920,
        "y": 220,
        "wires": [
            [
                "da44f1e286a50aa4"
            ]
        ]
    },
    {
        "id": "fe32138889afbc0e",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "comes on for first time",
        "func": "if(global.get(\"W6_alive\"))\n{\n    msg.payload=1;\n    global.set(\"W6_alive\",0);\n}\nelse\n{\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "b78457a9281a293d"
            ]
        ]
    },
    {
        "id": "b78457a9281a293d",
        "type": "switch",
        "z": "9139773cfc6432c4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "4d6fce89cf86bee5"
            ]
        ]
    },
    {
        "id": "4d6fce89cf86bee5",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Post W6 data in database",
        "query": "UPDATE machine_data\nSET\tmachine_start_time= now()\nWHERE\n    machine_no='W6'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 1010,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9bddc5aea5c068db",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Get current for W6",
        "query": "SELECT current_count,machine_start_time FROM machine_data where machine_no='W6' ;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "91dc58fd234c4a87"
            ]
        ]
    },
    {
        "id": "61c0091c70db89c7",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "9bddc5aea5c068db"
            ]
        ]
    },
    {
        "id": "91dc58fd234c4a87",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "W6 data post",
        "func": "var t = msg.payload[0].machine_start_time;\nvar count = msg.payload[0].current_count;\n//global.set(\"machine1\",count);\nmsg.payload1=t;\nmsg.payload2=count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "4b7233dbe6998904"
            ]
        ]
    },
    {
        "id": "4b7233dbe6998904",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Post current as previous in W6",
        "query": "UPDATE machine_data\nSET\tprevious_count='{{msg.payload2}}',\n    previous_machine_start_time='{{msg.payload1}}'\nWHERE\n    machine_no='W6'\nRETURNING *;",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3d6c2780b7ce0660",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Hourly Table",
        "query": "alter TABLE Hourly_report Add column\n    w6 varchar(16);",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fa345586de06de01",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "Create hourly table column",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "3d6c2780b7ce0660"
            ]
        ]
    },
    {
        "id": "04706d47741e05c0",
        "type": "delay",
        "z": "9139773cfc6432c4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 700,
        "wires": [
            [
                "6bbd064f5b5e2428"
            ]
        ]
    },
    {
        "id": "2162f6b769a96045",
        "type": "inject",
        "z": "9139773cfc6432c4",
        "name": "data recover",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "188f168c21215f4e"
            ]
        ]
    },
    {
        "id": "188f168c21215f4e",
        "type": "postgresql",
        "z": "9139773cfc6432c4",
        "name": "Get last for W6",
        "query": "SELECT * FROM W6\nwhere count is not null\nORDER BY sno\nDESC LIMIT 1",
        "postgreSQLConfig": "576ae76f9052f852",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "206d0f9982c3c064"
            ]
        ]
    },
    {
        "id": "206d0f9982c3c064",
        "type": "function",
        "z": "9139773cfc6432c4",
        "name": "inject last count to W6",
        "func": "\nglobal.set(\"W6\", msg.payload[0].count);\n\nmsg.payload = msg.payload[0].count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "ebf5c495f0894153"
            ]
        ]
    },
    {
        "id": "b697031534776ad0",
        "type": "link in",
        "z": "9139773cfc6432c4",
        "name": "link in 23",
        "links": [
            "e63285d065adb307"
        ],
        "x": 65,
        "y": 540,
        "wires": [
            [
                "5e38584a8b194f3d"
            ]
        ]
    },
    {
        "id": "49cffc1855975d4b",
        "type": "link in",
        "z": "9139773cfc6432c4",
        "name": "link in 46",
        "links": [
            "e63285d065adb307",
            "14d1d9e3fcbd4afc"
        ],
        "x": 385,
        "y": 660,
        "wires": [
            [
                "188556c0dca9600c"
            ]
        ]
    }
]